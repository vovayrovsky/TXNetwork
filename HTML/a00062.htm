<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>TXNetwork: Разное</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="Doxyfile.css" rel="stylesheet" type="text/css" />
<link href="Doxyfile.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="Logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">TXNetwork
   &#160;<span id="projectnumber">v. 0.5.1a</span>
   </div>
   <div id="projectbrief">&nbsp;ALL? Windows network in a sandbox :)</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Создано системой Doxygen 1.8.10 -->
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a00062.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#define-members">Макросы</a> &#124;
<a href="#func-members">Функции</a> &#124;
<a href="#var-members">Переменные</a>  </div>
  <div class="headertitle">
<div class="title">Разное</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Макросы</h2></td></tr>
<tr class="memitem:ga62a815bcebe103c8d30f23a878615988"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga62a815bcebe103c8d30f23a878615988">MAX</a>(a,  b)      &#160;&#160;&#160;( (a) &gt; (b) ? (a) : (b) )</td></tr>
<tr class="memdesc:ga62a815bcebe103c8d30f23a878615988"><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает максимальное из двух чисел  <a href="#ga62a815bcebe103c8d30f23a878615988">Подробнее...</a><br /></td></tr>
<tr class="separator:ga62a815bcebe103c8d30f23a878615988"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gada1fc1ec7742eaee6a6268966f7ac065"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#gada1fc1ec7742eaee6a6268966f7ac065">MIN</a>(a,  b)      &#160;&#160;&#160;( (a) &lt; (b) ? (a) : (b) )</td></tr>
<tr class="memdesc:gada1fc1ec7742eaee6a6268966f7ac065"><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает минимальное из двух чисел  <a href="#gada1fc1ec7742eaee6a6268966f7ac065">Подробнее...</a><br /></td></tr>
<tr class="separator:gada1fc1ec7742eaee6a6268966f7ac065"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacd66e8cacf954c3bc3bba81d09425a12"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#gacd66e8cacf954c3bc3bba81d09425a12">ROUND</a>(x)&#160;&#160;&#160;( (long) floor ((x) + 0.5) )</td></tr>
<tr class="memdesc:gacd66e8cacf954c3bc3bba81d09425a12"><td class="mdescLeft">&#160;</td><td class="mdescRight">Округляет число до целого  <a href="#gacd66e8cacf954c3bc3bba81d09425a12">Подробнее...</a><br /></td></tr>
<tr class="separator:gacd66e8cacf954c3bc3bba81d09425a12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad2296e7bc6bc51ec0739aad2e8ee0a9c"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#gad2296e7bc6bc51ec0739aad2e8ee0a9c">_TX_DESTROY_3D</a></td></tr>
<tr class="memdesc:gad2296e7bc6bc51ec0739aad2e8ee0a9c"><td class="mdescLeft">&#160;</td><td class="mdescRight"><em>Ну просто <b>очень</b> удобный</em> макрос.  <a href="#gad2296e7bc6bc51ec0739aad2e8ee0a9c">Подробнее...</a><br /></td></tr>
<tr class="separator:gad2296e7bc6bc51ec0739aad2e8ee0a9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga779aead84bda35892b48c54418144d4d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga779aead84bda35892b48c54418144d4d">ZERO</a>(type)    &#160;&#160;&#160;zero &lt;type&gt; ()</td></tr>
<tr class="memdesc:ga779aead84bda35892b48c54418144d4d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Обнулитель типов, не имеющих конструкторов  <a href="#ga779aead84bda35892b48c54418144d4d">Подробнее...</a><br /></td></tr>
<tr class="separator:ga779aead84bda35892b48c54418144d4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga934291e39288d75c477c6022e67920e1"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga934291e39288d75c477c6022e67920e1">assert</a>(cond)    </td></tr>
<tr class="memdesc:ga934291e39288d75c477c6022e67920e1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Замена стандартного макроса <a class="el" href="a00062.htm#ga934291e39288d75c477c6022e67920e1" title="Замена стандартного макроса assert(), с выдачей сообщения через txMessageBox(), консоль и OutputDebug...">assert()</a>, с выдачей сообщения через <a class="el" href="a00062.htm#gae35d0d923c790c414ad586db1919852e" title="Выводит сообщение в окне с помощью функции MessageBox. ">txMessageBox()</a>, консоль и OutputDebugString().  <a href="#ga934291e39288d75c477c6022e67920e1">Подробнее...</a><br /></td></tr>
<tr class="separator:ga934291e39288d75c477c6022e67920e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga889b74443b3e918adee3e31fad4653f7"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga889b74443b3e918adee3e31fad4653f7">asserted</a>&#160;&#160;&#160;|| <a class="el" href="a00062.htm#ga5cd767f8040c04a51cb0173bf9255247">TX_ERROR</a> (&quot;\a&quot; &quot;Обнаружен нулевой или ложный результат.&quot;)</td></tr>
<tr class="memdesc:ga889b74443b3e918adee3e31fad4653f7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Выводит диагностическое сообщение в случае нулевого или ложного результата.  <a href="#ga889b74443b3e918adee3e31fad4653f7">Подробнее...</a><br /></td></tr>
<tr class="separator:ga889b74443b3e918adee3e31fad4653f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga14fecb1c008314444a74c1fe7d9a113b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga14fecb1c008314444a74c1fe7d9a113b">verify</a>&#160;&#160;&#160;<a class="el" href="a00062.htm#ga934291e39288d75c477c6022e67920e1">assert</a></td></tr>
<tr class="memdesc:ga14fecb1c008314444a74c1fe7d9a113b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Выполняет команду (вычисляет выражение) и проверяет результат.  <a href="#ga14fecb1c008314444a74c1fe7d9a113b">Подробнее...</a><br /></td></tr>
<tr class="separator:ga14fecb1c008314444a74c1fe7d9a113b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5cd767f8040c04a51cb0173bf9255247"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga5cd767f8040c04a51cb0173bf9255247">TX_ERROR</a>(...)  &#160;&#160;&#160;_txError (__FILE__, __LINE__, <a class="el" href="a00062.htm#gab170f39ac0e379c324c73495f14a1309">__TX_FUNCTION__</a>, __VA_ARGS__)</td></tr>
<tr class="memdesc:ga5cd767f8040c04a51cb0173bf9255247"><td class="mdescLeft">&#160;</td><td class="mdescRight">Выводит развернутое диагностическое сообщение.  <a href="#ga5cd767f8040c04a51cb0173bf9255247">Подробнее...</a><br /></td></tr>
<tr class="separator:ga5cd767f8040c04a51cb0173bf9255247"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga61997e2af7f7c3d2e40ef9a612000220"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga61997e2af7f7c3d2e40ef9a612000220">TX_DEBUG_ERROR</a>&#160;&#160;&#160;<a class="el" href="a00062.htm#ga5cd767f8040c04a51cb0173bf9255247">TX_ERROR</a></td></tr>
<tr class="memdesc:ga61997e2af7f7c3d2e40ef9a612000220"><td class="mdescLeft">&#160;</td><td class="mdescRight">Выводит развернутое диагностическое сообщение в отладочном режиме.  <a href="#ga61997e2af7f7c3d2e40ef9a612000220">Подробнее...</a><br /></td></tr>
<tr class="separator:ga61997e2af7f7c3d2e40ef9a612000220"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadd1c9ccd036228402b807abaea14f7ee"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gadd1c9ccd036228402b807abaea14f7ee"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#gadd1c9ccd036228402b807abaea14f7ee">__TX_COMPILER__</a>&#160;&#160;&#160;&quot;Unknown C++, std=&quot;   TX_PREPROCESS (__cplusplus)</td></tr>
<tr class="memdesc:gadd1c9ccd036228402b807abaea14f7ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Имя и версия текущего компилятора <br /></td></tr>
<tr class="separator:gadd1c9ccd036228402b807abaea14f7ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga973d717438fe468dd5a5d8d45ede5312"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga973d717438fe468dd5a5d8d45ede5312"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga973d717438fe468dd5a5d8d45ede5312">__TX_FILELINE__</a>&#160;&#160;&#160;__FILE__ &quot; (&quot; TX_PREPROCESS (__LINE__) &quot;)&quot;</td></tr>
<tr class="memdesc:ga973d717438fe468dd5a5d8d45ede5312"><td class="mdescLeft">&#160;</td><td class="mdescRight">Макрос, раскрывающийся в имя файла и номер строки файла, где он встретился. <br /></td></tr>
<tr class="separator:ga973d717438fe468dd5a5d8d45ede5312"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab170f39ac0e379c324c73495f14a1309"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#gab170f39ac0e379c324c73495f14a1309">__TX_FUNCTION__</a>&#160;&#160;&#160;&quot;(&quot; <a class="el" href="a00062.htm#ga973d717438fe468dd5a5d8d45ede5312">__TX_FILELINE__</a> &quot;)&quot;</td></tr>
<tr class="memdesc:gab170f39ac0e379c324c73495f14a1309"><td class="mdescLeft">&#160;</td><td class="mdescRight">Имя текущей функции  <a href="#gab170f39ac0e379c324c73495f14a1309">Подробнее...</a><br /></td></tr>
<tr class="separator:gab170f39ac0e379c324c73495f14a1309"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3e287c38947fea870d01588fbd2a5fc9"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga3e287c38947fea870d01588fbd2a5fc9"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga3e287c38947fea870d01588fbd2a5fc9">_TX_BUILDMODE</a>&#160;&#160;&#160;&quot;Debug&quot;</td></tr>
<tr class="memdesc:ga3e287c38947fea870d01588fbd2a5fc9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Имя режима сборки <br /></td></tr>
<tr class="separator:ga3e287c38947fea870d01588fbd2a5fc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga62a815bcebe103c8d30f23a878615988"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga62a815bcebe103c8d30f23a878615988">MAX</a>(a,  b)      &#160;&#160;&#160;( (a) &gt; (b) ? (a) : (b) )</td></tr>
<tr class="memdesc:ga62a815bcebe103c8d30f23a878615988"><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает максимальное из двух чисел  <a href="#ga62a815bcebe103c8d30f23a878615988">Подробнее...</a><br /></td></tr>
<tr class="separator:ga62a815bcebe103c8d30f23a878615988"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gada1fc1ec7742eaee6a6268966f7ac065"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#gada1fc1ec7742eaee6a6268966f7ac065">MIN</a>(a,  b)      &#160;&#160;&#160;( (a) &lt; (b) ? (a) : (b) )</td></tr>
<tr class="memdesc:gada1fc1ec7742eaee6a6268966f7ac065"><td class="mdescLeft">&#160;</td><td class="mdescRight">Возвращает минимальное из двух чисел  <a href="#gada1fc1ec7742eaee6a6268966f7ac065">Подробнее...</a><br /></td></tr>
<tr class="separator:gada1fc1ec7742eaee6a6268966f7ac065"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacd66e8cacf954c3bc3bba81d09425a12"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#gacd66e8cacf954c3bc3bba81d09425a12">ROUND</a>(x)&#160;&#160;&#160;( (long) floor ((x) + 0.5) )</td></tr>
<tr class="memdesc:gacd66e8cacf954c3bc3bba81d09425a12"><td class="mdescLeft">&#160;</td><td class="mdescRight">Округляет число до целого  <a href="#gacd66e8cacf954c3bc3bba81d09425a12">Подробнее...</a><br /></td></tr>
<tr class="separator:gacd66e8cacf954c3bc3bba81d09425a12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad2296e7bc6bc51ec0739aad2e8ee0a9c"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#gad2296e7bc6bc51ec0739aad2e8ee0a9c">_TX_DESTROY_3D</a></td></tr>
<tr class="memdesc:gad2296e7bc6bc51ec0739aad2e8ee0a9c"><td class="mdescLeft">&#160;</td><td class="mdescRight"><em>Ну просто <b>очень</b> удобный</em> макрос.  <a href="#gad2296e7bc6bc51ec0739aad2e8ee0a9c">Подробнее...</a><br /></td></tr>
<tr class="separator:gad2296e7bc6bc51ec0739aad2e8ee0a9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga779aead84bda35892b48c54418144d4d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga779aead84bda35892b48c54418144d4d">ZERO</a>(type)    &#160;&#160;&#160;zero &lt;type&gt; ()</td></tr>
<tr class="memdesc:ga779aead84bda35892b48c54418144d4d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Обнулитель типов, не имеющих конструкторов  <a href="#ga779aead84bda35892b48c54418144d4d">Подробнее...</a><br /></td></tr>
<tr class="separator:ga779aead84bda35892b48c54418144d4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga934291e39288d75c477c6022e67920e1"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga934291e39288d75c477c6022e67920e1">assert</a>(cond)    </td></tr>
<tr class="memdesc:ga934291e39288d75c477c6022e67920e1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Замена стандартного макроса <a class="el" href="a00062.htm#ga934291e39288d75c477c6022e67920e1" title="Замена стандартного макроса assert(), с выдачей сообщения через txMessageBox(), консоль и OutputDebug...">assert()</a>, с выдачей сообщения через <a class="el" href="a00062.htm#gae35d0d923c790c414ad586db1919852e" title="Выводит сообщение в окне с помощью функции MessageBox. ">txMessageBox()</a>, консоль и OutputDebugString().  <a href="#ga934291e39288d75c477c6022e67920e1">Подробнее...</a><br /></td></tr>
<tr class="separator:ga934291e39288d75c477c6022e67920e1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga889b74443b3e918adee3e31fad4653f7"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga889b74443b3e918adee3e31fad4653f7">asserted</a>&#160;&#160;&#160;|| <a class="el" href="a00062.htm#ga5cd767f8040c04a51cb0173bf9255247">TX_ERROR</a> (&quot;\a&quot; &quot;Обнаружен нулевой или ложный результат.&quot;)</td></tr>
<tr class="memdesc:ga889b74443b3e918adee3e31fad4653f7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Выводит диагностическое сообщение в случае нулевого или ложного результата.  <a href="#ga889b74443b3e918adee3e31fad4653f7">Подробнее...</a><br /></td></tr>
<tr class="separator:ga889b74443b3e918adee3e31fad4653f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga14fecb1c008314444a74c1fe7d9a113b"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga14fecb1c008314444a74c1fe7d9a113b">verify</a>&#160;&#160;&#160;<a class="el" href="a00062.htm#ga934291e39288d75c477c6022e67920e1">assert</a></td></tr>
<tr class="memdesc:ga14fecb1c008314444a74c1fe7d9a113b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Выполняет команду (вычисляет выражение) и проверяет результат.  <a href="#ga14fecb1c008314444a74c1fe7d9a113b">Подробнее...</a><br /></td></tr>
<tr class="separator:ga14fecb1c008314444a74c1fe7d9a113b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5cd767f8040c04a51cb0173bf9255247"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga5cd767f8040c04a51cb0173bf9255247">TX_ERROR</a>(...)  &#160;&#160;&#160;_txError (__FILE__, __LINE__, <a class="el" href="a00062.htm#gab170f39ac0e379c324c73495f14a1309">__TX_FUNCTION__</a>, __VA_ARGS__)</td></tr>
<tr class="memdesc:ga5cd767f8040c04a51cb0173bf9255247"><td class="mdescLeft">&#160;</td><td class="mdescRight">Выводит развернутое диагностическое сообщение.  <a href="#ga5cd767f8040c04a51cb0173bf9255247">Подробнее...</a><br /></td></tr>
<tr class="separator:ga5cd767f8040c04a51cb0173bf9255247"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga61997e2af7f7c3d2e40ef9a612000220"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga61997e2af7f7c3d2e40ef9a612000220">TX_DEBUG_ERROR</a>&#160;&#160;&#160;<a class="el" href="a00062.htm#ga5cd767f8040c04a51cb0173bf9255247">TX_ERROR</a></td></tr>
<tr class="memdesc:ga61997e2af7f7c3d2e40ef9a612000220"><td class="mdescLeft">&#160;</td><td class="mdescRight">Выводит развернутое диагностическое сообщение в отладочном режиме.  <a href="#ga61997e2af7f7c3d2e40ef9a612000220">Подробнее...</a><br /></td></tr>
<tr class="separator:ga61997e2af7f7c3d2e40ef9a612000220"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadd1c9ccd036228402b807abaea14f7ee"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gadd1c9ccd036228402b807abaea14f7ee"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#gadd1c9ccd036228402b807abaea14f7ee">__TX_COMPILER__</a>&#160;&#160;&#160;&quot;Unknown C++, std=&quot;   TX_PREPROCESS (__cplusplus)</td></tr>
<tr class="memdesc:gadd1c9ccd036228402b807abaea14f7ee"><td class="mdescLeft">&#160;</td><td class="mdescRight">Имя и версия текущего компилятора <br /></td></tr>
<tr class="separator:gadd1c9ccd036228402b807abaea14f7ee"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga973d717438fe468dd5a5d8d45ede5312"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga973d717438fe468dd5a5d8d45ede5312"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga973d717438fe468dd5a5d8d45ede5312">__TX_FILELINE__</a>&#160;&#160;&#160;__FILE__ &quot; (&quot; TX_PREPROCESS (__LINE__) &quot;)&quot;</td></tr>
<tr class="memdesc:ga973d717438fe468dd5a5d8d45ede5312"><td class="mdescLeft">&#160;</td><td class="mdescRight">Макрос, раскрывающийся в имя файла и номер строки файла, где он встретился. <br /></td></tr>
<tr class="separator:ga973d717438fe468dd5a5d8d45ede5312"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab170f39ac0e379c324c73495f14a1309"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#gab170f39ac0e379c324c73495f14a1309">__TX_FUNCTION__</a>&#160;&#160;&#160;&quot;(&quot; <a class="el" href="a00062.htm#ga973d717438fe468dd5a5d8d45ede5312">__TX_FILELINE__</a> &quot;)&quot;</td></tr>
<tr class="memdesc:gab170f39ac0e379c324c73495f14a1309"><td class="mdescLeft">&#160;</td><td class="mdescRight">Имя текущей функции  <a href="#gab170f39ac0e379c324c73495f14a1309">Подробнее...</a><br /></td></tr>
<tr class="separator:gab170f39ac0e379c324c73495f14a1309"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3e287c38947fea870d01588fbd2a5fc9"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="ga3e287c38947fea870d01588fbd2a5fc9"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga3e287c38947fea870d01588fbd2a5fc9">_TX_BUILDMODE</a>&#160;&#160;&#160;&quot;Debug&quot;</td></tr>
<tr class="memdesc:ga3e287c38947fea870d01588fbd2a5fc9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Имя режима сборки <br /></td></tr>
<tr class="separator:ga3e287c38947fea870d01588fbd2a5fc9"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Функции</h2></td></tr>
<tr class="memitem:gaa4558a3bf2a126a9e19c5a3655520787"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#gaa4558a3bf2a126a9e19c5a3655520787">random</a> (int range)</td></tr>
<tr class="memdesc:gaa4558a3bf2a126a9e19c5a3655520787"><td class="mdescLeft">&#160;</td><td class="mdescRight">Генератор случайных чисел  <a href="#gaa4558a3bf2a126a9e19c5a3655520787">Подробнее...</a><br /></td></tr>
<tr class="separator:gaa4558a3bf2a126a9e19c5a3655520787"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadf7eefa9eda0d1ae48bb42cadc6759ae"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#gadf7eefa9eda0d1ae48bb42cadc6759ae">random</a> (double left, double right)</td></tr>
<tr class="memdesc:gadf7eefa9eda0d1ae48bb42cadc6759ae"><td class="mdescLeft">&#160;</td><td class="mdescRight">Генератор случайных чисел  <a href="#gadf7eefa9eda0d1ae48bb42cadc6759ae">Подробнее...</a><br /></td></tr>
<tr class="separator:gadf7eefa9eda0d1ae48bb42cadc6759ae"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0d2f29556bce1d021656c3ca520c7957"><td class="memTemplParams" colspan="2">template&lt;typename Tx , typename Ta , typename Tb &gt; </td></tr>
<tr class="memitem:ga0d2f29556bce1d021656c3ca520c7957"><td class="memTemplItemLeft" align="right" valign="top">bool&#160;</td><td class="memTemplItemRight" valign="bottom"><a class="el" href="a00062.htm#ga0d2f29556bce1d021656c3ca520c7957">In</a> (Tx x, Ta a, Tb b)</td></tr>
<tr class="memdesc:ga0d2f29556bce1d021656c3ca520c7957"><td class="mdescLeft">&#160;</td><td class="mdescRight">Проверка, находится ли параметр х внутри замкнутого интервала [a; b].  <a href="#ga0d2f29556bce1d021656c3ca520c7957">Подробнее...</a><br /></td></tr>
<tr class="separator:ga0d2f29556bce1d021656c3ca520c7957"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga5de732de72c46b992ac2feeac2de7e42"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga5de732de72c46b992ac2feeac2de7e42">tx_fpreset</a> ()</td></tr>
<tr class="memdesc:ga5de732de72c46b992ac2feeac2de7e42"><td class="mdescLeft">&#160;</td><td class="mdescRight">Переинициализирует математический сопроцессор  <a href="#ga5de732de72c46b992ac2feeac2de7e42">Подробнее...</a><br /></td></tr>
<tr class="separator:ga5de732de72c46b992ac2feeac2de7e42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga74ff1048e0d6bc458c9904fbbe0a6026"><td class="memItemLeft" align="right" valign="top">double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga74ff1048e0d6bc458c9904fbbe0a6026">txSqr</a> (double x)</td></tr>
<tr class="memdesc:ga74ff1048e0d6bc458c9904fbbe0a6026"><td class="mdescLeft">&#160;</td><td class="mdescRight"><em>Очень удобное</em> возведение числа в квадрат.  <a href="#ga74ff1048e0d6bc458c9904fbbe0a6026">Подробнее...</a><br /></td></tr>
<tr class="separator:ga74ff1048e0d6bc458c9904fbbe0a6026"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7b470eef58eabacf9c7820ce6d392506"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga7b470eef58eabacf9c7820ce6d392506">txDump</a> (const void *address, const char name[]=&quot;txDump()&quot;)</td></tr>
<tr class="memdesc:ga7b470eef58eabacf9c7820ce6d392506"><td class="mdescLeft">&#160;</td><td class="mdescRight">Распечатывает дамп области памяти в консоли.  <a href="#ga7b470eef58eabacf9c7820ce6d392506">Подробнее...</a><br /></td></tr>
<tr class="separator:ga7b470eef58eabacf9c7820ce6d392506"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="var-members"></a>
Переменные</h2></td></tr>
<tr class="memitem:gaf59817ad656dcbb3f9baebeb4d7f82f7"><td class="memItemLeft" align="right" valign="top">const double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#gaf59817ad656dcbb3f9baebeb4d7f82f7">txPI</a></td></tr>
<tr class="memdesc:gaf59817ad656dcbb3f9baebeb4d7f82f7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Число Пи  <a href="#gaf59817ad656dcbb3f9baebeb4d7f82f7">Подробнее...</a><br /></td></tr>
<tr class="separator:gaf59817ad656dcbb3f9baebeb4d7f82f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf59817ad656dcbb3f9baebeb4d7f82f7"><td class="memItemLeft" align="right" valign="top">const double&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#gaf59817ad656dcbb3f9baebeb4d7f82f7">txPI</a></td></tr>
<tr class="memdesc:gaf59817ad656dcbb3f9baebeb4d7f82f7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Число Пи  <a href="#gaf59817ad656dcbb3f9baebeb4d7f82f7">Подробнее...</a><br /></td></tr>
<tr class="separator:gaf59817ad656dcbb3f9baebeb4d7f82f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Другие полезные функции, не связанные с рисованием</h2></td></tr>
<tr class="memitem:ga177f8bcb7544821ea4b5bd0571fe7196"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga177f8bcb7544821ea4b5bd0571fe7196">txPlaySound</a> (const char filename[]=NULL, DWORD mode=SND_ASYNC)</td></tr>
<tr class="memdesc:ga177f8bcb7544821ea4b5bd0571fe7196"><td class="mdescLeft">&#160;</td><td class="mdescRight">Воспроизводит звуковой файл.  <a href="#ga177f8bcb7544821ea4b5bd0571fe7196">Подробнее...</a><br /></td></tr>
<tr class="separator:ga177f8bcb7544821ea4b5bd0571fe7196"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae35d0d923c790c414ad586db1919852e"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#gae35d0d923c790c414ad586db1919852e">txMessageBox</a> (const char *text, const char *header=&quot;TXLib сообщает&quot;, unsigned flags=0)</td></tr>
<tr class="memdesc:gae35d0d923c790c414ad586db1919852e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Выводит сообщение в окне с помощью функции MessageBox.  <a href="#gae35d0d923c790c414ad586db1919852e">Подробнее...</a><br /></td></tr>
<tr class="separator:gae35d0d923c790c414ad586db1919852e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0eb921342afd27ed2bf8a78f97872577"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga0eb921342afd27ed2bf8a78f97872577">txNotifyIcon</a> (unsigned flags, const char title[], const char format[],...) _TX_CHECK_FORMAT(3)</td></tr>
<tr class="memdesc:ga0eb921342afd27ed2bf8a78f97872577"><td class="mdescLeft">&#160;</td><td class="mdescRight">Выводит всплывающее сообщение в системном трее.  <a href="#ga0eb921342afd27ed2bf8a78f97872577">Подробнее...</a><br /></td></tr>
<tr class="separator:ga0eb921342afd27ed2bf8a78f97872577"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2b7cded1074eb3d4b25af75b4ffed73a"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga2b7cded1074eb3d4b25af75b4ffed73a">txOutputDebugPrintf</a> (const char format[],...) _TX_CHECK_FORMAT(1)</td></tr>
<tr class="memdesc:ga2b7cded1074eb3d4b25af75b4ffed73a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Выводит сообщение в отладчике.  <a href="#ga2b7cded1074eb3d4b25af75b4ffed73a">Подробнее...</a><br /></td></tr>
<tr class="separator:ga2b7cded1074eb3d4b25af75b4ffed73a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab960e009ed70b2fae96c4bca6cbd39bc"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#gab960e009ed70b2fae96c4bca6cbd39bc">sizearr</a>(arr)    &#160;&#160;&#160;( sizeof (get_size_of_an_array_with_unknown_or_nonconst_size_ (arr)) )</td></tr>
<tr class="memdesc:gab960e009ed70b2fae96c4bca6cbd39bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Вычисление размера массива в элементах  <a href="#gab960e009ed70b2fae96c4bca6cbd39bc">Подробнее...</a><br /></td></tr>
<tr class="separator:gab960e009ed70b2fae96c4bca6cbd39bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf13b370e460b5a25a00c37c1a1c10927"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gaf13b370e460b5a25a00c37c1a1c10927"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#gaf13b370e460b5a25a00c37c1a1c10927">SIZEARR</a>(arr)            &#160;&#160;&#160;( sizeof (arr) / sizeof (0[arr]) )</td></tr>
<tr class="memdesc:gaf13b370e460b5a25a00c37c1a1c10927"><td class="mdescLeft">&#160;</td><td class="mdescRight">Замена макросу <a class="el" href="a00062.htm#gab960e009ed70b2fae96c4bca6cbd39bc" title="Вычисление размера массива в элементах ">sizearr()</a> для работы в Microsoft Visual Studio 6. <br /></td></tr>
<tr class="separator:gaf13b370e460b5a25a00c37c1a1c10927"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga13174595f409e02a486969e058874f33"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga13174595f409e02a486969e058874f33">In</a> (const POINT &amp;pt, const RECT &amp;rect)</td></tr>
<tr class="memdesc:ga13174595f409e02a486969e058874f33"><td class="mdescLeft">&#160;</td><td class="mdescRight">Проверка, находится ли точка pt внутри прямоугольника rect.  <a href="#ga13174595f409e02a486969e058874f33">Подробнее...</a><br /></td></tr>
<tr class="separator:ga13174595f409e02a486969e058874f33"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga885111ebb42a2b91ec43be798fc62325"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga885111ebb42a2b91ec43be798fc62325">TX_AUTO_FUNC</a>(                   param_t,  param,  func)                                &#160;&#160;&#160;_TX_AUTO_FUNC( __LINE__, param_t, param, func )</td></tr>
<tr class="memdesc:ga885111ebb42a2b91ec43be798fc62325"><td class="mdescLeft">&#160;</td><td class="mdescRight">Автоматический вызов функции при завершении другой функции (аналог <code>__finally</code>)  <a href="#ga885111ebb42a2b91ec43be798fc62325">Подробнее...</a><br /></td></tr>
<tr class="separator:ga885111ebb42a2b91ec43be798fc62325"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae4dfd7b0d66121016d6466d2ff10e8ba"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#gae4dfd7b0d66121016d6466d2ff10e8ba">_</a>&#160;&#160;&#160;,</td></tr>
<tr class="memdesc:gae4dfd7b0d66121016d6466d2ff10e8ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Макрос, позволяющий передать переменное число параметров в какой-либо другой макрос.  <a href="#gae4dfd7b0d66121016d6466d2ff10e8ba">Подробнее...</a><br /></td></tr>
<tr class="separator:gae4dfd7b0d66121016d6466d2ff10e8ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaff3c8e496327bec13a821061787878f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gaaff3c8e496327bec13a821061787878f"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#gaaff3c8e496327bec13a821061787878f">TX_COMMA</a>&#160;&#160;&#160;,</td></tr>
<tr class="memdesc:gaaff3c8e496327bec13a821061787878f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Синоним макроса _ (<a class="el" href="a00062.htm#gae4dfd7b0d66121016d6466d2ff10e8ba">символ подчеркивания</a>) <br /></td></tr>
<tr class="separator:gaaff3c8e496327bec13a821061787878f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga43d277b4418068ebef1fd2bdbaf550f6"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga43d277b4418068ebef1fd2bdbaf550f6">_TX_MODULE</a>&#160;&#160;&#160;&quot;TXLib&quot;</td></tr>
<tr class="memdesc:ga43d277b4418068ebef1fd2bdbaf550f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Имя модуля TXLib, входит в диагностические сообщения.  <a href="#ga43d277b4418068ebef1fd2bdbaf550f6">Подробнее...</a><br /></td></tr>
<tr class="separator:ga43d277b4418068ebef1fd2bdbaf550f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Макросы для построения статической карты сообщений (Message Map)</h2></td></tr>
<tr class="memitem:gafca36de229c170968d003c75dbf3e728"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#gafca36de229c170968d003c75dbf3e728">TX_BEGIN_MESSAGE_MAP</a>()                                                                                                                              </td></tr>
<tr class="memdesc:gafca36de229c170968d003c75dbf3e728"><td class="mdescLeft">&#160;</td><td class="mdescRight">Заголовок карты сообщений (Message Map).  <a href="#gafca36de229c170968d003c75dbf3e728">Подробнее...</a><br /></td></tr>
<tr class="separator:gafca36de229c170968d003c75dbf3e728"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga36851fb6c9bcfc7eaea57befafe98e6d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga36851fb6c9bcfc7eaea57befafe98e6d">TX_HANDLE</a>(id)                                                                                                                    </td></tr>
<tr class="memdesc:ga36851fb6c9bcfc7eaea57befafe98e6d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Заголовок обработчика сообщения (Message handler) карты сообщений.  <a href="#ga36851fb6c9bcfc7eaea57befafe98e6d">Подробнее...</a><br /></td></tr>
<tr class="separator:ga36851fb6c9bcfc7eaea57befafe98e6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3637c3398b6ebfa337171beec0770fe4"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga3637c3398b6ebfa337171beec0770fe4">TX_COMMAND_MAP</a></td></tr>
<tr class="memdesc:ga3637c3398b6ebfa337171beec0770fe4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Начало карты команд (Command map) в карте сообщений.  <a href="#ga3637c3398b6ebfa337171beec0770fe4">Подробнее...</a><br /></td></tr>
<tr class="separator:ga3637c3398b6ebfa337171beec0770fe4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3f4a70a0e5076cb4f4addcab0ca760cd"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga3f4a70a0e5076cb4f4addcab0ca760cd">TX_END_MESSAGE_MAP</a></td></tr>
<tr class="memdesc:ga3f4a70a0e5076cb4f4addcab0ca760cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Завершитель карты сообщений.  <a href="#ga3f4a70a0e5076cb4f4addcab0ca760cd">Подробнее...</a><br /></td></tr>
<tr class="separator:ga3f4a70a0e5076cb4f4addcab0ca760cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Экспериментальные отладочные макросы</h2></td></tr>
<tr class="memitem:gaaa5d2cd4ba134312dcaca4e8316bbe9e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#gaaa5d2cd4ba134312dcaca4e8316bbe9e">__TX_DEBUG_MACROS</a>&#160;&#160;&#160;(&quot;Группа отладочных $-макросов&quot;)</td></tr>
<tr class="memdesc:gaaa5d2cd4ba134312dcaca4e8316bbe9e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Отладочная печать переменной во время вычисления выражения или участка кода во время его выполнения.  <a href="#gaaa5d2cd4ba134312dcaca4e8316bbe9e">Подробнее...</a><br /></td></tr>
<tr class="separator:gaaa5d2cd4ba134312dcaca4e8316bbe9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Другие полезные функции, не связанные с рисованием</h2></td></tr>
<tr class="memitem:gab960e009ed70b2fae96c4bca6cbd39bc"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#gab960e009ed70b2fae96c4bca6cbd39bc">sizearr</a>(arr)    &#160;&#160;&#160;( sizeof (get_size_of_an_array_with_unknown_or_nonconst_size_ (arr)) )</td></tr>
<tr class="memdesc:gab960e009ed70b2fae96c4bca6cbd39bc"><td class="mdescLeft">&#160;</td><td class="mdescRight">Вычисление размера массива в элементах  <a href="#gab960e009ed70b2fae96c4bca6cbd39bc">Подробнее...</a><br /></td></tr>
<tr class="separator:gab960e009ed70b2fae96c4bca6cbd39bc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf13b370e460b5a25a00c37c1a1c10927"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gaf13b370e460b5a25a00c37c1a1c10927"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#gaf13b370e460b5a25a00c37c1a1c10927">SIZEARR</a>(arr)            &#160;&#160;&#160;( sizeof (arr) / sizeof (0[arr]) )</td></tr>
<tr class="memdesc:gaf13b370e460b5a25a00c37c1a1c10927"><td class="mdescLeft">&#160;</td><td class="mdescRight">Замена макросу <a class="el" href="a00062.htm#gab960e009ed70b2fae96c4bca6cbd39bc" title="Вычисление размера массива в элементах ">sizearr()</a> для работы в Microsoft Visual Studio 6. <br /></td></tr>
<tr class="separator:gaf13b370e460b5a25a00c37c1a1c10927"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga885111ebb42a2b91ec43be798fc62325"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga885111ebb42a2b91ec43be798fc62325">TX_AUTO_FUNC</a>(                   param_t,  param,  func)                                &#160;&#160;&#160;_TX_AUTO_FUNC( __LINE__, param_t, param, func )</td></tr>
<tr class="memdesc:ga885111ebb42a2b91ec43be798fc62325"><td class="mdescLeft">&#160;</td><td class="mdescRight">Автоматический вызов функции при завершении другой функции (аналог <code>__finally</code>)  <a href="#ga885111ebb42a2b91ec43be798fc62325">Подробнее...</a><br /></td></tr>
<tr class="separator:ga885111ebb42a2b91ec43be798fc62325"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gae4dfd7b0d66121016d6466d2ff10e8ba"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#gae4dfd7b0d66121016d6466d2ff10e8ba">_</a>&#160;&#160;&#160;,</td></tr>
<tr class="memdesc:gae4dfd7b0d66121016d6466d2ff10e8ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">Макрос, позволяющий передать переменное число параметров в какой-либо другой макрос.  <a href="#gae4dfd7b0d66121016d6466d2ff10e8ba">Подробнее...</a><br /></td></tr>
<tr class="separator:gae4dfd7b0d66121016d6466d2ff10e8ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaff3c8e496327bec13a821061787878f"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="gaaff3c8e496327bec13a821061787878f"></a>
#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#gaaff3c8e496327bec13a821061787878f">TX_COMMA</a>&#160;&#160;&#160;,</td></tr>
<tr class="memdesc:gaaff3c8e496327bec13a821061787878f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Синоним макроса _ (<a class="el" href="a00062.htm#gae4dfd7b0d66121016d6466d2ff10e8ba">символ подчеркивания</a>) <br /></td></tr>
<tr class="separator:gaaff3c8e496327bec13a821061787878f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga43d277b4418068ebef1fd2bdbaf550f6"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga43d277b4418068ebef1fd2bdbaf550f6">_TX_MODULE</a>&#160;&#160;&#160;&quot;TXLib&quot;</td></tr>
<tr class="memdesc:ga43d277b4418068ebef1fd2bdbaf550f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Имя модуля TXLib, входит в диагностические сообщения.  <a href="#ga43d277b4418068ebef1fd2bdbaf550f6">Подробнее...</a><br /></td></tr>
<tr class="separator:ga43d277b4418068ebef1fd2bdbaf550f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Макросы для построения статической карты сообщений (Message Map)</h2></td></tr>
<tr class="memitem:gafca36de229c170968d003c75dbf3e728"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#gafca36de229c170968d003c75dbf3e728">TX_BEGIN_MESSAGE_MAP</a>()                                                                                                                              </td></tr>
<tr class="memdesc:gafca36de229c170968d003c75dbf3e728"><td class="mdescLeft">&#160;</td><td class="mdescRight">Заголовок карты сообщений (Message Map).  <a href="#gafca36de229c170968d003c75dbf3e728">Подробнее...</a><br /></td></tr>
<tr class="separator:gafca36de229c170968d003c75dbf3e728"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga36851fb6c9bcfc7eaea57befafe98e6d"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga36851fb6c9bcfc7eaea57befafe98e6d">TX_HANDLE</a>(id)                                                                                                                    </td></tr>
<tr class="memdesc:ga36851fb6c9bcfc7eaea57befafe98e6d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Заголовок обработчика сообщения (Message handler) карты сообщений.  <a href="#ga36851fb6c9bcfc7eaea57befafe98e6d">Подробнее...</a><br /></td></tr>
<tr class="separator:ga36851fb6c9bcfc7eaea57befafe98e6d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3637c3398b6ebfa337171beec0770fe4"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga3637c3398b6ebfa337171beec0770fe4">TX_COMMAND_MAP</a></td></tr>
<tr class="memdesc:ga3637c3398b6ebfa337171beec0770fe4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Начало карты команд (Command map) в карте сообщений.  <a href="#ga3637c3398b6ebfa337171beec0770fe4">Подробнее...</a><br /></td></tr>
<tr class="separator:ga3637c3398b6ebfa337171beec0770fe4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3f4a70a0e5076cb4f4addcab0ca760cd"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#ga3f4a70a0e5076cb4f4addcab0ca760cd">TX_END_MESSAGE_MAP</a></td></tr>
<tr class="memdesc:ga3f4a70a0e5076cb4f4addcab0ca760cd"><td class="mdescLeft">&#160;</td><td class="mdescRight">Завершитель карты сообщений.  <a href="#ga3f4a70a0e5076cb4f4addcab0ca760cd">Подробнее...</a><br /></td></tr>
<tr class="separator:ga3f4a70a0e5076cb4f4addcab0ca760cd"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Экспериментальные отладочные макросы</h2></td></tr>
<tr class="memitem:gaaa5d2cd4ba134312dcaca4e8316bbe9e"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00062.htm#gaaa5d2cd4ba134312dcaca4e8316bbe9e">__TX_DEBUG_MACROS</a>&#160;&#160;&#160;(&quot;Группа отладочных $-макросов&quot;)</td></tr>
<tr class="memdesc:gaaa5d2cd4ba134312dcaca4e8316bbe9e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Отладочная печать переменной во время вычисления выражения или участка кода во время его выполнения.  <a href="#gaaa5d2cd4ba134312dcaca4e8316bbe9e">Подробнее...</a><br /></td></tr>
<tr class="separator:gaaa5d2cd4ba134312dcaca4e8316bbe9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Подробное описание</h2>
<h2 class="groupheader">Макросы</h2>
<a class="anchor" id="gab960e009ed70b2fae96c4bca6cbd39bc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define sizearr</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">arr</td><td>)</td>
          <td>&#160;&#160;&#160;( sizeof (get_size_of_an_array_with_unknown_or_nonconst_size_ (arr)) )</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Вычисление размера массива в элементах </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">arr</td><td>Имя массива</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>Размер массива в элементах (не в байтах). <pre class="fragment">     Макрос sizearr() вычисляет размер массива в элементах, проверяя, можно ли его правильно вычислить при
     компиляции.

     Макрос SIZEARR() просто делит размер всего массива в байтах на размер его элемента, получается размер
     массива в элементах.
     Он &lt;b&gt;не проверяет,&lt;/b&gt; можно ли его правильно вычислить, и при неправильном использовании может
     выдать &lt;b&gt;неверный размер.&lt;/b&gt;
</pre></dd></dl>
<dl class="section warning"><dt>Предупреждения</dt><dd><a class="el" href="a00062.htm#gaf13b370e460b5a25a00c37c1a1c10927" title="Замена макросу sizearr() для работы в Microsoft Visual Studio 6. ">SIZEARR()</a> выдает неверный размер, если определение массива вместе с его размером, известным при компиляции, недоступно в месте использования <a class="el" href="a00062.htm#gaf13b370e460b5a25a00c37c1a1c10927" title="Замена макросу sizearr() для работы в Microsoft Visual Studio 6. ">SIZEARR()</a>. См. пример ниже.</dd></dl>
<dl class="section note"><dt>Заметки</dt><dd>В Microsoft Visual Studio 6 макрос <a class="el" href="a00062.htm#gab960e009ed70b2fae96c4bca6cbd39bc" title="Вычисление размера массива в элементах ">sizearr()</a> недоступен - у ее компилятора недостаточно сил, чтобы скомпилировать его. :(</dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;void test()</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;    {</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;    // Размер этого массива, хоть и не указан, но может быть автоматически определен</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;    // компилятором при компиляции программы. Он равен 4 (четыре структуры POINT).</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;    POINT coord[] = { {110, 110}, {120, 120}, {130, 110}, {140, 120} };</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;    // Здесь размер массива известен при компиляции, т.к. он был определен тут же.</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;    for (int i = 0; i &lt; sizearr (coord) - 1; i++)</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;        txLine (coord[i].x, coord[i].y, coord[i+1].x, coord[i+1].y);</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;    DrawLines1 (coord);                  // Попытка передать массив без передачи размера.</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;    DrawLines2 (coord, sizearr (coord)); // Правильная передача размера массива.</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    DrawLines3 (coord);                  // В принципе, можно и так, но тут ВОДЯТСЯ ШАБЛОНЫ.</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    }</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;// Функции DrawLines1 и DrawLines2 определены так:</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;void DrawLines1 (const POINT coord[])</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    {</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    // Массивы в Си передаются как указатели на начало массива. Поэтому:</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    // 1) sizearr здесь выдаст ошибку компиляции, и ее легко будет найти.</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    // 2) SIZEARR здесь неверно посчитает размер, что намного хуже, чем ошибка компиляции,</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    //      т.к. он будет равен sizeof (POINT*) / sizeof (POINT) == 4/8 == 0, что станет</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    //      трудноуловимой логической ошибкой времени исполнения.</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    for (int i = 0; i &lt; sizearr (coord) - 1; i++)</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        txLine (coord[i].x, coord[i].y, coord[i+1].x, coord[i+1].y);</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    }</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;void DrawLines2 (const POINT coord[], int n)</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    {</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    // Здесь размер приходит как параметр n, так что все просто. Вызывающая сторона (функция</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    // test) правильно вычисляет его и передает функции DrawLines2, которая им пользуется.</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    for (int i = 0; i &lt; n - 1; i++)</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        txLine (coord[i].x, coord[i].y, coord[i+1].x, coord[i+1].y);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    }</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;// HIC SVNT TEMPLATES</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;template &lt;int size&gt;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;void DrawLines3 (const POINT (&amp;coord) [size])</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    {</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    for (int i = 0; i &lt; size - 1; i++)</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        txLine (coord[i].x, coord[i].y, coord[i+1].x, coord[i+1].y);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    }</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00049_source.htm">Example02/TXLib.h</a> строка <a class="el" href="a00049_source.htm#l02850">2850</a></p>

</div>
</div>
<a class="anchor" id="ga62a815bcebe103c8d30f23a878615988"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MAX</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">b&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;( (a) &gt; (b) ? (a) : (b) )</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Возвращает максимальное из двух чисел </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">a</td><td>Одно из чисел :) </td></tr>
    <tr><td class="paramname">b</td><td>Другое из чисел :)</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>Максимальное из двух чисел a и b</dd></dl>
<dl class="section warning"><dt>Предупреждения</dt><dd>Это <b>макрос</b>, и аргументы <code>a</code> и <code>b</code> могут вычисляться в нем два раза. Поэтому не используйте в нем побочных действий <code>++</code>, <code>&ndash;</code>, <code>+=</code> и т.п. Например, <b>не</b> пишите так: <code>int m = MAX (++x, y += 2);</code></dd></dl>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00062.htm#gada1fc1ec7742eaee6a6268966f7ac065" title="Возвращает минимальное из двух чисел ">MIN()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;if (MAX (3, 7) != 7) printf (&quot;Your CPU is broken, throw it away.&quot;);</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00049_source.htm">Example02/TXLib.h</a> строка <a class="el" href="a00049_source.htm#l03018">3018</a></p>

</div>
</div>
<a class="anchor" id="gada1fc1ec7742eaee6a6268966f7ac065"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MIN</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">b&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;( (a) &lt; (b) ? (a) : (b) )</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Возвращает минимальное из двух чисел </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">a</td><td>Одно из чисел :) </td></tr>
    <tr><td class="paramname">b</td><td>Другое из чисел :)</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>Минимальное из двух чисел a и b</dd></dl>
<dl class="section warning"><dt>Предупреждения</dt><dd>Это <b>макрос</b>, и аргументы <code>a</code> и <code>b</code> могут вычисляться в нем два раза. Поэтому не используйте в нем побочных действий <code>++</code>, <code>&ndash;</code>, <code>+=</code> и т.п. Например, <b>не</b> пишите так: <code>int m = MIN (x&ndash;, y /= 2);</code></dd></dl>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00062.htm#ga62a815bcebe103c8d30f23a878615988" title="Возвращает максимальное из двух чисел ">MAX()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;if (MIN (3, 7) != 3) printf (&quot;Your CPU is still broken, throw it away twice.&quot;);</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00049_source.htm">Example02/TXLib.h</a> строка <a class="el" href="a00049_source.htm#l03041">3041</a></p>

</div>
</div>
<a class="anchor" id="gacd66e8cacf954c3bc3bba81d09425a12"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ROUND</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;( (long) floor ((x) + 0.5) )</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Округляет число до целого </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>Число</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>Округленное число, преобразованное в тип <code>long</code> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;double weight = 5.5;        // 5.5 kilos is the weight of Maru in 2012.</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;long Maru = ROUND (weight); // Should use ROUND() because Maru is so round. And long.</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00049_source.htm">Example02/TXLib.h</a> строка <a class="el" href="a00049_source.htm#l03065">3065</a></p>

</div>
</div>
<a class="anchor" id="gad2296e7bc6bc51ec0739aad2e8ee0a9c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define _TX_DESTROY_3D</td>
        </tr>
      </table>
</div><div class="memdoc">

<p><em>Ну просто <b>очень</b> удобный</em> макрос. </p>
<dl class="section warning"><dt>Предупреждения</dt><dd>Это еще один пример, как <b> не надо </b> писать код. <br />
<br />
 Макрос определен так: <br />
<br />
 <code> #define z 0 </code> <br />
<br />
 Замечательный макрос! Теперь на одну переменную в программе стало меньше. :((</dd></dl>
<dl class="section note"><dt>Заметки</dt><dd>(Используйте <code>#undef</code>. С <code><a href="http://www.google.ru/search?q=%23undef">http://www.google.ru/search?q=%23undef</a>#undef</code>  ваша программа станет мягкой и шелковистой.)</dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;#define _TX_DESTROY_3D</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;#include &quot;TXLib.h&quot;</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;// А теперь попробуйте объявить переменную z для расчета 3-D координат x, y, z:</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;int z = 0;  // Да! TXLib уничтожает трехмерность! Очень круто. =/</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00049_source.htm">Example02/TXLib.h</a> строка <a class="el" href="a00049_source.htm#l03183">3183</a></p>

</div>
</div>
<a class="anchor" id="ga779aead84bda35892b48c54418144d4d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ZERO</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">type</td><td>)</td>
          <td>&#160;&#160;&#160;zero &lt;type&gt; ()</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Обнулитель типов, не имеющих конструкторов </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>Имя типа</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>Значение типа <code>type</code>, покомпонентно инициализированное по умолчанию (для встроенных типов - нулем).</dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;void f (POINT p);</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;...</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;POINT z = {}; f (z);  // Так без ZERO</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;f (ZERO (POINT));     // Так с ZERO</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00049_source.htm">Example02/TXLib.h</a> строка <a class="el" href="a00049_source.htm#l03211">3211</a></p>

</div>
</div>
<a class="anchor" id="ga885111ebb42a2b91ec43be798fc62325"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TX_AUTO_FUNC</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">param_t, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">param, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">func&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;_TX_AUTO_FUNC( __LINE__, param_t, param, func )</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Автоматический вызов функции при завершении другой функции (аналог <code>__finally</code>) </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">param_t</td><td>Тип параметра автоматически вызываемой функции </td></tr>
    <tr><td class="paramname">param</td><td>Имя параметра автоматически вызываемой функции </td></tr>
    <tr><td class="paramname">func</td><td>Тело автоматически вызываемой функции (фигурные скобки не обязательны)</td></tr>
  </table>
  </dd>
</dl>
<dl class="section user"><dt>Макрос TX_AUTO_FUNC (param_t, param, func)</dt><dd></dd></dl>
<dl class="section note"><dt>Заметки</dt><dd><ul>
<li>Для автоматически вызываемой функции допускается только <em>один</em> параметр.</li>
<li>Его тип <code>param_t</code> и имя <code>param</code> должны соответствовать определению переменной, доступной в текущей области видимости. Параметр вызываемой функции будет связан с этой переменной через ссылку.</li>
<li>Синоним: TX_FINALLY</li>
</ul>
</dd></dl>
<dl class="section warning"><dt>Предупреждения</dt><dd>В Microsoft Visual Studio 6 и 2003 в отладочной конфигурации (Debug) этот макрос работать не будет, см. <a href="http://support.microsoft.com/kb/199057">MS KB Article 199057</a>. Можно обходиться макросом <code>_TX_AUTO_FUNC</code>, см. его определение в исходном тексте рядом с определением <code>TX_AUTO_FUNC</code>.</dd></dl>
<dl class="section user"><dt>Макрос tx_auto_func (func)</dt><dd></dd></dl>
<dl class="section note"><dt>Заметки</dt><dd><ul>
<li><em>Все</em> переменные вызываемой функции связываются с переменными внешней функции по ссылке.</li>
<li>Их названия и типы <em>не</em> указываются. Указывается только тело вызываемой функции.</li>
<li>Эта форма использует лямбда-функции <code>C++0x</code>, поэтому при компиляции требуется <em>MSVS 2010</em> или <em>GCC не ниже версии 4.5 с ключом компиляции <code>-std=c++0x</code> или <code>-std=c++11</code>.</em></li>
<li>Синоним: tx_finally</li>
</ul>
</dd></dl>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00015.htm" title="Класс для автоматической блокировки и разблокировки критической секции. ">txAutoLock</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;void f1()</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;    {</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;    int x = 1;</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;    TX_AUTO_FUNC (int, x, $(x));              // Will be printed at return</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;    FILE* f = fopen (__FILE__&quot;.o.txt&quot;, &quot;w&quot;);  // Will be closed at return</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;    TX_AUTO_FUNC (FILE*, f, fclose (f));</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;    fprintf (f, &quot;start: x = %d\n&quot;, x);        // Do some job</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;    x = 2;                                    // Do some job</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;    }</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;void f2()                                     // Do the same. For C++0x only</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;    {</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    int x = 1;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    tx_auto_func ($(x));                      // More simple usage</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    FILE* f = fopen (__FILE__&quot;.o.txt&quot;, &quot;w&quot;);</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    tx_auto_func (fclose (f));                // More simple usage</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    fprintf (f, &quot;start: x = %d\n&quot;, x);</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    x = 2;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    }</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00049_source.htm">Example02/TXLib.h</a> строка <a class="el" href="a00049_source.htm#l03279">3279</a></p>

</div>
</div>
<a class="anchor" id="ga934291e39288d75c477c6022e67920e1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define assert</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">cond</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Макроопределение:</b><div class="fragment"><div class="line">_txNOP ( !(cond)? (<a class="code" href="a00062.htm#ga5cd767f8040c04a51cb0173bf9255247">TX_ERROR</a> (<span class="stringliteral">&quot;\a&quot;</span> <span class="stringliteral">&quot;ВНЕЗАПНО: Логическая ошибка: &quot;</span>    \</div>
<div class="line">                                                           <span class="stringliteral">&quot;Неверно, что \&quot;%s\&quot;.&quot;</span> <a class="code" href="a00062.htm#gaaff3c8e496327bec13a821061787878f">TX_COMMA</a> #cond), \</div>
<div class="line">                                                 0/(<span class="keywordtype">int</span>)!!(cond)) : 1 )</div>
<div class="ttc" id="a00062_htm_ga5cd767f8040c04a51cb0173bf9255247"><div class="ttname"><a href="a00062.htm#ga5cd767f8040c04a51cb0173bf9255247">TX_ERROR</a></div><div class="ttdeci">#define TX_ERROR(...)  </div><div class="ttdoc">Выводит развернутое диагностическое сообщение. </div><div class="ttdef"><b>Definition:</b> <a href="a00049_source.htm#l03503">Example02/TXLib.h:3503</a></div></div>
<div class="ttc" id="a00062_htm_gaaff3c8e496327bec13a821061787878f"><div class="ttname"><a href="a00062.htm#gaaff3c8e496327bec13a821061787878f">TX_COMMA</a></div><div class="ttdeci">#define TX_COMMA</div><div class="ttdoc">Синоним макроса _ (символ подчеркивания) </div><div class="ttdef"><b>Definition:</b> <a href="a00049_source.htm#l03574">Example02/TXLib.h:3574</a></div></div>
</div><!-- fragment -->
<p>Замена стандартного макроса <a class="el" href="a00062.htm#ga934291e39288d75c477c6022e67920e1" title="Замена стандартного макроса assert(), с выдачей сообщения через txMessageBox(), консоль и OutputDebug...">assert()</a>, с выдачей сообщения через <a class="el" href="a00062.htm#gae35d0d923c790c414ad586db1919852e" title="Выводит сообщение в окне с помощью функции MessageBox. ">txMessageBox()</a>, консоль и OutputDebugString(). </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">cond</td><td>Условие для проверки</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>Не определено <pre class="fragment">     Если условие, проверяемое assert(), истинно, то макрос ничего не делает. &lt;br&gt;
     Если условие оказывается ложно, то выводится диагностическое сообщение и программа аварийно
     завершается.
</pre></dd></dl>
<dl class="section warning"><dt>Предупреждения</dt><dd><b>При компиляции в режиме Release (или если определен NDEBUG) assert превращается в пустой оператор.</b> <br />
 Не надо помещать в <a class="el" href="a00062.htm#ga934291e39288d75c477c6022e67920e1" title="Замена стандартного макроса assert(), с выдачей сообщения через txMessageBox(), консоль и OutputDebug...">assert()</a> действия, которые важны для работы алгорима!</dd></dl>
<dl class="section note"><dt>Заметки</dt><dd>Если условие <code>cond</code> может быть вычислено уже во время компиляции как ложное, компилятор может предупредить об этом (как о делении на 0). </dd>
<dd>
<small>See: <a href="http://lars-lab.jpl.nasa.gov/JPL_Coding_Standard_C.pdf">"JPL Institutional Coding
         Standard for the C Programming Language", Jet Propulsion Laboratory, California Institute of Technology, JPL DOCID D-60411, Ver. 1.0, March 3, 2009</a>, page 15.</small></dd></dl>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00062.htm#ga889b74443b3e918adee3e31fad4653f7" title="Выводит диагностическое сообщение в случае нулевого или ложного результата. ">asserted</a>, verified, <a class="el" href="a00062.htm#ga14fecb1c008314444a74c1fe7d9a113b" title="Выполняет команду (вычисляет выражение) и проверяет результат. ">verify()</a>, <a class="el" href="a00062.htm#ga5cd767f8040c04a51cb0173bf9255247" title="Выводит развернутое диагностическое сообщение. ">TX_ERROR()</a>, <a class="el" href="a00062.htm#ga61997e2af7f7c3d2e40ef9a612000220" title="Выводит развернутое диагностическое сообщение в отладочном режиме. ">TX_DEBUG_ERROR()</a>, <a class="el" href="a00062.htm#ga2b7cded1074eb3d4b25af75b4ffed73a" title="Выводит сообщение в отладчике. ">txOutputDebugPrintf()</a>, <a class="el" href="a00062.htm#gae35d0d923c790c414ad586db1919852e" title="Выводит сообщение в окне с помощью функции MessageBox. ">txMessageBox()</a>, <a class="el" href="a00062.htm#ga0eb921342afd27ed2bf8a78f97872577" title="Выводит всплывающее сообщение в системном трее. ">txNotifyIcon()</a>, <b>TX_FILELINE</b>, <b>TX_FUNCTION</b></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;assert (0 &lt;= i &amp;&amp; i &lt; ARRAY_SIZE);</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;FILE* input = fopen (&quot;a.txt&quot;, &quot;r&quot;);</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;assert (input);</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;// Этот вызов fgets() НЕ будет выполнен в режиме Release:</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;assert (fgets (str, sizeof (str) - 1, input));</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;// Здесь все будет правильно:</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;bool ok = (fclose (input) == 0);</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;assert (ok);</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00049_source.htm">Example02/TXLib.h</a> строка <a class="el" href="a00049_source.htm#l03377">3377</a></p>

</div>
</div>
<a class="anchor" id="ga889b74443b3e918adee3e31fad4653f7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define asserted&#160;&#160;&#160;|| <a class="el" href="a00062.htm#ga5cd767f8040c04a51cb0173bf9255247">TX_ERROR</a> (&quot;\a&quot; &quot;Обнаружен нулевой или ложный результат.&quot;)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Выводит диагностическое сообщение в случае нулевого или ложного результата. </p>
<dl class="section return"><dt>Возвращает</dt><dd>Всегда 0 <pre class="fragment">     Суффиксная форма макроса assert(), не теряющая в режиме Release исполнения предиката.
</pre></dd></dl>
<dl class="section note"><dt>Заметки</dt><dd><b>Предполагается, что операция в случае неуспеха возвращает 0 или false.</b> <br />
<br />
 <b>При компиляции в режиме Release (или если определен NDEBUG) asserted превращается в пустое место.</b></dd></dl>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00062.htm#ga934291e39288d75c477c6022e67920e1" title="Замена стандартного макроса assert(), с выдачей сообщения через txMessageBox(), консоль и OutputDebug...">assert()</a>, <a class="el" href="a00062.htm#ga14fecb1c008314444a74c1fe7d9a113b" title="Выполняет команду (вычисляет выражение) и проверяет результат. ">verify()</a>, verified, <a class="el" href="a00062.htm#ga5cd767f8040c04a51cb0173bf9255247" title="Выводит развернутое диагностическое сообщение. ">TX_ERROR()</a>, <a class="el" href="a00062.htm#ga61997e2af7f7c3d2e40ef9a612000220" title="Выводит развернутое диагностическое сообщение в отладочном режиме. ">TX_DEBUG_ERROR()</a>, <a class="el" href="a00062.htm#ga2b7cded1074eb3d4b25af75b4ffed73a" title="Выводит сообщение в отладчике. ">txOutputDebugPrintf()</a>, <a class="el" href="a00062.htm#gae35d0d923c790c414ad586db1919852e" title="Выводит сообщение в окне с помощью функции MessageBox. ">txMessageBox()</a>, <a class="el" href="a00062.htm#ga0eb921342afd27ed2bf8a78f97872577" title="Выводит всплывающее сообщение в системном трее. ">txNotifyIcon()</a>, <b>TX_FILELINE</b>, <b>TX_FUNCTION</b></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;FILE* input = fopen (&quot;a.txt&quot;, &quot;r&quot;); assert (input);</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;// Этот вызов fgets() будет выполнен в любом случае:</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;fgets (str, sizeof (str) - 1, input) asserted;</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;// Этот вызов fgets() НЕ будет выполнен в режиме Release:</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;assert (fgets (str, sizeof (str) - 1, input));</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;(fclose (input) != 0) asserted;</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00049_source.htm">Example02/TXLib.h</a> строка <a class="el" href="a00049_source.htm#l03416">3416</a></p>

</div>
</div>
<a class="anchor" id="ga14fecb1c008314444a74c1fe7d9a113b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define verify&#160;&#160;&#160;<a class="el" href="a00062.htm#ga934291e39288d75c477c6022e67920e1">assert</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Выполняет команду (вычисляет выражение) и проверяет результат. </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">expr</td><td>Команда (выражение)</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>1, если выражение <code>expr</code> истинно, иначе 0. <pre class="fragment">     Если условие, проверяемое verify(), истинно, то макрос ничего не делает. &lt;br&gt;
     Если условие оказывается ложно, то выводится диагностическое сообщение и программа аварийно
     завершается.
</pre></dd></dl>
<dl class="section note"><dt>Заметки</dt><dd>Действие макроса аналогично <a class="el" href="a00062.htm#ga934291e39288d75c477c6022e67920e1" title="Замена стандартного макроса assert(), с выдачей сообщения через txMessageBox(), консоль и OutputDebug...">assert()</a>, но при компиляции в режиме Release (или если определен NDEBUG) verify <b>не</b> превращается в пустой оператор.</dd></dl>
<dl class="section see"><dt>См. также</dt><dd>verified, <a class="el" href="a00062.htm#ga934291e39288d75c477c6022e67920e1" title="Замена стандартного макроса assert(), с выдачей сообщения через txMessageBox(), консоль и OutputDebug...">assert()</a>, <a class="el" href="a00062.htm#ga889b74443b3e918adee3e31fad4653f7" title="Выводит диагностическое сообщение в случае нулевого или ложного результата. ">asserted</a>, <a class="el" href="a00062.htm#ga5cd767f8040c04a51cb0173bf9255247" title="Выводит развернутое диагностическое сообщение. ">TX_ERROR()</a>, <a class="el" href="a00062.htm#ga61997e2af7f7c3d2e40ef9a612000220" title="Выводит развернутое диагностическое сообщение в отладочном режиме. ">TX_DEBUG_ERROR()</a>, <a class="el" href="a00062.htm#ga2b7cded1074eb3d4b25af75b4ffed73a" title="Выводит сообщение в отладчике. ">txOutputDebugPrintf()</a>, <a class="el" href="a00062.htm#gae35d0d923c790c414ad586db1919852e" title="Выводит сообщение в окне с помощью функции MessageBox. ">txMessageBox()</a>, <a class="el" href="a00062.htm#ga0eb921342afd27ed2bf8a78f97872577" title="Выводит всплывающее сообщение в системном трее. ">txNotifyIcon()</a>, <b>TX_FILELINE</b>, <b>TX_FUNCTION</b></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;FILE* input = verify (fopen (&quot;a.txt&quot;, &quot;r&quot;));</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;// Этот вызов fgets() БУДЕТ выполнен в режиме Release:</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;verify (fgets (str, sizeof (str) - 1, input));</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;// Здесь все тоже будет правильно:</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;verify (fclose (input) == 0);</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00049_source.htm">Example02/TXLib.h</a> строка <a class="el" href="a00049_source.htm#l03462">3462</a></p>

</div>
</div>
<a class="anchor" id="ga5cd767f8040c04a51cb0173bf9255247"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TX_ERROR</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em></td><td>)</td>
          <td>&#160;&#160;&#160;_txError (__FILE__, __LINE__, <a class="el" href="a00062.htm#gab170f39ac0e379c324c73495f14a1309">__TX_FUNCTION__</a>, __VA_ARGS__)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Выводит развернутое диагностическое сообщение. </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">msg</td><td>Сообщение с произвольным количеством параметров в стиле функции <code>printf()</code>.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Заметки</dt><dd><code>GCC</code> в режиме строгого соответствия стандарту ANSI (с ключом командной строки <code>-ansi</code>) и Microsoft Visual Studio версий 6 и 2003 не поддерживают макросы с переменным числом параметров. Поэтому, если параметров несколько, они разделяются <b>_</b> (<a class="el" href="a00062.htm#gae4dfd7b0d66121016d6466d2ff10e8ba">символом подчеркивания</a>, переопределенным в запятую) или символом TX_COMMA, вместо настоящей запятой, так как TX_ERROR &ndash; макрос. <br />
 Если в проекте используются библиотеки <a href="http://boost.org"><code>boost</code></a>, то их надо включать <b>до</b> <code>TXLib.h</code> и вместо символа подчеркивания пользоваться TX_COMMA, так как <code>boost</code> использует символ подчеркивания как свой собственный служебный макрос в модуле <code>boost::preprocessor</code>, <small>&#160;</small><span class="s"> где творится дефайновый адЪ. </span><small>&#160;</small></dd></dl>
<dl class="section return"><dt>Возвращает</dt><dd>Всегда false</dd></dl>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00062.htm#gae4dfd7b0d66121016d6466d2ff10e8ba" title="Макрос, позволяющий передать переменное число параметров в какой-либо другой макрос. ">_</a>, <a class="el" href="a00062.htm#gaaff3c8e496327bec13a821061787878f" title="Синоним макроса _ (символ подчеркивания) ">TX_COMMA</a>, <a class="el" href="a00062.htm#ga934291e39288d75c477c6022e67920e1" title="Замена стандартного макроса assert(), с выдачей сообщения через txMessageBox(), консоль и OutputDebug...">assert()</a>, <a class="el" href="a00062.htm#ga889b74443b3e918adee3e31fad4653f7" title="Выводит диагностическое сообщение в случае нулевого или ложного результата. ">asserted</a>, <a class="el" href="a00062.htm#ga14fecb1c008314444a74c1fe7d9a113b" title="Выполняет команду (вычисляет выражение) и проверяет результат. ">verify()</a>, verified, <a class="el" href="a00062.htm#ga61997e2af7f7c3d2e40ef9a612000220" title="Выводит развернутое диагностическое сообщение в отладочном режиме. ">TX_DEBUG_ERROR()</a>, <a class="el" href="a00062.htm#ga2b7cded1074eb3d4b25af75b4ffed73a" title="Выводит сообщение в отладчике. ">txOutputDebugPrintf()</a>, <a class="el" href="a00062.htm#gae35d0d923c790c414ad586db1919852e" title="Выводит сообщение в окне с помощью функции MessageBox. ">txMessageBox()</a>, <a class="el" href="a00062.htm#ga0eb921342afd27ed2bf8a78f97872577" title="Выводит всплывающее сообщение в системном трее. ">txNotifyIcon()</a>, <b>TX_FILELINE</b>, <b>TX_FUNCTION</b></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;TX_ERROR (&quot;Не смог прочитать &#39;Войну и мир&#39;. Отмазка %d: не нашел &#39;%s&#39;&quot;, reasonNum, fileName);</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00049_source.htm">Example02/TXLib.h</a> строка <a class="el" href="a00049_source.htm#l03503">3503</a></p>

</div>
</div>
<a class="anchor" id="ga61997e2af7f7c3d2e40ef9a612000220"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TX_DEBUG_ERROR&#160;&#160;&#160;<a class="el" href="a00062.htm#ga5cd767f8040c04a51cb0173bf9255247">TX_ERROR</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Выводит развернутое диагностическое сообщение в отладочном режиме. </p>
<p>Описание см. в TX_ERROR.</p>
<dl class="section note"><dt>Заметки</dt><dd>В режиме Release этот макрос не выводит ничего.</dd></dl>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00062.htm#gae4dfd7b0d66121016d6466d2ff10e8ba" title="Макрос, позволяющий передать переменное число параметров в какой-либо другой макрос. ">_</a>, <a class="el" href="a00062.htm#gaaff3c8e496327bec13a821061787878f" title="Синоним макроса _ (символ подчеркивания) ">TX_COMMA</a>, <a class="el" href="a00062.htm#ga934291e39288d75c477c6022e67920e1" title="Замена стандартного макроса assert(), с выдачей сообщения через txMessageBox(), консоль и OutputDebug...">assert()</a>, <a class="el" href="a00062.htm#ga889b74443b3e918adee3e31fad4653f7" title="Выводит диагностическое сообщение в случае нулевого или ложного результата. ">asserted</a>, <a class="el" href="a00062.htm#ga14fecb1c008314444a74c1fe7d9a113b" title="Выполняет команду (вычисляет выражение) и проверяет результат. ">verify()</a>, verified, <a class="el" href="a00062.htm#ga5cd767f8040c04a51cb0173bf9255247" title="Выводит развернутое диагностическое сообщение. ">TX_ERROR()</a>, <a class="el" href="a00062.htm#ga2b7cded1074eb3d4b25af75b4ffed73a" title="Выводит сообщение в отладчике. ">txOutputDebugPrintf()</a>, <a class="el" href="a00062.htm#gae35d0d923c790c414ad586db1919852e" title="Выводит сообщение в окне с помощью функции MessageBox. ">txMessageBox()</a>, <a class="el" href="a00062.htm#ga0eb921342afd27ed2bf8a78f97872577" title="Выводит всплывающее сообщение в системном трее. ">txNotifyIcon()</a>, <b>TX_FILELINE</b>, <b>TX_FUNCTION</b></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;TX_DEBUG_ERROR (&quot;Так и не смог прочитать &#39;Войну и мир&#39;. Отмазка %d: потерял &#39;%s&#39;&quot;, reasonNum, fileName);</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00049_source.htm">Example02/TXLib.h</a> строка <a class="el" href="a00049_source.htm#l03530">3530</a></p>

</div>
</div>
<a class="anchor" id="gae4dfd7b0d66121016d6466d2ff10e8ba"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define _&#160;&#160;&#160;,</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Макрос, позволяющий передать переменное число параметров в какой-либо другой макрос. </p>
<dl class="section note"><dt>Заметки</dt><dd><b>Символ подчеркивания и символ TX_COMMA просто переопределяются в запятую.</b></dd></dl>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00062.htm#ga5cd767f8040c04a51cb0173bf9255247" title="Выводит развернутое диагностическое сообщение. ">TX_ERROR()</a>, <a class="el" href="a00062.htm#ga61997e2af7f7c3d2e40ef9a612000220" title="Выводит развернутое диагностическое сообщение в отладочном режиме. ">TX_DEBUG_ERROR()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;TX_ERROR (&quot;Слишком умный абзац: роман &#39;Война и мир&#39;, файл &#39;%s&#39;, строка %d&quot; _ fileName _ lineNum);</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00049_source.htm">Example02/TXLib.h</a> строка <a class="el" href="a00049_source.htm#l03573">3573</a></p>

</div>
</div>
<a class="anchor" id="gab170f39ac0e379c324c73495f14a1309"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define __TX_FUNCTION__&#160;&#160;&#160;&quot;(&quot; <a class="el" href="a00062.htm#ga973d717438fe468dd5a5d8d45ede5312">__TX_FILELINE__</a> &quot;)&quot;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Имя текущей функции </p>
<dl class="section warning"><dt>Предупреждения</dt><dd>Если определение имени функции не поддерживается компилятором, то <b>TX_FUNCTION</b> раскрывается в имя исходного файла и номер строки. </dd></dl>

<p>См. определение в файле <a class="el" href="a00049_source.htm">Example02/TXLib.h</a> строка <a class="el" href="a00049_source.htm#l03642">3642</a></p>

</div>
</div>
<a class="anchor" id="ga43d277b4418068ebef1fd2bdbaf550f6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define _TX_MODULE&#160;&#160;&#160;&quot;TXLib&quot;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Имя модуля TXLib, входит в диагностические сообщения. </p>
<dl class="section note"><dt>Заметки</dt><dd>Можно переопределять до включения файла TXLib.h. </dd></dl>

<p>См. определение в файле <a class="el" href="a00049_source.htm">Example02/TXLib.h</a> строка <a class="el" href="a00049_source.htm#l03679">3679</a></p>

</div>
</div>
<a class="anchor" id="gafca36de229c170968d003c75dbf3e728"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TX_BEGIN_MESSAGE_MAP</td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Макроопределение:</b><div class="fragment"><div class="line"><span class="keyword">virtual</span> <span class="keywordtype">int</span> dialogProc (HWND _wnd, UINT _msg, WPARAM _wParam, LPARAM _lParam) _tx_override \</div>
<div class="line">        {                                                                                      \</div>
<div class="line">        (void)_wnd; (void)_msg; (void)_wParam; (void)_lParam;                                  \</div>
<div class="line">                                                                                               \</div>
<div class="line">        switch (_msg)                                                                          \</div>
<div class="line">            {                                                                                  \</div>
<div class="line">            case WM_NULL:</div>
</div><!-- fragment -->
<p>Заголовок карты сообщений (Message Map). </p>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00062.htm#gafca36de229c170968d003c75dbf3e728" title="Заголовок карты сообщений (Message Map). ">TX_BEGIN_MESSAGE_MAP()</a>, <a class="el" href="a00062.htm#ga3f4a70a0e5076cb4f4addcab0ca760cd" title="Завершитель карты сообщений. ">TX_END_MESSAGE_MAP</a>, <a class="el" href="a00062.htm#ga36851fb6c9bcfc7eaea57befafe98e6d" title="Заголовок обработчика сообщения (Message handler) карты сообщений. ">TX_HANDLE()</a>, <a class="el" href="a00062.htm#ga3637c3398b6ebfa337171beec0770fe4" title="Начало карты команд (Command map) в карте сообщений. ">TX_COMMAND_MAP</a>, <a class="el" href="a00016.htm#a39efe9383833aedb0839d2519173930e" title="Функция обработки сообщений диалогового окна. ">txDialog::dialogProc()</a>, <a class="el" href="a00016.htm" title="Базовый класс для диалоговых окон. ">txDialog</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;Cм. реализацию функции txInputBox().</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00049_source.htm">Example02/TXLib.h</a> строка <a class="el" href="a00049_source.htm#l04573">4573</a></p>

</div>
</div>
<a class="anchor" id="ga36851fb6c9bcfc7eaea57befafe98e6d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TX_HANDLE</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">id</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Макроопределение:</b><div class="fragment"><div class="line"><span class="keywordflow">break</span>;                                                                 \</div>
<div class="line">            case (<span class="keywordtype">id</span>):</div>
</div><!-- fragment -->
<p>Заголовок обработчика сообщения (Message handler) карты сообщений. </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">id</td><td>Идентификатор сообщения</td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00062.htm#gafca36de229c170968d003c75dbf3e728" title="Заголовок карты сообщений (Message Map). ">TX_BEGIN_MESSAGE_MAP()</a>, <a class="el" href="a00062.htm#ga3f4a70a0e5076cb4f4addcab0ca760cd" title="Завершитель карты сообщений. ">TX_END_MESSAGE_MAP</a>, <a class="el" href="a00062.htm#ga36851fb6c9bcfc7eaea57befafe98e6d" title="Заголовок обработчика сообщения (Message handler) карты сообщений. ">TX_HANDLE()</a>, <a class="el" href="a00062.htm#ga3637c3398b6ebfa337171beec0770fe4" title="Начало карты команд (Command map) в карте сообщений. ">TX_COMMAND_MAP</a>, <a class="el" href="a00016.htm#a39efe9383833aedb0839d2519173930e" title="Функция обработки сообщений диалогового окна. ">txDialog::dialogProc()</a>, <a class="el" href="a00016.htm" title="Базовый класс для диалоговых окон. ">txDialog</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;Cм. реализацию функции txInputBox().</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00049_source.htm">Example02/TXLib.h</a> строка <a class="el" href="a00049_source.htm#l04597">4597</a></p>

</div>
</div>
<a class="anchor" id="ga3637c3398b6ebfa337171beec0770fe4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TX_COMMAND_MAP</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Макроопределение:</b><div class="fragment"><div class="line"><span class="keywordflow">default</span>: <span class="keywordflow">break</span>;                                                        \</div>
<div class="line">            }                                                                      \</div>
<div class="line">                                                                                   \</div>
<div class="line">        if (_msg == WM_COMMAND) switch (LOWORD (_wParam))                          \</div>
<div class="line">            {                                                                      \</div>
<div class="line">            case 0:</div>
</div><!-- fragment -->
<p>Начало карты команд (Command map) в карте сообщений. </p>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00062.htm#gafca36de229c170968d003c75dbf3e728" title="Заголовок карты сообщений (Message Map). ">TX_BEGIN_MESSAGE_MAP()</a>, <a class="el" href="a00062.htm#ga3f4a70a0e5076cb4f4addcab0ca760cd" title="Завершитель карты сообщений. ">TX_END_MESSAGE_MAP</a>, <a class="el" href="a00062.htm#ga36851fb6c9bcfc7eaea57befafe98e6d" title="Заголовок обработчика сообщения (Message handler) карты сообщений. ">TX_HANDLE()</a>, <a class="el" href="a00062.htm#ga3637c3398b6ebfa337171beec0770fe4" title="Начало карты команд (Command map) в карте сообщений. ">TX_COMMAND_MAP</a>, <a class="el" href="a00016.htm#a39efe9383833aedb0839d2519173930e" title="Функция обработки сообщений диалогового окна. ">txDialog::dialogProc()</a>, <a class="el" href="a00016.htm" title="Базовый класс для диалоговых окон. ">txDialog</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;Cм. реализацию функции txInputBox().</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00049_source.htm">Example02/TXLib.h</a> строка <a class="el" href="a00049_source.htm#l04614">4614</a></p>

</div>
</div>
<a class="anchor" id="ga3f4a70a0e5076cb4f4addcab0ca760cd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TX_END_MESSAGE_MAP</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Макроопределение:</b><div class="fragment"><div class="line"><span class="keywordflow">default</span>: <span class="keywordflow">break</span>;                                                        \</div>
<div class="line">            }                                                                      \</div>
<div class="line">                                                                                   \</div>
<div class="line">        return FALSE;                                                              \</div>
<div class="line">        }</div>
</div><!-- fragment -->
<p>Завершитель карты сообщений. </p>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00062.htm#gafca36de229c170968d003c75dbf3e728" title="Заголовок карты сообщений (Message Map). ">TX_BEGIN_MESSAGE_MAP()</a>, <a class="el" href="a00062.htm#ga3f4a70a0e5076cb4f4addcab0ca760cd" title="Завершитель карты сообщений. ">TX_END_MESSAGE_MAP</a>, <a class="el" href="a00062.htm#ga36851fb6c9bcfc7eaea57befafe98e6d" title="Заголовок обработчика сообщения (Message handler) карты сообщений. ">TX_HANDLE()</a>, <a class="el" href="a00062.htm#ga3637c3398b6ebfa337171beec0770fe4" title="Начало карты команд (Command map) в карте сообщений. ">TX_COMMAND_MAP</a>, <a class="el" href="a00016.htm#a39efe9383833aedb0839d2519173930e" title="Функция обработки сообщений диалогового окна. ">txDialog::dialogProc()</a>, <a class="el" href="a00016.htm" title="Базовый класс для диалоговых окон. ">txDialog</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;Cм. реализацию функции txInputBox().</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00049_source.htm">Example02/TXLib.h</a> строка <a class="el" href="a00049_source.htm#l04635">4635</a></p>

</div>
</div>
<a class="anchor" id="gaaa5d2cd4ba134312dcaca4e8316bbe9e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define __TX_DEBUG_MACROS&#160;&#160;&#160;(&quot;Группа отладочных $-макросов&quot;)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Отладочная печать переменной во время вычисления выражения или участка кода во время его выполнения. </p>
<p>Сделай приятными твои круглые сутки отладки!</p>
<dl class="section warning"><dt>Предупреждения</dt><dd>Эти макросы могут измениться в будущих версиях. <small>&#160;</small><span class="s"> Чтобы вам повеселее жилось. </span><small>&#160;</small></dd></dl>
<dl>
<dt>Назначение: </dt>
<dd><table  border="0">
<tr valign="top">
<td><code> $ (x) </code> &#160;&#160;</td><td>Печать имени и значения переменной <code>x</code> внутри выражения. </td></tr>
<tr valign="top">
<td><code> $_(x) </code> &#160;&#160;</td><td>Печать только значения переменной <code>x</code> внутри выражения. <br />
 </td></tr>
<tr valign="top">
<td></td></tr>
<tr valign="top">
<td><code> $$ (expr) </code> &#160;&#160;</td><td>Печать выражения, его вычисление, печать и возврат значения. <br />
 Если выражение содержит оператор "запятая", не взятый в скобки, необходимо окружать expr еще одной парой скобок. </td></tr>
<tr valign="top">
<td><code> $$_(expr) </code> &#160;&#160;</td><td>То же, что и <code>$,</code> но вторая печать идет без новой строки. <br />
 </td></tr>
<tr valign="top">
<td></td></tr>
<tr valign="top">
<td><code> $$$ (expr) </code> &#160;&#160;</td><td>То же, что и <code>$,</code> но для операторов или блоков кода (без возврата значения). </td></tr>
<tr valign="top">
<td><code> $$$_(expr) </code> &#160;&#160;</td><td>То же, что и <code>$$,</code> но вторая печать идет без новой строки. <br />
 </td></tr>
<tr valign="top">
<td></td></tr>
<tr valign="top">
<td><code> $$$$ </code> &#160;&#160;</td><td>Печать местоположения в коде. </td></tr>
<tr valign="top">
<td><code> $$$$_ </code> &#160;&#160;</td><td>Печать местоположения в коде (только имя функции). </td></tr>
<tr valign="top">
<td><code> $n </code> &#160;&#160;</td><td>Перевод строки (печать <code>'\n'</code>). </td></tr>
</table>
</dd>
</dl>
<dl>
<dt>Установка атрибутов символов консоли: </dt>
<dd><table  border="0">
<tr valign="top">
<td><code>$d</code> &#160;&#160;</td><td>Светло-серый цвет &#160;&#160;</td><td>&#160;&#160;</td><td><code>$T</code> &#160;&#160;</td><td>Прозрачный цвет </td></tr>
<tr valign="top">
<td><code>$b</code> &#160;&#160;</td><td>Светло-синий цвет &#160;&#160;</td><td>&#160;&#160;</td><td><code>$B</code> &#160;&#160;</td><td>Темно-синий цвет </td></tr>
<tr valign="top">
<td><code>$g</code> &#160;&#160;</td><td>Светло-зеленый цвет &#160;&#160;</td><td>&#160;&#160;</td><td><code>$G</code> &#160;&#160;</td><td>Темно-зеленый цвет </td></tr>
<tr valign="top">
<td><code>$c</code> &#160;&#160;</td><td>Светло-бирюзовый цвет &#160;&#160;</td><td>&#160;&#160;</td><td><code>$C</code> &#160;&#160;</td><td>Темно-бирюзовый цвет </td></tr>
<tr valign="top">
<td><code>$r</code> &#160;&#160;</td><td>Светло-красный цвет &#160;&#160;</td><td>&#160;&#160;</td><td><code>$R</code> &#160;&#160;</td><td>Темно-красный цвет </td></tr>
<tr valign="top">
<td><code>$m</code> &#160;&#160;</td><td>Светло-малиновый цвет &#160;&#160;</td><td>&#160;&#160;</td><td><code>$M</code> &#160;&#160;</td><td>Темно-малиновый цвет </td></tr>
<tr valign="top">
<td><code>$y</code> &#160;&#160;</td><td>Желтый цвет &#160;&#160;</td><td>&#160;&#160;</td><td><code>$Y</code> &#160;&#160;</td><td>Темно-желтый цвет </td></tr>
<tr valign="top">
<td><code>$t</code> &#160;&#160;</td><td>Белый цвет &#160;&#160;</td><td>&#160;&#160;</td><td><code>$D</code> &#160;&#160;</td><td>Темно-серый цвет </td></tr>
</table>
</dd>
</dl>
<dl>
<dt></dt>
<dd><table  border="0">
<tr valign="top">
<td><code>$a</code> &#160;&#160;</td><td>Assertion &#160;&#160;</td><td>Светло-зеленый на зеленом &#160;&#160;</td><td>&#160;&#160;</td><td><code>$A</code> &#160;&#160;</td><td>Assertion bold &#160;&#160;</td><td>Желтый на зеленом &#160;&#160;</td><td></td></tr>
<tr valign="top">
<td><code>$i</code> &#160;&#160;</td><td>Information &#160;&#160;</td><td>Светло-синий на синем &#160;&#160;</td><td>&#160;&#160;</td><td><code>$I</code> &#160;&#160;</td><td>Information bold &#160;&#160;</td><td>Желтый на синем &#160;&#160;</td><td></td></tr>
<tr valign="top">
<td><code>$w</code> &#160;&#160;</td><td>Warning &#160;&#160;</td><td>Светло-малиновый на малиновом &#160;&#160;</td><td>&#160;&#160;</td><td><code>$W</code> &#160;&#160;</td><td>Warning bold &#160;&#160;</td><td>Желтый на малиновом &#160;&#160;</td><td></td></tr>
<tr valign="top">
<td><code>$e</code> &#160;&#160;</td><td>Error &#160;&#160;</td><td>Светло-красный на красном &#160;&#160;</td><td>&#160;&#160;</td><td><code>$E</code> &#160;&#160;</td><td>Error bold &#160;&#160;</td><td>Желтый на красном &#160;&#160;</td><td></td></tr>
<tr valign="top">
<td><code>$f</code> &#160;&#160;</td><td>Fatal &#160;&#160;</td><td>Черный на светло-красном &#160;&#160;</td><td>&#160;&#160;</td><td><code>$F</code> &#160;&#160;</td><td>Fatal bold &#160;&#160;</td><td>Малиновый на светло-красном &#160;&#160;</td><td></td></tr>
<tr valign="top">
<td><code>$l</code> &#160;&#160;</td><td>Location &#160;&#160;</td><td>Черный на темно-сером &#160;&#160;</td><td>&#160;&#160;</td><td><code>$L</code> &#160;&#160;</td><td>Location bold &#160;&#160;</td><td>Светло-серый на темно-сером &#160;&#160;</td><td></td></tr>
</table>
</dd>
</dl>
<dl>
<dt></dt>
<dd><table  border="0">
<tr valign="top">
<td><code>$s</code> &#160;&#160;</td><td>Запомнить атрибуты. При выходе из блока кода атрибуты восстанавливаются. </td></tr>
</table>
</dd>
</dl>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00062.htm#ga934291e39288d75c477c6022e67920e1" title="Замена стандартного макроса assert(), с выдачей сообщения через txMessageBox(), консоль и OutputDebug...">assert()</a>, <a class="el" href="a00062.htm#ga889b74443b3e918adee3e31fad4653f7" title="Выводит диагностическое сообщение в случае нулевого или ложного результата. ">asserted</a>, <b>TX_FILELINE</b>, <b>TX_FUNCTION</b>, <a class="el" href="a00062.htm#ga5cd767f8040c04a51cb0173bf9255247" title="Выводит развернутое диагностическое сообщение. ">TX_ERROR</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;$g  // green</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;int x = 5;</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;int y = $(x) + 1;</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;$$( x = $(y) + 2 );</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;$r  // red</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;double xy = $$( pow (x, y) );</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;$$$$</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;double h  = $$(( $(x) = x*x, y = y*y, sqrt ($(x+y)) ));</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;$$( txCreateWindow (800, 600) );</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;$d  // default color</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;$$$( if ($(xy) &lt; $(h)) { $s return $(h); } )</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;$$$$</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00049_source.htm">Example02/TXLib.h</a> строка <a class="el" href="a00049_source.htm#l08840">8840</a></p>

</div>
</div>
<a class="anchor" id="gab960e009ed70b2fae96c4bca6cbd39bc"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define sizearr</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">arr</td><td>)</td>
          <td>&#160;&#160;&#160;( sizeof (get_size_of_an_array_with_unknown_or_nonconst_size_ (arr)) )</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Вычисление размера массива в элементах </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">arr</td><td>Имя массива</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>Размер массива в элементах (не в байтах). <pre class="fragment">     Макрос sizearr() вычисляет размер массива в элементах, проверяя, можно ли его правильно вычислить при
     компиляции.

     Макрос SIZEARR() просто делит размер всего массива в байтах на размер его элемента, получается размер
     массива в элементах.
     Он &lt;b&gt;не проверяет,&lt;/b&gt; можно ли его правильно вычислить, и при неправильном использовании может
     выдать &lt;b&gt;неверный размер.&lt;/b&gt;
</pre></dd></dl>
<dl class="section warning"><dt>Предупреждения</dt><dd><a class="el" href="a00062.htm#gaf13b370e460b5a25a00c37c1a1c10927" title="Замена макросу sizearr() для работы в Microsoft Visual Studio 6. ">SIZEARR()</a> выдает неверный размер, если определение массива вместе с его размером, известным при компиляции, недоступно в месте использования <a class="el" href="a00062.htm#gaf13b370e460b5a25a00c37c1a1c10927" title="Замена макросу sizearr() для работы в Microsoft Visual Studio 6. ">SIZEARR()</a>. См. пример ниже.</dd></dl>
<dl class="section note"><dt>Заметки</dt><dd>В Microsoft Visual Studio 6 макрос <a class="el" href="a00062.htm#gab960e009ed70b2fae96c4bca6cbd39bc" title="Вычисление размера массива в элементах ">sizearr()</a> недоступен - у ее компилятора недостаточно сил, чтобы скомпилировать его. :(</dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;void test()</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;    {</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;    // Размер этого массива, хоть и не указан, но может быть автоматически определен</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;    // компилятором при компиляции программы. Он равен 4 (четыре структуры POINT).</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;    POINT coord[] = { {110, 110}, {120, 120}, {130, 110}, {140, 120} };</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;    // Здесь размер массива известен при компиляции, т.к. он был определен тут же.</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;    for (int i = 0; i &lt; sizearr (coord) - 1; i++)</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;        txLine (coord[i].x, coord[i].y, coord[i+1].x, coord[i+1].y);</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;    DrawLines1 (coord);                  // Попытка передать массив без передачи размера.</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;    DrawLines2 (coord, sizearr (coord)); // Правильная передача размера массива.</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    DrawLines3 (coord);                  // В принципе, можно и так, но тут ВОДЯТСЯ ШАБЛОНЫ.</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;    }</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;// Функции DrawLines1 и DrawLines2 определены так:</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;void DrawLines1 (const POINT coord[])</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    {</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    // Массивы в Си передаются как указатели на начало массива. Поэтому:</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;    // 1) sizearr здесь выдаст ошибку компиляции, и ее легко будет найти.</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;    // 2) SIZEARR здесь неверно посчитает размер, что намного хуже, чем ошибка компиляции,</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;    //      т.к. он будет равен sizeof (POINT*) / sizeof (POINT) == 4/8 == 0, что станет</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;    //      трудноуловимой логической ошибкой времени исполнения.</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    for (int i = 0; i &lt; sizearr (coord) - 1; i++)</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;        txLine (coord[i].x, coord[i].y, coord[i+1].x, coord[i+1].y);</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;    }</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;void DrawLines2 (const POINT coord[], int n)</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;    {</div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;    // Здесь размер приходит как параметр n, так что все просто. Вызывающая сторона (функция</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    // test) правильно вычисляет его и передает функции DrawLines2, которая им пользуется.</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;    for (int i = 0; i &lt; n - 1; i++)</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;        txLine (coord[i].x, coord[i].y, coord[i+1].x, coord[i+1].y);</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    }</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;// HIC SVNT TEMPLATES</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;template &lt;int size&gt;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;void DrawLines3 (const POINT (&amp;coord) [size])</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;    {</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;    for (int i = 0; i &lt; size - 1; i++)</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;        txLine (coord[i].x, coord[i].y, coord[i+1].x, coord[i+1].y);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;    }</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00050_source.htm">Example04/TXLib.h</a> строка <a class="el" href="a00050_source.htm#l02847">2847</a></p>

</div>
</div>
<a class="anchor" id="ga62a815bcebe103c8d30f23a878615988"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MAX</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">b&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;( (a) &gt; (b) ? (a) : (b) )</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Возвращает максимальное из двух чисел </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">a</td><td>Одно из чисел :) </td></tr>
    <tr><td class="paramname">b</td><td>Другое из чисел :)</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>Максимальное из двух чисел a и b</dd></dl>
<dl class="section warning"><dt>Предупреждения</dt><dd>Это <b>макрос</b>, и аргументы <code>a</code> и <code>b</code> могут вычисляться в нем два раза. Поэтому не используйте в нем побочных действий <code>++</code>, <code>&ndash;</code>, <code>+=</code> и т.п. Например, <b>не</b> пишите так: <code>int m = MAX (++x, y += 2);</code></dd></dl>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00062.htm#gada1fc1ec7742eaee6a6268966f7ac065" title="Возвращает минимальное из двух чисел ">MIN()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;if (MAX (3, 7) != 7) printf (&quot;Your CPU is broken, throw it away.&quot;);</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00050_source.htm">Example04/TXLib.h</a> строка <a class="el" href="a00050_source.htm#l03019">3019</a></p>

</div>
</div>
<a class="anchor" id="gada1fc1ec7742eaee6a6268966f7ac065"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define MIN</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">a, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">b&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;( (a) &lt; (b) ? (a) : (b) )</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Возвращает минимальное из двух чисел </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">a</td><td>Одно из чисел :) </td></tr>
    <tr><td class="paramname">b</td><td>Другое из чисел :)</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>Минимальное из двух чисел a и b</dd></dl>
<dl class="section warning"><dt>Предупреждения</dt><dd>Это <b>макрос</b>, и аргументы <code>a</code> и <code>b</code> могут вычисляться в нем два раза. Поэтому не используйте в нем побочных действий <code>++</code>, <code>&ndash;</code>, <code>+=</code> и т.п. Например, <b>не</b> пишите так: <code>int m = MIN (x&ndash;, y /= 2);</code></dd></dl>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00062.htm#ga62a815bcebe103c8d30f23a878615988" title="Возвращает максимальное из двух чисел ">MAX()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;if (MIN (3, 7) != 3) printf (&quot;Your CPU is still broken, throw it away twice.&quot;);</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00050_source.htm">Example04/TXLib.h</a> строка <a class="el" href="a00050_source.htm#l03042">3042</a></p>

</div>
</div>
<a class="anchor" id="gacd66e8cacf954c3bc3bba81d09425a12"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ROUND</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">x</td><td>)</td>
          <td>&#160;&#160;&#160;( (long) floor ((x) + 0.5) )</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Округляет число до целого </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>Число</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>Округленное число, преобразованное в тип <code>long</code> </dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;double weight = 5.5;        // 5.5 kilos is the weight of Maru in 2012.</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;long Maru = ROUND (weight); // Should use ROUND() because Maru is so round. And long.</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00050_source.htm">Example04/TXLib.h</a> строка <a class="el" href="a00050_source.htm#l03066">3066</a></p>

</div>
</div>
<a class="anchor" id="gad2296e7bc6bc51ec0739aad2e8ee0a9c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define _TX_DESTROY_3D</td>
        </tr>
      </table>
</div><div class="memdoc">

<p><em>Ну просто <b>очень</b> удобный</em> макрос. </p>
<dl class="section warning"><dt>Предупреждения</dt><dd>Это еще один пример, как <b> не надо </b> писать код. <br />
<br />
 Макрос определен так: <br />
<br />
 <code> #define z 0 </code> <br />
<br />
 Замечательный макрос! Теперь на одну переменную в программе стало меньше. :((</dd></dl>
<dl class="section note"><dt>Заметки</dt><dd>(Используйте <code>#undef</code>. С <code><a href="http://www.google.ru/search?q=%23undef">http://www.google.ru/search?q=%23undef</a>#undef</code>  ваша программа станет мягкой и шелковистой.)</dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;#define _TX_DESTROY_3D</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;#include &quot;TXLib.h&quot;</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;// А теперь попробуйте объявить переменную z для расчета 3-D координат x, y, z:</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;int z = 0;  // Да! TXLib уничтожает трехмерность! Очень круто. :=/</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00050_source.htm">Example04/TXLib.h</a> строка <a class="el" href="a00050_source.htm#l03184">3184</a></p>

</div>
</div>
<a class="anchor" id="ga779aead84bda35892b48c54418144d4d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define ZERO</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">type</td><td>)</td>
          <td>&#160;&#160;&#160;zero &lt;type&gt; ()</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Обнулитель типов, не имеющих конструкторов </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>Имя типа</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>Значение типа <code>type</code>, покомпонентно инициализированное по умолчанию (для встроенных типов - нулем).</dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;void f (POINT p);</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;...</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;POINT z = {}; f (z);  // Так без ZERO</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;f (ZERO (POINT));     // Так с ZERO</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00050_source.htm">Example04/TXLib.h</a> строка <a class="el" href="a00050_source.htm#l03212">3212</a></p>

</div>
</div>
<a class="anchor" id="ga885111ebb42a2b91ec43be798fc62325"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TX_AUTO_FUNC</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">param_t, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">param, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">func&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;_TX_AUTO_FUNC( __LINE__, param_t, param, func )</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Автоматический вызов функции при завершении другой функции (аналог <code>__finally</code>) </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">param_t</td><td>Тип параметра автоматически вызываемой функции </td></tr>
    <tr><td class="paramname">param</td><td>Имя параметра автоматически вызываемой функции </td></tr>
    <tr><td class="paramname">func</td><td>Тело автоматически вызываемой функции (фигурные скобки не обязательны)</td></tr>
  </table>
  </dd>
</dl>
<dl class="section user"><dt>Макрос TX_AUTO_FUNC (param_t, param, func)</dt><dd></dd></dl>
<dl class="section note"><dt>Заметки</dt><dd><ul>
<li>Для автоматически вызываемой функции допускается только <em>один</em> параметр.</li>
<li>Его тип <code>param_t</code> и имя <code>param</code> должны соответствовать определению переменной, доступной в текущей области видимости. <br />
 Параметр вызываемой функции будет связан с этой переменной через ссылку.</li>
<li>Синоним: TX_FINALLY</li>
</ul>
</dd></dl>
<dl class="section warning"><dt>Предупреждения</dt><dd>В Microsoft Visual Studio 6 и 2003 в отладочной конфигурации (Debug) этот макрос работать не будет, см. <a href="http://support.microsoft.com/kb/199057">MS KB Article 199057</a>. Можно обходиться макросом <code>_TX_AUTO_FUNC</code>, см. его определение в исходном тексте рядом с определением <code>TX_AUTO_FUNC</code>.</dd></dl>
<dl class="section user"><dt>Макрос tx_auto_func (func)</dt><dd></dd></dl>
<dl class="section note"><dt>Заметки</dt><dd><ul>
<li><em>Все</em> переменные вызываемой функции связываются с переменными внешней функции по ссылке.</li>
<li>Их названия и типы <em>не</em> указываются. Указывается только тело вызываемой функции.</li>
<li>Эта форма использует лямбда-функции <code>C++0x</code>, поэтому при компиляции требуется <em>MSVS 2010</em> или <em>GCC не ниже версии 4.5 с ключом компиляции <code>-std=c++0x</code> или <code>-std=c++11</code>.</em></li>
<li>Синоним: tx_finally</li>
</ul>
</dd></dl>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00015.htm" title="Класс для автоматической блокировки и разблокировки критической секции. ">txAutoLock</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;void f1()</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;    {</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;    int x = 1;</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;    TX_AUTO_FUNC (int, x, $(x));              // Will be printed at return</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;    FILE* f = fopen (__FILE__&quot;.o.txt&quot;, &quot;w&quot;);  // Will be closed at return</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;    TX_AUTO_FUNC (FILE*, f, fclose (f));</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;    fprintf (f, &quot;start: x = %d\n&quot;, x);        // Do some job</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;    x = 2;                                    // Do some job</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;    }</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;void f2()                                     // Do the same. For C++0x only</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;    {</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    int x = 1;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    tx_auto_func ($(x));                      // More simple usage</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    FILE* f = fopen (__FILE__&quot;.o.txt&quot;, &quot;w&quot;);</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    tx_auto_func (fclose (f));                // More simple usage</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    fprintf (f, &quot;start: x = %d\n&quot;, x);</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    x = 2;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;    }</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00050_source.htm">Example04/TXLib.h</a> строка <a class="el" href="a00050_source.htm#l03280">3280</a></p>

</div>
</div>
<a class="anchor" id="ga934291e39288d75c477c6022e67920e1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define assert</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">cond</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Макроопределение:</b><div class="fragment"><div class="line">_txNOP ( !(cond)? (<a class="code" href="a00062.htm#ga5cd767f8040c04a51cb0173bf9255247">TX_ERROR</a> (<span class="stringliteral">&quot;\a&quot;</span> <span class="stringliteral">&quot;ВНЕЗАПНО: Логическая ошибка: &quot;</span>    \</div>
<div class="line">                                                           <span class="stringliteral">&quot;Неверно, что \&quot;%s\&quot;.&quot;</span> <a class="code" href="a00062.htm#gaaff3c8e496327bec13a821061787878f">TX_COMMA</a> #cond), \</div>
<div class="line">                                                 0/(<span class="keywordtype">int</span>)!!(cond)) : 1 )</div>
<div class="ttc" id="a00062_htm_ga5cd767f8040c04a51cb0173bf9255247"><div class="ttname"><a href="a00062.htm#ga5cd767f8040c04a51cb0173bf9255247">TX_ERROR</a></div><div class="ttdeci">#define TX_ERROR(...)  </div><div class="ttdoc">Выводит развернутое диагностическое сообщение. </div><div class="ttdef"><b>Definition:</b> <a href="a00050_source.htm#l03504">Example04/TXLib.h:3504</a></div></div>
<div class="ttc" id="a00062_htm_gaaff3c8e496327bec13a821061787878f"><div class="ttname"><a href="a00062.htm#gaaff3c8e496327bec13a821061787878f">TX_COMMA</a></div><div class="ttdeci">#define TX_COMMA</div><div class="ttdoc">Синоним макроса _ (символ подчеркивания) </div><div class="ttdef"><b>Definition:</b> <a href="a00050_source.htm#l03575">Example04/TXLib.h:3575</a></div></div>
</div><!-- fragment -->
<p>Замена стандартного макроса <a class="el" href="a00062.htm#ga934291e39288d75c477c6022e67920e1" title="Замена стандартного макроса assert(), с выдачей сообщения через txMessageBox(), консоль и OutputDebug...">assert()</a>, с выдачей сообщения через <a class="el" href="a00062.htm#gae35d0d923c790c414ad586db1919852e" title="Выводит сообщение в окне с помощью функции MessageBox. ">txMessageBox()</a>, консоль и OutputDebugString(). </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">cond</td><td>Условие для проверки</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>Не определено <pre class="fragment">     Если условие, проверяемое assert(), истинно, то макрос ничего не делает. &lt;br&gt;
     Если условие оказывается ложно, то выводится диагностическое сообщение и программа аварийно
     завершается.
</pre></dd></dl>
<dl class="section warning"><dt>Предупреждения</dt><dd><b>При компиляции в режиме Release (или если определен NDEBUG) assert превращается в пустой оператор.</b> <br />
 Не надо помещать в <a class="el" href="a00062.htm#ga934291e39288d75c477c6022e67920e1" title="Замена стандартного макроса assert(), с выдачей сообщения через txMessageBox(), консоль и OutputDebug...">assert()</a> действия, которые важны для работы алгорима!</dd></dl>
<dl class="section note"><dt>Заметки</dt><dd>Если условие <code>cond</code> может быть вычислено уже во время компиляции как ложное, компилятор может предупредить об этом (как о делении на 0). </dd>
<dd>
<small>See: <a href="http://lars-lab.jpl.nasa.gov/JPL_Coding_Standard_C.pdf">"JPL Institutional Coding
         Standard for the C Programming Language", Jet Propulsion Laboratory, California Institute of Technology, JPL DOCID D-60411, Ver. 1.0, March 3, 2009</a>, page 15.</small></dd></dl>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00062.htm#ga889b74443b3e918adee3e31fad4653f7" title="Выводит диагностическое сообщение в случае нулевого или ложного результата. ">asserted</a>, verified, <a class="el" href="a00062.htm#ga14fecb1c008314444a74c1fe7d9a113b" title="Выполняет команду (вычисляет выражение) и проверяет результат. ">verify()</a>, <a class="el" href="a00062.htm#ga5cd767f8040c04a51cb0173bf9255247" title="Выводит развернутое диагностическое сообщение. ">TX_ERROR()</a>, <a class="el" href="a00062.htm#ga61997e2af7f7c3d2e40ef9a612000220" title="Выводит развернутое диагностическое сообщение в отладочном режиме. ">TX_DEBUG_ERROR()</a>, <a class="el" href="a00062.htm#ga2b7cded1074eb3d4b25af75b4ffed73a" title="Выводит сообщение в отладчике. ">txOutputDebugPrintf()</a>, <a class="el" href="a00062.htm#gae35d0d923c790c414ad586db1919852e" title="Выводит сообщение в окне с помощью функции MessageBox. ">txMessageBox()</a>, <a class="el" href="a00062.htm#ga0eb921342afd27ed2bf8a78f97872577" title="Выводит всплывающее сообщение в системном трее. ">txNotifyIcon()</a>, <b>TX_FILELINE</b>, <b>TX_FUNCTION</b></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;assert (0 &lt;= i &amp;&amp; i &lt; ARRAY_SIZE);</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;FILE* input = fopen (&quot;a.txt&quot;, &quot;r&quot;);</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;assert (input);</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;// Этот вызов fgets() НЕ будет выполнен в режиме Release:</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;assert (fgets (str, sizeof (str) - 1, input));</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;// Здесь все будет правильно:</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;bool ok = (fclose (input) == 0);</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;assert (ok);</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00050_source.htm">Example04/TXLib.h</a> строка <a class="el" href="a00050_source.htm#l03378">3378</a></p>

</div>
</div>
<a class="anchor" id="ga889b74443b3e918adee3e31fad4653f7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define asserted&#160;&#160;&#160;|| <a class="el" href="a00062.htm#ga5cd767f8040c04a51cb0173bf9255247">TX_ERROR</a> (&quot;\a&quot; &quot;Обнаружен нулевой или ложный результат.&quot;)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Выводит диагностическое сообщение в случае нулевого или ложного результата. </p>
<dl class="section return"><dt>Возвращает</dt><dd>Всегда 0 <pre class="fragment">     Суффиксная форма макроса assert(), не теряющая в режиме Release исполнения предиката.
</pre></dd></dl>
<dl class="section note"><dt>Заметки</dt><dd><b>Предполагается, что операция в случае неуспеха возвращает 0 или false.</b> <br />
<br />
 <b>При компиляции в режиме Release (или если определен NDEBUG) asserted превращается в пустое место.</b></dd></dl>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00062.htm#ga934291e39288d75c477c6022e67920e1" title="Замена стандартного макроса assert(), с выдачей сообщения через txMessageBox(), консоль и OutputDebug...">assert()</a>, <a class="el" href="a00062.htm#ga14fecb1c008314444a74c1fe7d9a113b" title="Выполняет команду (вычисляет выражение) и проверяет результат. ">verify()</a>, verified, <a class="el" href="a00062.htm#ga5cd767f8040c04a51cb0173bf9255247" title="Выводит развернутое диагностическое сообщение. ">TX_ERROR()</a>, <a class="el" href="a00062.htm#ga61997e2af7f7c3d2e40ef9a612000220" title="Выводит развернутое диагностическое сообщение в отладочном режиме. ">TX_DEBUG_ERROR()</a>, <a class="el" href="a00062.htm#ga2b7cded1074eb3d4b25af75b4ffed73a" title="Выводит сообщение в отладчике. ">txOutputDebugPrintf()</a>, <a class="el" href="a00062.htm#gae35d0d923c790c414ad586db1919852e" title="Выводит сообщение в окне с помощью функции MessageBox. ">txMessageBox()</a>, <a class="el" href="a00062.htm#ga0eb921342afd27ed2bf8a78f97872577" title="Выводит всплывающее сообщение в системном трее. ">txNotifyIcon()</a>, <b>TX_FILELINE</b>, <b>TX_FUNCTION</b></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;FILE* input = fopen (&quot;a.txt&quot;, &quot;r&quot;); assert (input);</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;// Этот вызов fgets() будет выполнен в любом случае:</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;fgets (str, sizeof (str) - 1, input) asserted;</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;// Этот вызов fgets() НЕ будет выполнен в режиме Release:</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;assert (fgets (str, sizeof (str) - 1, input));</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;(fclose (input) != 0) asserted;</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00050_source.htm">Example04/TXLib.h</a> строка <a class="el" href="a00050_source.htm#l03417">3417</a></p>

</div>
</div>
<a class="anchor" id="ga14fecb1c008314444a74c1fe7d9a113b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define verify&#160;&#160;&#160;<a class="el" href="a00062.htm#ga934291e39288d75c477c6022e67920e1">assert</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Выполняет команду (вычисляет выражение) и проверяет результат. </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">expr</td><td>Команда (выражение)</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>1, если выражение <code>expr</code> истинно, иначе 0. <pre class="fragment">     Если условие, проверяемое verify(), истинно, то макрос ничего не делает. &lt;br&gt;
     Если условие оказывается ложно, то выводится диагностическое сообщение и программа аварийно
     завершается.
</pre></dd></dl>
<dl class="section note"><dt>Заметки</dt><dd>Действие макроса аналогично <a class="el" href="a00062.htm#ga934291e39288d75c477c6022e67920e1" title="Замена стандартного макроса assert(), с выдачей сообщения через txMessageBox(), консоль и OutputDebug...">assert()</a>, но при компиляции в режиме Release (или если определен NDEBUG) verify <b>не</b> превращается в пустой оператор.</dd></dl>
<dl class="section see"><dt>См. также</dt><dd>verified, <a class="el" href="a00062.htm#ga934291e39288d75c477c6022e67920e1" title="Замена стандартного макроса assert(), с выдачей сообщения через txMessageBox(), консоль и OutputDebug...">assert()</a>, <a class="el" href="a00062.htm#ga889b74443b3e918adee3e31fad4653f7" title="Выводит диагностическое сообщение в случае нулевого или ложного результата. ">asserted</a>, <a class="el" href="a00062.htm#ga5cd767f8040c04a51cb0173bf9255247" title="Выводит развернутое диагностическое сообщение. ">TX_ERROR()</a>, <a class="el" href="a00062.htm#ga61997e2af7f7c3d2e40ef9a612000220" title="Выводит развернутое диагностическое сообщение в отладочном режиме. ">TX_DEBUG_ERROR()</a>, <a class="el" href="a00062.htm#ga2b7cded1074eb3d4b25af75b4ffed73a" title="Выводит сообщение в отладчике. ">txOutputDebugPrintf()</a>, <a class="el" href="a00062.htm#gae35d0d923c790c414ad586db1919852e" title="Выводит сообщение в окне с помощью функции MessageBox. ">txMessageBox()</a>, <a class="el" href="a00062.htm#ga0eb921342afd27ed2bf8a78f97872577" title="Выводит всплывающее сообщение в системном трее. ">txNotifyIcon()</a>, <b>TX_FILELINE</b>, <b>TX_FUNCTION</b></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;FILE* input = verify (fopen (&quot;a.txt&quot;, &quot;r&quot;));</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;// Этот вызов fgets() БУДЕТ выполнен в режиме Release:</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;verify (fgets (str, sizeof (str) - 1, input));</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;// Здесь все тоже будет правильно:</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;verify (fclose (input) == 0);</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00050_source.htm">Example04/TXLib.h</a> строка <a class="el" href="a00050_source.htm#l03463">3463</a></p>

</div>
</div>
<a class="anchor" id="ga5cd767f8040c04a51cb0173bf9255247"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TX_ERROR</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em></td><td>)</td>
          <td>&#160;&#160;&#160;_txError (__FILE__, __LINE__, <a class="el" href="a00062.htm#gab170f39ac0e379c324c73495f14a1309">__TX_FUNCTION__</a>, __VA_ARGS__)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Выводит развернутое диагностическое сообщение. </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">msg</td><td>Сообщение с произвольным количеством параметров в стиле функции <code>printf()</code>.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Заметки</dt><dd><code>GCC</code> в режиме строгого соответствия стандарту ANSI (с ключом командной строки <code>-ansi</code>) и Microsoft Visual Studio версий 6 и 2003 не поддерживают макросы с переменным числом параметров. Поэтому, если параметров несколько, они разделяются <b>_</b> (<a class="el" href="a00062.htm#gae4dfd7b0d66121016d6466d2ff10e8ba">символом подчеркивания</a>, переопределенным в запятую) или символом TX_COMMA, вместо настоящей запятой, так как TX_ERROR &ndash; макрос. <br />
 Если в проекте используются библиотеки <a href="http://boost.org"><code>boost</code></a>, то их надо включать <b>до</b> <code>TXLib.h</code> и вместо символа подчеркивания пользоваться TX_COMMA, так как <code>boost</code> использует символ подчеркивания как свой собственный служебный макрос в модуле <code>boost::preprocessor</code>, <small>&#160;</small><span class="s"> где творится дефайновый адЪ. </span><small>&#160;</small></dd></dl>
<dl class="section return"><dt>Возвращает</dt><dd>Всегда false</dd></dl>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00062.htm#gae4dfd7b0d66121016d6466d2ff10e8ba" title="Макрос, позволяющий передать переменное число параметров в какой-либо другой макрос. ">_</a>, <a class="el" href="a00062.htm#gaaff3c8e496327bec13a821061787878f" title="Синоним макроса _ (символ подчеркивания) ">TX_COMMA</a>, <a class="el" href="a00062.htm#ga934291e39288d75c477c6022e67920e1" title="Замена стандартного макроса assert(), с выдачей сообщения через txMessageBox(), консоль и OutputDebug...">assert()</a>, <a class="el" href="a00062.htm#ga889b74443b3e918adee3e31fad4653f7" title="Выводит диагностическое сообщение в случае нулевого или ложного результата. ">asserted</a>, <a class="el" href="a00062.htm#ga14fecb1c008314444a74c1fe7d9a113b" title="Выполняет команду (вычисляет выражение) и проверяет результат. ">verify()</a>, verified, <a class="el" href="a00062.htm#ga61997e2af7f7c3d2e40ef9a612000220" title="Выводит развернутое диагностическое сообщение в отладочном режиме. ">TX_DEBUG_ERROR()</a>, <a class="el" href="a00062.htm#ga2b7cded1074eb3d4b25af75b4ffed73a" title="Выводит сообщение в отладчике. ">txOutputDebugPrintf()</a>, <a class="el" href="a00062.htm#gae35d0d923c790c414ad586db1919852e" title="Выводит сообщение в окне с помощью функции MessageBox. ">txMessageBox()</a>, <a class="el" href="a00062.htm#ga0eb921342afd27ed2bf8a78f97872577" title="Выводит всплывающее сообщение в системном трее. ">txNotifyIcon()</a>, <b>TX_FILELINE</b>, <b>TX_FUNCTION</b></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;TX_ERROR (&quot;Не смог прочитать &#39;Войну и мир&#39;. Отмазка %d: не нашел &#39;%s&#39;&quot;, reasonNum, fileName);</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00050_source.htm">Example04/TXLib.h</a> строка <a class="el" href="a00050_source.htm#l03504">3504</a></p>

</div>
</div>
<a class="anchor" id="ga61997e2af7f7c3d2e40ef9a612000220"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TX_DEBUG_ERROR&#160;&#160;&#160;<a class="el" href="a00062.htm#ga5cd767f8040c04a51cb0173bf9255247">TX_ERROR</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Выводит развернутое диагностическое сообщение в отладочном режиме. </p>
<p>Описание см. в TX_ERROR.</p>
<dl class="section note"><dt>Заметки</dt><dd>В режиме Release этот макрос не выводит ничего.</dd></dl>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00062.htm#gae4dfd7b0d66121016d6466d2ff10e8ba" title="Макрос, позволяющий передать переменное число параметров в какой-либо другой макрос. ">_</a>, <a class="el" href="a00062.htm#gaaff3c8e496327bec13a821061787878f" title="Синоним макроса _ (символ подчеркивания) ">TX_COMMA</a>, <a class="el" href="a00062.htm#ga934291e39288d75c477c6022e67920e1" title="Замена стандартного макроса assert(), с выдачей сообщения через txMessageBox(), консоль и OutputDebug...">assert()</a>, <a class="el" href="a00062.htm#ga889b74443b3e918adee3e31fad4653f7" title="Выводит диагностическое сообщение в случае нулевого или ложного результата. ">asserted</a>, <a class="el" href="a00062.htm#ga14fecb1c008314444a74c1fe7d9a113b" title="Выполняет команду (вычисляет выражение) и проверяет результат. ">verify()</a>, verified, <a class="el" href="a00062.htm#ga5cd767f8040c04a51cb0173bf9255247" title="Выводит развернутое диагностическое сообщение. ">TX_ERROR()</a>, <a class="el" href="a00062.htm#ga2b7cded1074eb3d4b25af75b4ffed73a" title="Выводит сообщение в отладчике. ">txOutputDebugPrintf()</a>, <a class="el" href="a00062.htm#gae35d0d923c790c414ad586db1919852e" title="Выводит сообщение в окне с помощью функции MessageBox. ">txMessageBox()</a>, <a class="el" href="a00062.htm#ga0eb921342afd27ed2bf8a78f97872577" title="Выводит всплывающее сообщение в системном трее. ">txNotifyIcon()</a>, <b>TX_FILELINE</b>, <b>TX_FUNCTION</b></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;TX_DEBUG_ERROR (&quot;Так и не смог прочитать &#39;Войну и мир&#39;. Отмазка %d: потерял &#39;%s&#39;&quot;, reasonNum, fileName);</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00050_source.htm">Example04/TXLib.h</a> строка <a class="el" href="a00050_source.htm#l03531">3531</a></p>

</div>
</div>
<a class="anchor" id="gae4dfd7b0d66121016d6466d2ff10e8ba"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define _&#160;&#160;&#160;,</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Макрос, позволяющий передать переменное число параметров в какой-либо другой макрос. </p>
<dl class="section note"><dt>Заметки</dt><dd><b>Символ подчеркивания и символ TX_COMMA просто переопределяются в запятую.</b></dd></dl>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00062.htm#ga5cd767f8040c04a51cb0173bf9255247" title="Выводит развернутое диагностическое сообщение. ">TX_ERROR()</a>, <a class="el" href="a00062.htm#ga61997e2af7f7c3d2e40ef9a612000220" title="Выводит развернутое диагностическое сообщение в отладочном режиме. ">TX_DEBUG_ERROR()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;TX_ERROR (&quot;Слишком умный абзац: роман &#39;Война и мир&#39;, файл &#39;%s&#39;, строка %d&quot; _ fileName _ lineNum);</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00050_source.htm">Example04/TXLib.h</a> строка <a class="el" href="a00050_source.htm#l03574">3574</a></p>

</div>
</div>
<a class="anchor" id="gab170f39ac0e379c324c73495f14a1309"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define __TX_FUNCTION__&#160;&#160;&#160;&quot;(&quot; <a class="el" href="a00062.htm#ga973d717438fe468dd5a5d8d45ede5312">__TX_FILELINE__</a> &quot;)&quot;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Имя текущей функции </p>
<dl class="section warning"><dt>Предупреждения</dt><dd>Если определение имени функции не поддерживается компилятором, то <b>TX_FUNCTION</b> раскрывается в имя исходного файла и номер строки. </dd></dl>

<p>См. определение в файле <a class="el" href="a00050_source.htm">Example04/TXLib.h</a> строка <a class="el" href="a00050_source.htm#l03643">3643</a></p>

</div>
</div>
<a class="anchor" id="ga43d277b4418068ebef1fd2bdbaf550f6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define _TX_MODULE&#160;&#160;&#160;&quot;TXLib&quot;</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Имя модуля TXLib, входит в диагностические сообщения. </p>
<dl class="section note"><dt>Заметки</dt><dd>Можно переопределять до включения файла TXLib.h. </dd></dl>

<p>См. определение в файле <a class="el" href="a00050_source.htm">Example04/TXLib.h</a> строка <a class="el" href="a00050_source.htm#l03680">3680</a></p>

</div>
</div>
<a class="anchor" id="gafca36de229c170968d003c75dbf3e728"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TX_BEGIN_MESSAGE_MAP</td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Макроопределение:</b><div class="fragment"><div class="line"><span class="keyword">virtual</span> <span class="keywordtype">int</span> dialogProc (HWND _wnd, UINT _msg, WPARAM _wParam, LPARAM _lParam) _tx_override \</div>
<div class="line">        {                                                                                      \</div>
<div class="line">        (void)_wnd; (void)_msg; (void)_wParam; (void)_lParam;                                  \</div>
<div class="line">                                                                                               \</div>
<div class="line">        switch (_msg)                                                                          \</div>
<div class="line">            {                                                                                  \</div>
<div class="line">            case WM_NULL:</div>
</div><!-- fragment -->
<p>Заголовок карты сообщений (Message Map). </p>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00062.htm#gafca36de229c170968d003c75dbf3e728" title="Заголовок карты сообщений (Message Map). ">TX_BEGIN_MESSAGE_MAP()</a>, <a class="el" href="a00062.htm#ga3f4a70a0e5076cb4f4addcab0ca760cd" title="Завершитель карты сообщений. ">TX_END_MESSAGE_MAP</a>, <a class="el" href="a00062.htm#ga36851fb6c9bcfc7eaea57befafe98e6d" title="Заголовок обработчика сообщения (Message handler) карты сообщений. ">TX_HANDLE()</a>, <a class="el" href="a00062.htm#ga3637c3398b6ebfa337171beec0770fe4" title="Начало карты команд (Command map) в карте сообщений. ">TX_COMMAND_MAP</a>, <a class="el" href="a00016.htm#a39efe9383833aedb0839d2519173930e" title="Функция обработки сообщений диалогового окна. ">txDialog::dialogProc()</a>, <a class="el" href="a00016.htm" title="Базовый класс для диалоговых окон. ">txDialog</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;Cм. реализацию функции txInputBox().</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00050_source.htm">Example04/TXLib.h</a> строка <a class="el" href="a00050_source.htm#l04574">4574</a></p>

</div>
</div>
<a class="anchor" id="ga36851fb6c9bcfc7eaea57befafe98e6d"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TX_HANDLE</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">id</td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Макроопределение:</b><div class="fragment"><div class="line"><span class="keywordflow">break</span>;                                                                 \</div>
<div class="line">            case (<span class="keywordtype">id</span>):</div>
</div><!-- fragment -->
<p>Заголовок обработчика сообщения (Message handler) карты сообщений. </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">id</td><td>Идентификатор сообщения</td></tr>
  </table>
  </dd>
</dl>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00062.htm#gafca36de229c170968d003c75dbf3e728" title="Заголовок карты сообщений (Message Map). ">TX_BEGIN_MESSAGE_MAP()</a>, <a class="el" href="a00062.htm#ga3f4a70a0e5076cb4f4addcab0ca760cd" title="Завершитель карты сообщений. ">TX_END_MESSAGE_MAP</a>, <a class="el" href="a00062.htm#ga36851fb6c9bcfc7eaea57befafe98e6d" title="Заголовок обработчика сообщения (Message handler) карты сообщений. ">TX_HANDLE()</a>, <a class="el" href="a00062.htm#ga3637c3398b6ebfa337171beec0770fe4" title="Начало карты команд (Command map) в карте сообщений. ">TX_COMMAND_MAP</a>, <a class="el" href="a00016.htm#a39efe9383833aedb0839d2519173930e" title="Функция обработки сообщений диалогового окна. ">txDialog::dialogProc()</a>, <a class="el" href="a00016.htm" title="Базовый класс для диалоговых окон. ">txDialog</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;Cм. реализацию функции txInputBox().</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00050_source.htm">Example04/TXLib.h</a> строка <a class="el" href="a00050_source.htm#l04598">4598</a></p>

</div>
</div>
<a class="anchor" id="ga3637c3398b6ebfa337171beec0770fe4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TX_COMMAND_MAP</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Макроопределение:</b><div class="fragment"><div class="line"><span class="keywordflow">default</span>: <span class="keywordflow">break</span>;                                                        \</div>
<div class="line">            }                                                                      \</div>
<div class="line">                                                                                   \</div>
<div class="line">        if (_msg == WM_COMMAND) switch (LOWORD (_wParam))                          \</div>
<div class="line">            {                                                                      \</div>
<div class="line">            case 0:</div>
</div><!-- fragment -->
<p>Начало карты команд (Command map) в карте сообщений. </p>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00062.htm#gafca36de229c170968d003c75dbf3e728" title="Заголовок карты сообщений (Message Map). ">TX_BEGIN_MESSAGE_MAP()</a>, <a class="el" href="a00062.htm#ga3f4a70a0e5076cb4f4addcab0ca760cd" title="Завершитель карты сообщений. ">TX_END_MESSAGE_MAP</a>, <a class="el" href="a00062.htm#ga36851fb6c9bcfc7eaea57befafe98e6d" title="Заголовок обработчика сообщения (Message handler) карты сообщений. ">TX_HANDLE()</a>, <a class="el" href="a00062.htm#ga3637c3398b6ebfa337171beec0770fe4" title="Начало карты команд (Command map) в карте сообщений. ">TX_COMMAND_MAP</a>, <a class="el" href="a00016.htm#a39efe9383833aedb0839d2519173930e" title="Функция обработки сообщений диалогового окна. ">txDialog::dialogProc()</a>, <a class="el" href="a00016.htm" title="Базовый класс для диалоговых окон. ">txDialog</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;Cм. реализацию функции txInputBox().</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00050_source.htm">Example04/TXLib.h</a> строка <a class="el" href="a00050_source.htm#l04615">4615</a></p>

</div>
</div>
<a class="anchor" id="ga3f4a70a0e5076cb4f4addcab0ca760cd"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define TX_END_MESSAGE_MAP</td>
        </tr>
      </table>
</div><div class="memdoc">
<b>Макроопределение:</b><div class="fragment"><div class="line"><span class="keywordflow">default</span>: <span class="keywordflow">break</span>;                                                        \</div>
<div class="line">            }                                                                      \</div>
<div class="line">                                                                                   \</div>
<div class="line">        return FALSE;                                                              \</div>
<div class="line">        }</div>
</div><!-- fragment -->
<p>Завершитель карты сообщений. </p>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00062.htm#gafca36de229c170968d003c75dbf3e728" title="Заголовок карты сообщений (Message Map). ">TX_BEGIN_MESSAGE_MAP()</a>, <a class="el" href="a00062.htm#ga3f4a70a0e5076cb4f4addcab0ca760cd" title="Завершитель карты сообщений. ">TX_END_MESSAGE_MAP</a>, <a class="el" href="a00062.htm#ga36851fb6c9bcfc7eaea57befafe98e6d" title="Заголовок обработчика сообщения (Message handler) карты сообщений. ">TX_HANDLE()</a>, <a class="el" href="a00062.htm#ga3637c3398b6ebfa337171beec0770fe4" title="Начало карты команд (Command map) в карте сообщений. ">TX_COMMAND_MAP</a>, <a class="el" href="a00016.htm#a39efe9383833aedb0839d2519173930e" title="Функция обработки сообщений диалогового окна. ">txDialog::dialogProc()</a>, <a class="el" href="a00016.htm" title="Базовый класс для диалоговых окон. ">txDialog</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;Cм. реализацию функции txInputBox().</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00050_source.htm">Example04/TXLib.h</a> строка <a class="el" href="a00050_source.htm#l04636">4636</a></p>

</div>
</div>
<a class="anchor" id="gaaa5d2cd4ba134312dcaca4e8316bbe9e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define __TX_DEBUG_MACROS&#160;&#160;&#160;(&quot;Группа отладочных $-макросов&quot;)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Отладочная печать переменной во время вычисления выражения или участка кода во время его выполнения. </p>
<p>Сделай приятными твои круглые сутки отладки!</p>
<dl class="section warning"><dt>Предупреждения</dt><dd>Эти макросы могут измениться в будущих версиях. <small>&#160;</small><span class="s"> Чтобы вам повеселее жилось. </span><small>&#160;</small></dd></dl>
<dl>
<dt>Назначение: </dt>
<dd><table  border="0">
<tr valign="top">
<td><code> $ (x) </code> &#160;&#160;</td><td>Печать имени и значения переменной <code>x</code> внутри выражения. </td></tr>
<tr valign="top">
<td><code> $_(x) </code> &#160;&#160;</td><td>Печать только значения переменной <code>x</code> внутри выражения. <br />
 </td></tr>
<tr valign="top">
<td></td></tr>
<tr valign="top">
<td><code> $$ (expr) </code> &#160;&#160;</td><td>Печать выражения, его вычисление, печать и возврат значения. <br />
 Если выражение содержит оператор "запятая", не взятый в скобки, необходимо окружать expr еще одной парой скобок. </td></tr>
<tr valign="top">
<td><code> $$_(expr) </code> &#160;&#160;</td><td>То же, что и <code>$,</code> но вторая печать идет без новой строки. <br />
 </td></tr>
<tr valign="top">
<td></td></tr>
<tr valign="top">
<td><code> $$$ (expr) </code> &#160;&#160;</td><td>То же, что и <code>$,</code> но для операторов или блоков кода (без возврата значения). </td></tr>
<tr valign="top">
<td><code> $$$_(expr) </code> &#160;&#160;</td><td>То же, что и <code>$$,</code> но вторая печать идет без новой строки. <br />
 </td></tr>
<tr valign="top">
<td></td></tr>
<tr valign="top">
<td><code> $$$$ </code> &#160;&#160;</td><td>Печать местоположения в коде. </td></tr>
<tr valign="top">
<td><code> $$$$_ </code> &#160;&#160;</td><td>Печать местоположения в коде (только имя функции). </td></tr>
<tr valign="top">
<td><code> $n </code> &#160;&#160;</td><td>Перевод строки (печать <code>'\n'</code>). </td></tr>
</table>
</dd>
</dl>
<dl>
<dt>Установка атрибутов символов консоли: </dt>
<dd><table  border="0">
<tr valign="top">
<td><code>$d</code> &#160;&#160;</td><td>Светло-серый цвет &#160;&#160;</td><td>&#160;&#160;</td><td><code>$T</code> &#160;&#160;</td><td>Прозрачный цвет </td></tr>
<tr valign="top">
<td><code>$b</code> &#160;&#160;</td><td>Светло-синий цвет &#160;&#160;</td><td>&#160;&#160;</td><td><code>$B</code> &#160;&#160;</td><td>Темно-синий цвет </td></tr>
<tr valign="top">
<td><code>$g</code> &#160;&#160;</td><td>Светло-зеленый цвет &#160;&#160;</td><td>&#160;&#160;</td><td><code>$G</code> &#160;&#160;</td><td>Темно-зеленый цвет </td></tr>
<tr valign="top">
<td><code>$c</code> &#160;&#160;</td><td>Светло-бирюзовый цвет &#160;&#160;</td><td>&#160;&#160;</td><td><code>$C</code> &#160;&#160;</td><td>Темно-бирюзовый цвет </td></tr>
<tr valign="top">
<td><code>$r</code> &#160;&#160;</td><td>Светло-красный цвет &#160;&#160;</td><td>&#160;&#160;</td><td><code>$R</code> &#160;&#160;</td><td>Темно-красный цвет </td></tr>
<tr valign="top">
<td><code>$m</code> &#160;&#160;</td><td>Светло-малиновый цвет &#160;&#160;</td><td>&#160;&#160;</td><td><code>$M</code> &#160;&#160;</td><td>Темно-малиновый цвет </td></tr>
<tr valign="top">
<td><code>$y</code> &#160;&#160;</td><td>Желтый цвет &#160;&#160;</td><td>&#160;&#160;</td><td><code>$Y</code> &#160;&#160;</td><td>Темно-желтый цвет </td></tr>
<tr valign="top">
<td><code>$t</code> &#160;&#160;</td><td>Белый цвет &#160;&#160;</td><td>&#160;&#160;</td><td><code>$D</code> &#160;&#160;</td><td>Темно-серый цвет </td></tr>
</table>
</dd>
</dl>
<dl>
<dt></dt>
<dd><table  border="0">
<tr valign="top">
<td><code>$a</code> &#160;&#160;</td><td>Assertion &#160;&#160;</td><td>Светло-зеленый на зеленом &#160;&#160;</td><td>&#160;&#160;</td><td><code>$A</code> &#160;&#160;</td><td>Assertion bold &#160;&#160;</td><td>Желтый на зеленом &#160;&#160;</td><td></td></tr>
<tr valign="top">
<td><code>$i</code> &#160;&#160;</td><td>Information &#160;&#160;</td><td>Светло-синий на синем &#160;&#160;</td><td>&#160;&#160;</td><td><code>$I</code> &#160;&#160;</td><td>Information bold &#160;&#160;</td><td>Желтый на синем &#160;&#160;</td><td></td></tr>
<tr valign="top">
<td><code>$w</code> &#160;&#160;</td><td>Warning &#160;&#160;</td><td>Светло-малиновый на малиновом &#160;&#160;</td><td>&#160;&#160;</td><td><code>$W</code> &#160;&#160;</td><td>Warning bold &#160;&#160;</td><td>Желтый на малиновом &#160;&#160;</td><td></td></tr>
<tr valign="top">
<td><code>$e</code> &#160;&#160;</td><td>Error &#160;&#160;</td><td>Светло-красный на красном &#160;&#160;</td><td>&#160;&#160;</td><td><code>$E</code> &#160;&#160;</td><td>Error bold &#160;&#160;</td><td>Желтый на красном &#160;&#160;</td><td></td></tr>
<tr valign="top">
<td><code>$f</code> &#160;&#160;</td><td>Fatal &#160;&#160;</td><td>Черный на светло-красном &#160;&#160;</td><td>&#160;&#160;</td><td><code>$F</code> &#160;&#160;</td><td>Fatal bold &#160;&#160;</td><td>Малиновый на светло-красном &#160;&#160;</td><td></td></tr>
<tr valign="top">
<td><code>$l</code> &#160;&#160;</td><td>Location &#160;&#160;</td><td>Черный на темно-сером &#160;&#160;</td><td>&#160;&#160;</td><td><code>$L</code> &#160;&#160;</td><td>Location bold &#160;&#160;</td><td>Светло-серый на темно-сером &#160;&#160;</td><td></td></tr>
</table>
</dd>
</dl>
<dl>
<dt></dt>
<dd><table  border="0">
<tr valign="top">
<td><code>$s</code> &#160;&#160;</td><td>Запомнить атрибуты. При выходе из блока кода атрибуты восстанавливаются. </td></tr>
</table>
</dd>
</dl>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00062.htm#ga934291e39288d75c477c6022e67920e1" title="Замена стандартного макроса assert(), с выдачей сообщения через txMessageBox(), консоль и OutputDebug...">assert()</a>, <a class="el" href="a00062.htm#ga889b74443b3e918adee3e31fad4653f7" title="Выводит диагностическое сообщение в случае нулевого или ложного результата. ">asserted</a>, <b>TX_FILELINE</b>, <b>TX_FUNCTION</b>, <a class="el" href="a00062.htm#ga5cd767f8040c04a51cb0173bf9255247" title="Выводит развернутое диагностическое сообщение. ">TX_ERROR</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;$g  // green</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;int x = 5;</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;int y = $(x) + 1;</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;$$( x = $(y) + 2 );</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;$r  // red</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;double xy = $$( pow (x, y) );</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;$$$$</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;double h  = $$(( $(x) = x*x, y = y*y, sqrt ($(x+y)) ));</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;$$( txCreateWindow (800, 600) );</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;$d  // default color</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;$$$( if ($(xy) &lt; $(h)) { $s return $(h); } )</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;$$$$</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00050_source.htm">Example04/TXLib.h</a> строка <a class="el" href="a00050_source.htm#l08841">8841</a></p>

</div>
</div>
<h2 class="groupheader">Функции</h2>
<a class="anchor" id="ga177f8bcb7544821ea4b5bd0571fe7196"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txPlaySound </td>
          <td>(</td>
          <td class="paramtype">const char&#160;</td>
          <td class="paramname"><em>filename</em>[] = <code>NULL</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">DWORD&#160;</td>
          <td class="paramname"><em>mode</em> = <code>SND_ASYNC</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Воспроизводит звуковой файл. </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">filename</td><td>Имя звукового файла. Если NULL - останавливает звук. </td></tr>
    <tr><td class="paramname">mode</td><td>Режим воспроизведения</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>Если операция была успешна - true, иначе - false.</dd></dl>
<dl>
<dt>Режимы воспроизведения: </dt>
<dd><table  border="0">
<tr valign="top">
<td>SND_ASYNC &#160;&#160;</td><td>Звук проигрывается одновременно с работой программы. <br />
 Чтобы отменить звучание, вызовите txPlaySound (NULL). </td></tr>
<tr valign="top">
<td>SND_SYNC &#160;&#160;</td><td>Выполнение программы приостанавливается до окончания воспроизведения звука. </td></tr>
<tr valign="top">
<td>SND_LOOP &#160;&#160;</td><td>Зацикливать звук при воспроизведении. <br />
 Чтобы отменить звучание, вызовите txPlaySound (NULL). <br />
 </td></tr>
<tr valign="top">
<td></td></tr>
<tr valign="top">
<td>SND_NODEFAULT &#160;&#160;</td><td>Не использовать звук по умолчанию, если нельзя проиграть указанный звуковой файл. </td></tr>
<tr valign="top">
<td>SND_NOSTOP &#160;&#160;</td><td>Если какой-либо звук уже проигрывается, не останавливать его для запуска указанного звука. </td></tr>
<tr valign="top">
<td>SND_APPLICATION &#160;&#160;</td><td>Проигрывать звук, используя программу, зарегистрированную для данного типа звуковых файлов. </td></tr>
</table>
</dd>
</dl>
<dl class="section note"><dt>Заметки</dt><dd>Поддерживаются только файлы в формате WAV. Остальные форматы (MP3 и др.) надо перекодировать. Переименование со сменой расширения не поможет, как и в случае с форматом картинок в <a class="el" href="a00059.htm#ga28123a5be2ad65c41550ccb558138476" title="Загружает из файла изображение в формате BMP. Делает это довольно медленно. ">txLoadImage()</a>.</dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;txPlaySound (&quot;tada.wav&quot;);  // So happy that this always exists</div>
</div><!-- fragment --> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gae35d0d923c790c414ad586db1919852e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int txMessageBox </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>text</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>header</em> = <code>&quot;TXLib&#160;сообщает&quot;</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>flags</em> = <code>0</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Выводит сообщение в окне с помощью функции MessageBox. </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">text</td><td>Текст сообщения </td></tr>
    <tr><td class="paramname">header</td><td>Заголовок сообщения </td></tr>
    <tr><td class="paramname">flags</td><td>Флаги отображения сообщения</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>Значение, возвращаемое функцией MessageBox.</dd></dl>
<dl class="section warning"><dt>Предупреждения</dt><dd>Текст не должен превышать _TX_BIGBUFSIZE символов, а заголовок &ndash; _TX_BIGBUFSIZE символов, иначе они обрезаются.</dd></dl>
<dl class="section note"><dt>Заметки</dt><dd>Вместо <code><b>txMessageBox (text, header, flags)</b></code> можно использовать стандартную функцию Win32 <code><b>MessageBox (<a class="el" href="a00059.htm#gae47b05ec325f3bda871e46c8c74919e8" title="Возвращает дескриптор окна рисования ">txWindow()</a>, text, header, flags)</b></code>. Отличия txMessageBox в том, что она автоматически подставляет окно-родитель, и в том, что при выводе в окно строчки переводятся в формат UNICODE. Это важно лишь в том случае, когда <em>в региональных настройках контрольной панели Windows неверно установлена кодовая страница для программ, не поддерживающих UNICODE.</em> В остальных случаях нужды в <code>txMessageBox</code> нет.</dd></dl>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00062.htm#ga5cd767f8040c04a51cb0173bf9255247" title="Выводит развернутое диагностическое сообщение. ">TX_ERROR()</a>, <a class="el" href="a00062.htm#ga61997e2af7f7c3d2e40ef9a612000220" title="Выводит развернутое диагностическое сообщение в отладочном режиме. ">TX_DEBUG_ERROR()</a>, <a class="el" href="a00062.htm#ga2b7cded1074eb3d4b25af75b4ffed73a" title="Выводит сообщение в отладчике. ">txOutputDebugPrintf()</a>, <a class="el" href="a00062.htm#ga0eb921342afd27ed2bf8a78f97872577" title="Выводит всплывающее сообщение в системном трее. ">txNotifyIcon()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;if (txMessageBox (&quot;Получилось?&quot;, &quot;Прочти меня&quot;, MB_YESNO) == IDYES)</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;    {</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;    MessageBox (txWindow(), &quot;Хватит и обычного MessageBox()&quot;, &quot;Win32 сообщает&quot;, 0);</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;    }</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;else</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;    txMessageBox (&quot;Спасаем от кракозябл вместо русских букв. Гарантия. Недорого.&quot;);</div>
</div><!-- fragment --> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga0eb921342afd27ed2bf8a78f97872577"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txNotifyIcon </td>
          <td>(</td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>flags</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char&#160;</td>
          <td class="paramname"><em>title</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char&#160;</td>
          <td class="paramname"><em>format</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Выводит всплывающее сообщение в системном трее. </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">flags</td><td>Флаги сообщения </td></tr>
    <tr><td class="paramname">title</td><td>Заголовок сообщения </td></tr>
    <tr><td class="paramname">format</td><td>Строка для печати, как в printf().</td></tr>
  </table>
  </dd>
</dl>
<dl>
<dt>Флаги сообщения: </dt>
<dd><table  border="0">
<tr valign="top">
<td><code>NIIF_INFO</code> &#160;&#160;</td><td>Информация </td></tr>
<tr valign="top">
<td><code>NIIF_WARNING</code> &#160;&#160;</td><td>Предупреждение </td></tr>
<tr valign="top">
<td><code>NIIF_ERROR</code> &#160;&#160;</td><td>Сообщение об ошибке </td></tr>
</table>
</dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>Удалось ли отобразить сообщение. <pre class="fragment">     Функция формирует сообщение по правилам printf() и выводит во всплывающем окне.
</pre></dd></dl>
<dl class="section warning"><dt>Предупреждения</dt><dd><ul>
<li>Эта функция требует, чтобы при компиляции константа версии Internet Explorer <code></code>(_WIN32_IE) была задана не ниже 0x0500. Для этого надо либо <b>включить TXLib.h вместо <code>windows.h</code> или перед ним.</b> Либо надо самостоятельно определить <code></code>(#define) эту константу. <small>С версией Internet Explorer это связано потому, что при его установке в Windows обновляются многие компоненты (например, <code>shell32.dll</code> и <code>comctl32.dll</code>), которые влияют на функциональность системы независимо от использования браузера). Сам Internet Explorer в отображении сообщения не участвует.</small></li>
<li>Сообщение не должно превышать _TX_BUFSIZE символов, иначе оно обрезается.</li>
</ul>
</dd></dl>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00062.htm#ga5cd767f8040c04a51cb0173bf9255247" title="Выводит развернутое диагностическое сообщение. ">TX_ERROR()</a>, <a class="el" href="a00062.htm#ga61997e2af7f7c3d2e40ef9a612000220" title="Выводит развернутое диагностическое сообщение в отладочном режиме. ">TX_DEBUG_ERROR()</a>, <a class="el" href="a00062.htm#ga2b7cded1074eb3d4b25af75b4ffed73a" title="Выводит сообщение в отладчике. ">txOutputDebugPrintf()</a>, <a class="el" href="a00062.htm#gae35d0d923c790c414ad586db1919852e" title="Выводит сообщение в окне с помощью функции MessageBox. ">txMessageBox()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;int hours = 3, minutes = 10;</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;const char station[] = &quot;Юму&quot;;</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;...</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;txNotifyIcon (NIIF_INFO, &quot;Уважаемые пассажиры&quot;,</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;              &quot;Поезд на %s отправляется в %d:%d.&quot;, station, hours, minutes);</div>
</div><!-- fragment --><dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">flags</td><td>Флаги сообщения </td></tr>
    <tr><td class="paramname">title</td><td>Заголовок сообщения </td></tr>
    <tr><td class="paramname">format</td><td>Строка для печати, как в printf().</td></tr>
  </table>
  </dd>
</dl>
<dl>
<dt>Флаги сообщения: </dt>
<dd><table  border="0">
<tr valign="top">
<td><code>NIIF_INFO</code> &#160;&#160;</td><td>Информация </td></tr>
<tr valign="top">
<td><code>NIIF_WARNING</code> &#160;&#160;</td><td>Предупреждение </td></tr>
<tr valign="top">
<td><code>NIIF_ERROR</code> &#160;&#160;</td><td>Сообщение об ошибке </td></tr>
</table>
</dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>Удалось ли отобразить сообщение. <pre class="fragment">     Функция формирует сообщение по правилам printf() и выводит во всплывающем окне.
</pre></dd></dl>
<dl class="section warning"><dt>Предупреждения</dt><dd><ul>
<li>Эта функция требует, чтобы при компиляции константа версии Internet Explorer <code></code>(_WIN32_IE) была задана не ниже 0x0500. Для этого надо либо <b>включить TXLib.h вместо <code>windows.h</code> или перед ним.</b> Либо надо самостоятельно определить <code></code>(#define) эту константу. <br />
 <small>С версией Internet Explorer это связано потому, что при его установке в Windows обновляются многие компоненты (например, <code>shell32.dll</code> и <code>comctl32.dll</code>), которые влияют на функциональность системы независимо от использования браузера). Сам Internet Explorer в отображении сообщения не участвует.</small></li>
<li>Сообщение не должно превышать _TX_BUFSIZE символов, иначе оно обрезается.</li>
</ul>
</dd></dl>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00062.htm#ga5cd767f8040c04a51cb0173bf9255247" title="Выводит развернутое диагностическое сообщение. ">TX_ERROR()</a>, <a class="el" href="a00062.htm#ga61997e2af7f7c3d2e40ef9a612000220" title="Выводит развернутое диагностическое сообщение в отладочном режиме. ">TX_DEBUG_ERROR()</a>, <a class="el" href="a00062.htm#ga2b7cded1074eb3d4b25af75b4ffed73a" title="Выводит сообщение в отладчике. ">txOutputDebugPrintf()</a>, <a class="el" href="a00062.htm#gae35d0d923c790c414ad586db1919852e" title="Выводит сообщение в окне с помощью функции MessageBox. ">txMessageBox()</a></dd></dl>
</dd>
</dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;int hours = 3, minutes = 10;</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;const char station[] = &quot;Юму&quot;;</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;...</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;txNotifyIcon (NIIF_INFO, &quot;Уважаемые пассажиры&quot;,</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;              &quot;Поезд на %s отправляется в %d:%d.&quot;, station, hours, minutes);</div>
</div><!-- fragment --> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga2b7cded1074eb3d4b25af75b4ffed73a"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int txOutputDebugPrintf </td>
          <td>(</td>
          <td class="paramtype">const char&#160;</td>
          <td class="paramname"><em>format</em>[], </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Выводит сообщение в отладчике. </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">format</td><td>Строка для печати, как в printf().</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>Количество напечатанных символов. <pre class="fragment">     Функция формирует сообщение по правилам printf() и передает его в OutputDebugString(). Ее вывод можно
     перехватить отладчиком или утилитами-логгерами, например,
     &lt;a href=http://technet.microsoft.com/ru-ru/sysinternals/bb896647%28en-us%29.aspx&gt;DbgView&lt;/a&gt;.
     Если этого не сделать, и не задать первый символ @c '\\a' (см. ниже), то о сообщении никто не узнает. :(
</pre> </dd></dl>
<dl class="section note"><dt>Заметки</dt><dd><ul>
<li>Если первый символ в строке <code>'\a'</code>, то сообщение также дублируется <a class="el" href="a00062.htm#gae35d0d923c790c414ad586db1919852e" title="Выводит сообщение в окне с помощью функции MessageBox. ">txMessageBox()</a>.</li>
<li>Если первый или второй символ в строке <code>'\f'</code>, то сообщение также дублируется printf().</li>
</ul>
</dd></dl>
<dl class="section warning"><dt>Предупреждения</dt><dd>Сообщение не должно превышать _TX_BIGBUFSIZE символов, иначе оно обрезается.</dd></dl>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00062.htm#ga5cd767f8040c04a51cb0173bf9255247" title="Выводит развернутое диагностическое сообщение. ">TX_ERROR()</a>, <a class="el" href="a00062.htm#ga61997e2af7f7c3d2e40ef9a612000220" title="Выводит развернутое диагностическое сообщение в отладочном режиме. ">TX_DEBUG_ERROR()</a>, <a class="el" href="a00062.htm#ga0eb921342afd27ed2bf8a78f97872577" title="Выводит всплывающее сообщение в системном трее. ">txNotifyIcon()</a>, <a class="el" href="a00062.htm#gae35d0d923c790c414ad586db1919852e" title="Выводит сообщение в окне с помощью функции MessageBox. ">txMessageBox()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;int x = 42;</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;...</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;txOutputDebugPrintf (&quot;Никто не узнает, что %d.&quot;, x);</div>
</div><!-- fragment --> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaa4558a3bf2a126a9e19c5a3655520787"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int random </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>range</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Генератор случайных чисел </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">range</td><td>Правая граница диапазона (<b>не</b> включая саму границу).</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>Случайное целое число в диапазоне [0; range). <pre class="fragment">     Вы еще помните, что означают разные скобочки в обозначении интервалов? :)
</pre></dd></dl>
<dl class="section warning"><dt>Предупреждения</dt><dd>Эта функция может мяукать. <small>&#160;</small><span class="s"> Just because it can. </span><small>&#160;</small> Потому что она не часть стандарта С++ или Windows, а зависит от TXLib'а. Если это вам не нравится, вы можете написать ее сами.</dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;char message[100] = &quot;Maybe...&quot;;</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;sprintf (message, &quot;You SUDDENLY got %d bucks now. But note that tax rate is $%d.&quot;, random (100), 100);</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;txMessageBox (message, &quot;Lottery&quot;);</div>
</div><!-- fragment --><dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">range</td><td>Правая граница диапазона (<b>не</b> включая саму границу).</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>Случайное целое число в диапазоне [0; range). <pre class="fragment">     Вы еще помните, что означают разные скобочки в обозначении интервалов? :)
</pre></dd></dl>
<dl class="section warning"><dt>Предупреждения</dt><dd>Эта функция может мяукать. <small>&#160;</small><span class="s"> Just because it can. </span><small>&#160;</small> Потому что она не часть стандарта С++ или Windows, а зависит от TXLib'а. Если это вам не нравится, вы можете написать ее сами, с помощью стандартной функции rand() и операции остатка от деления %. Подсказка: rand() % rande.</dd></dl>
</dd>
</dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;char message[100] = &quot;Maybe...&quot;;</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;sprintf (message, &quot;You SUDDENLY got %d bucks now. But note that tax rate is $%d.&quot;, random (100), 100);</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;txMessageBox (message, &quot;Lottery&quot;);</div>
</div><!-- fragment --> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gadf7eefa9eda0d1ae48bb42cadc6759ae"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double random </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>left</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>right</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Генератор случайных чисел </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">left</td><td>Левая граница диапазона (<b>включая</b> саму границу). </td></tr>
    <tr><td class="paramname">right</td><td>Правая граница диапазона (<b>включая</b> саму границу).</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>Случайное целое число в диапазоне [left; right]. <pre class="fragment">     Вы все еще помните, что означают разные скобочки в обозначении интервалов? :)
</pre></dd></dl>
<dl class="section warning"><dt>Предупреждения</dt><dd>Эта функция может мяукать. <small>&#160;</small><span class="s"> Just in case. </span><small>&#160;</small> Потому что она не часть стандарта С++ или Windows, а зависит от TXLib'а. Если это вам не нравится, вы можете написать ее сами.</dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;int money = random (-100, +100);</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;if (money &lt; 0)</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;    {</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;    char message[100] = &quot;Maybe...&quot;;</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;    sprintf (&quot;Проиграли в лотерею? Отдайте долг в %d рублей&quot;, -money);</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;    txMessageBox (message, &quot;Быстро!&quot;);</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;    }</div>
</div><!-- fragment --><dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">left</td><td>Левая граница диапазона (<b>включая</b> саму границу). </td></tr>
    <tr><td class="paramname">right</td><td>Правая граница диапазона (<b>включая</b> саму границу).</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>Случайное целое число в диапазоне [left; right]. <pre class="fragment">     Вы все еще помните, что означают разные скобочки в обозначении интервалов? :)
</pre></dd></dl>
<dl class="section warning"><dt>Предупреждения</dt><dd>Эта функция может мяукать. <small>&#160;</small><span class="s"> Just in case. </span><small>&#160;</small> Потому что она не часть стандарта С++ или Windows, а зависит от TXLib'а. Если это вам не нравится, вы можете написать ее сами, с помощью стандартной функции rand() и небольшой <small>&#160;</small><span class="s"> уличной </span><small>&#160;</small> магии с делением на RAND_MAX и <small>&#160;</small><span class="s"> таинственной </span><small>&#160;</small> операцией вычитания.</dd></dl>
</dd>
</dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;int money = random (-100, +100);</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;if (money &lt; 0)</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;    {</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;    char message[100] = &quot;Maybe...&quot;;</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;    sprintf (&quot;Проиграли в лотерею? Отдайте долг в %d рублей&quot;, -money);</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;    txMessageBox (message, &quot;Быстро!&quot;);</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;    }</div>
</div><!-- fragment --> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga0d2f29556bce1d021656c3ca520c7957"></a>
<div class="memitem">
<div class="memproto">
<div class="memtemplate">
template&lt;typename Tx , typename Ta , typename Tb &gt; </div>
      <table class="memname">
        <tr>
          <td class="memname">bool In </td>
          <td>(</td>
          <td class="paramtype">Tx&#160;</td>
          <td class="paramname"><em>x</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Ta&#160;</td>
          <td class="paramname"><em>a</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">Tb&#160;</td>
          <td class="paramname"><em>b</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Проверка, находится ли параметр х внутри замкнутого интервала [a; b]. </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>Проверяемый параметр </td></tr>
    <tr><td class="paramname">a</td><td>Левая граница (включительно) </td></tr>
    <tr><td class="paramname">b</td><td>Правая граница (включительно)</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>Если a &lt;= x &amp;&amp; x &lt;= b, то истина, если нет - ложь</dd></dl>
<dl class="section warning"><dt>Предупреждения</dt><dd>Эта функция может мяукать. <small>&#160;</small><span class="s"> Because cats are power! </span><small>&#160;</small> Потому что она не часть стандарта С++ или Windows, а зависит от TXLib'а. Если это вам не нравится, вы можете написать ее сами.</dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;while (txMouseButtons() != 1)</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;    {</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;    if (In (txMouseX(), 110, 120)) txTextOut (100, 100, &quot;Meet the wall!&quot;);</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;    txSleep (0);</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;    }</div>
</div><!-- fragment --><dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>Проверяемый параметр </td></tr>
    <tr><td class="paramname">a</td><td>Левая граница (включительно) </td></tr>
    <tr><td class="paramname">b</td><td>Правая граница (включительно)</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>Если a &lt;= x &amp;&amp; x &lt;= b, то истина, если нет - ложь</dd></dl>
<dl class="section warning"><dt>Предупреждения</dt><dd>Эта функция может мяукать. <small>&#160;</small><span class="s"> Because cats are power! </span><small>&#160;</small> Потому что она не часть стандарта С++ или Windows, а зависит от TXLib'а. Если это вам не нравится, вы можете написать ее сами, используя неравенства.</dd></dl>
</dd>
</dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;while (txMouseButtons() != 1)</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;    {</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;    if (In (txMouseX(), 110, 120)) txTextOut (100, 100, &quot;Meet the wall!&quot;);</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;    txSleep (0);</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;    }</div>
</div><!-- fragment --> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga13174595f409e02a486969e058874f33"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool In </td>
          <td>(</td>
          <td class="paramtype">const POINT &amp;&#160;</td>
          <td class="paramname"><em>pt</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const RECT &amp;&#160;</td>
          <td class="paramname"><em>rect</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Проверка, находится ли точка pt внутри прямоугольника rect. </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">pt</td><td>Проверяемая точка в виде <code> POINT {x, y} </code> </td></tr>
    <tr><td class="paramname">rect</td><td>Прямоугольник в виде <code> RECT {left, top, right, bottom} </code></td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>Результат проверки <pre class="fragment">     Удобно для реализации экранных кнопок, нажимаемых курсором мыши.
</pre></dd></dl>
<dl class="section warning"><dt>Предупреждения</dt><dd>Эта функция может мяукать. <small>&#160;</small><span class="s"> Because cats are always right. </span><small>&#160;</small> Потому что она не часть стандарта С++ или Windows, а зависит от TXLib'а. Если это вам не нравится, вы можете написать ее сами.</dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;RECT button = { 100, 100, 150, 120 };</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;txSetFillColor (TX_LIGHTGRAY);</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;txRectangle (button.left, button.top, button.right, button.bottom);</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;txSetTextAlign();</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;txSetFillColor (TX_WHITE);</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;txTextOut (125, 115, &quot;Cookie&quot;);</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;for (;;)</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;    {</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;    if (In (txMousePos(), button))</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;        {</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;        txSetFillColor (TX_TRANSPARENT);</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;        txRectangle (button.left, button.top, button.right, button.bottom);</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;        if (txMouseButtons())</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;            {</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;            txSetFillColor (TX_DARKGRAY);</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;            txRectangle (button.left, button.top, button.right, button.bottom);</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;            txSetFillColor (TX_WHITE);</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;            txTextOut (125, 115, &quot;You got cookie&quot;);</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;            break;</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;            }</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;        }</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;    txSleep (0);</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;    }</div>
</div><!-- fragment --> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga5de732de72c46b992ac2feeac2de7e42"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void tx_fpreset </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Переинициализирует математический сопроцессор </p>
<p>Сбрасывает состояние математического сопроцессора, вызывая _fpreset() и разрешая генерацию исключений сопроцессора для неверного результата (_EM_INVALID), денормализации (_EM_DENORMAL), деления на ноль (_EM_ZERODIVIDE), переполнения (_EM_OVERFLOW) и антипереполнения (_EM_UNDERFLOW). Обычный вызов _fpreset() эти исключения маскирует, в результате чего вычислительные ошибки могут оказаться незамеченными.</p>
<p>Если вы хотите замаскировать эти исключения, вызывайте обычный _fpreset(), и затем проверяйте результат вычислений на достоверность хотя бы с помощью std::isfinite (x).</p>
<dl class="section note"><dt>Заметки</dt><dd>Поведение TXLib по умолчанию - <b>генерация</b> этих исключений и их <b>перехват</b> TXLib'ом в виде <b>ошибки</b>.<br />
<br />
 См. [1] <a href="http://books.google.ru/books?id=uwgNv8VlNPgC&amp;pg=PA343">пример работы с этими исключениями,</a> [2] <a href="http://www.gamasutra.com/view/news/169203/Exceptional_floating_point.php">статью о них.</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;tx_fpreset();</div>
</div><!-- fragment --><p>Сбрасывает состояние математического сопроцессора, вызывая _fpreset() и разрешая генерацию исключений сопроцессора для неверного результата (_EM_INVALID), денормализации (_EM_DENORMAL), деления на ноль (_EM_ZERODIVIDE), переполнения (_EM_OVERFLOW) и антипереполнения (_EM_UNDERFLOW). Обычный вызов _fpreset() эти исключения маскирует, в результате чего вычислительные ошибки могут оказаться незамеченными.</p>
<p>Если вы хотите замаскировать эти исключения, вызывайте обычный _fpreset(), и затем проверяйте результат вычислений на достоверность хотя бы с помощью std::isfinite (x).</p>
<dl class="section note"><dt>Заметки</dt><dd>Поведение TXLib по умолчанию - <b>генерация</b> этих исключений и их <b>перехват</b> TXLib'ом в виде <b>ошибки</b>. <br />
<br />
 См. [1] <a href="http://books.google.ru/books?id=uwgNv8VlNPgC&amp;pg=PA343">пример работы с этими исключениями,</a> [2] <a href="http://www.gamasutra.com/view/news/169203/Exceptional_floating_point.php">статью о них.</a></dd></dl>
</dd>
</dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;tx_fpreset();</div>
</div><!-- fragment --> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga74ff1048e0d6bc458c9904fbbe0a6026"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">double txSqr </td>
          <td>(</td>
          <td class="paramtype">double&#160;</td>
          <td class="paramname"><em>x</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p><em>Очень удобное</em> возведение числа в квадрат. </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">x</td><td>Число для возведения в него</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>Квадрат, полученный путем возведения в него числа, заданного для возведения в квадрат</dd></dl>
<dl class="section note"><dt>Заметки</dt><dd>Это пример, как <b> не надо </b> писать код: <a class="el" href="a00062.htm#ga74ff1048e0d6bc458c9904fbbe0a6026" title="Очень удобное возведение числа в квадрат. ">txSqr()</a> &ndash; функция с "медвежьей услугой". Иногда встречаются те, кто любит печатать в функции результат ее вычислений <small> (не данные для отладки, а именно результат), </small> вместо того, чтобы просто возвращать его туда, где эту функцию вызывали. Пусть эти люди воспользуются приведенной <a class="el" href="a00062.htm#ga74ff1048e0d6bc458c9904fbbe0a6026" title="Очень удобное возведение числа в квадрат. ">txSqr()</a> для какого-нибудь нужного дела, особенно в цикле. Пример, конечно, несколько преувеличен. См. в исходном тексте код этой навязчивой радости.</dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;printf (&quot;\n&quot; &quot;Радиус\t\t&quot; &quot;Площадь круга\n\n&quot;);</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;for (double r = 100; r &gt; 0; r--)</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;    {</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;    printf (&quot;%6.2lf...&quot;, r);</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;    double square = M_PI * txSqr (r);  // Надолго запомним эту площадь!</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;    printf (&quot;\b\b\b   \t&quot;);</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;    printf (&quot;%-.2lf\n&quot;, square);</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;    }</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00049_source.htm">Example02/TXLib.h</a> строка <a class="el" href="a00049_source.htm#l03135">3135</a></p>

</div>
</div>
<a class="anchor" id="ga7b470eef58eabacf9c7820ce6d392506"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void txDump </td>
          <td>(</td>
          <td class="paramtype">const void *&#160;</td>
          <td class="paramname"><em>address</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char&#160;</td>
          <td class="paramname"><em>name</em>[] = <code>&quot;txDump()&quot;</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Распечатывает дамп области памяти в консоли. </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">address</td><td>Адрес начала распечатки. </td></tr>
    <tr><td class="paramname">name</td><td>Название распечатки (усекается до 8 символов).</td></tr>
  </table>
  </dd>
</dl>
<dl class="section note"><dt>Заметки</dt><dd>Распечатывается область памяти размером 256 байт. <br />
<br />
 После распечатки атрибуты консоли сбрасываются в 0x07 (светло-серый на черном).</dd></dl>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00062.htm#ga5cd767f8040c04a51cb0173bf9255247" title="Выводит развернутое диагностическое сообщение. ">TX_ERROR()</a>, <a class="el" href="a00062.htm#ga61997e2af7f7c3d2e40ef9a612000220" title="Выводит развернутое диагностическое сообщение в отладочном режиме. ">TX_DEBUG_ERROR()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;const char text[] = &quot;Каждому лектору - в портфель по вектору&quot;;</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;txDump (text);</div>
</div><!-- fragment --> </dd>
</dl>

</div>
</div>
<h2 class="groupheader">Переменные</h2>
<a class="anchor" id="gaf59817ad656dcbb3f9baebeb4d7f82f7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const double txPI</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Число Пи </p>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;if (txPI == 1) txMessageBox (&quot;Вы попали в другую Вселенную.&quot;, &quot;Поздравляем&quot;, MB_ICONSTOP);</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00049_source.htm">Example02/TXLib.h</a> строка <a class="el" href="a00049_source.htm#l03103">3103</a></p>

</div>
</div>
<a class="anchor" id="gaf59817ad656dcbb3f9baebeb4d7f82f7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">const double txPI</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Число Пи </p>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;if (txPI == 1) txMessageBox (&quot;Вы попали в другую Вселенную.&quot;, &quot;Поздравляем&quot;, MB_ICONSTOP);</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00050_source.htm">Example04/TXLib.h</a> строка <a class="el" href="a00050_source.htm#l03104">3104</a></p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Создано системой
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.10 </li>
  </ul>
</div>
</body>
</html>
