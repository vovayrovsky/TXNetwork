<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>TXNetwork: Служебное</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="Doxyfile.css" rel="stylesheet" type="text/css" />
<link href="Doxyfile.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="Logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">TXNetwork
   &#160;<span id="projectnumber">v. 0.5.1a</span>
   </div>
   <div id="projectbrief">&nbsp;ALL? Windows network in a sandbox :)</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Создано системой Doxygen 1.8.10 -->
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a00063.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#nested-classes">Классы</a> &#124;
<a href="#define-members">Макросы</a>  </div>
  <div class="headertitle">
<div class="title">Служебное</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Классы</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00015.htm">txAutoLock</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Класс для автоматической блокировки и разблокировки критической секции.  <a href="a00015.htm#details">Подробнее...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="define-members"></a>
Макросы</h2></td></tr>
<tr class="memitem:gafdd807831b131ba38d5856b6ee4e8287"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00063.htm#gafdd807831b131ba38d5856b6ee4e8287">txGDI</a>(command,  dc)&#160;&#160;&#160;( ((dc) == <a class="el" href="a00059.htm#ga4eb8174c83ee96b076204ac87914f726">txDC</a>())? <a class="el" href="a00063.htm#ga8fe4ec4c66cb69ce337747fe65dd0cc6">txUnlock</a> ( (<a class="el" href="a00063.htm#ga532fa8a55c4f3d4f94ff0fdceae732b2">txLock</a>(), (command)) ) : (command) )</td></tr>
<tr class="memdesc:gafdd807831b131ba38d5856b6ee4e8287"><td class="mdescLeft">&#160;</td><td class="mdescRight">Вызов функции Win32 GDI с автоматической блокировкой и разблокировкой.  <a href="#gafdd807831b131ba38d5856b6ee4e8287">Подробнее...</a><br /></td></tr>
<tr class="separator:gafdd807831b131ba38d5856b6ee4e8287"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafdd807831b131ba38d5856b6ee4e8287"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00063.htm#gafdd807831b131ba38d5856b6ee4e8287">txGDI</a>(command,  dc)&#160;&#160;&#160;( ((dc) == <a class="el" href="a00059.htm#ga4eb8174c83ee96b076204ac87914f726">txDC</a>())? <a class="el" href="a00063.htm#ga8fe4ec4c66cb69ce337747fe65dd0cc6">txUnlock</a> ( (<a class="el" href="a00063.htm#ga532fa8a55c4f3d4f94ff0fdceae732b2">txLock</a>(), (command)) ) : (command) )</td></tr>
<tr class="memdesc:gafdd807831b131ba38d5856b6ee4e8287"><td class="mdescLeft">&#160;</td><td class="mdescRight">Вызов функции Win32 GDI с автоматической блокировкой и разблокировкой.  <a href="#gafdd807831b131ba38d5856b6ee4e8287">Подробнее...</a><br /></td></tr>
<tr class="separator:gafdd807831b131ba38d5856b6ee4e8287"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Вспомогательные функции</h2></td></tr>
<tr class="memitem:gaff3d9c60900531f438a19216485bdd41"><td class="memItemLeft" align="right" valign="top">int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00059.htm#gaff3d9c60900531f438a19216485bdd41">txUpdateWindow</a> (int update=true)</td></tr>
<tr class="memdesc:gaff3d9c60900531f438a19216485bdd41"><td class="mdescLeft">&#160;</td><td class="mdescRight">Разрешает или запрещает автоматическое обновление изображения в окне.  <a href="#gaff3d9c60900531f438a19216485bdd41">Подробнее...</a><br /></td></tr>
<tr class="separator:gaff3d9c60900531f438a19216485bdd41"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad4545266069ed42c29d01e7aa68d82d6"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00059.htm#gad4545266069ed42c29d01e7aa68d82d6">txSelectObject</a> (HGDIOBJ obj, HDC dc=<a class="el" href="a00059.htm#ga4eb8174c83ee96b076204ac87914f726">txDC</a>(true))</td></tr>
<tr class="memdesc:gad4545266069ed42c29d01e7aa68d82d6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Устанавливает текущий активный объект GDI.  <a href="#gad4545266069ed42c29d01e7aa68d82d6">Подробнее...</a><br /></td></tr>
<tr class="separator:gad4545266069ed42c29d01e7aa68d82d6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga93cecf6b117fc403c0488f388b78a6d1"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00059.htm#ga93cecf6b117fc403c0488f388b78a6d1">txIDontWantToHaveAPauseAfterMyProgramBeforeTheWindowWillClose_AndIWillNotBeAskingWhereIsMyPicture</a> ()</td></tr>
<tr class="memdesc:ga93cecf6b117fc403c0488f388b78a6d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Делает нечто иногда удобное. См. название функции.  <a href="#ga93cecf6b117fc403c0488f388b78a6d1">Подробнее...</a><br /></td></tr>
<tr class="separator:ga93cecf6b117fc403c0488f388b78a6d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Очень служебные функции</h2></td></tr>
<tr class="memitem:ga30fb1a6913174dfcea5079391f655be2"><td class="memItemLeft" align="right" valign="top">WNDPROC&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00063.htm#ga30fb1a6913174dfcea5079391f655be2">txSetWindowsHook</a> (WNDPROC wndProc=NULL)</td></tr>
<tr class="memdesc:ga30fb1a6913174dfcea5079391f655be2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Устанавливает альтернативную функцию обработки оконных сообщений Windows (оконную функцию) для окна TXLib.  <a href="#ga30fb1a6913174dfcea5079391f655be2">Подробнее...</a><br /></td></tr>
<tr class="separator:ga30fb1a6913174dfcea5079391f655be2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga532fa8a55c4f3d4f94ff0fdceae732b2"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00063.htm#ga532fa8a55c4f3d4f94ff0fdceae732b2">txLock</a> (bool wait=true)</td></tr>
<tr class="memdesc:ga532fa8a55c4f3d4f94ff0fdceae732b2"><td class="mdescLeft">&#160;</td><td class="mdescRight">Блокировка холста (контекста рисования).  <a href="#ga532fa8a55c4f3d4f94ff0fdceae732b2">Подробнее...</a><br /></td></tr>
<tr class="separator:ga532fa8a55c4f3d4f94ff0fdceae732b2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8fe4ec4c66cb69ce337747fe65dd0cc6"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="a00063.htm#ga8fe4ec4c66cb69ce337747fe65dd0cc6">txUnlock</a> ()</td></tr>
<tr class="memdesc:ga8fe4ec4c66cb69ce337747fe65dd0cc6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Разблокировка холста  <a href="#ga8fe4ec4c66cb69ce337747fe65dd0cc6">Подробнее...</a><br /></td></tr>
<tr class="separator:ga8fe4ec4c66cb69ce337747fe65dd0cc6"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Подробное описание</h2>
<h2 class="groupheader">Макросы</h2>
<a class="anchor" id="gafdd807831b131ba38d5856b6ee4e8287"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define txGDI</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">command, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">dc&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;( ((dc) == <a class="el" href="a00059.htm#ga4eb8174c83ee96b076204ac87914f726">txDC</a>())? <a class="el" href="a00063.htm#ga8fe4ec4c66cb69ce337747fe65dd0cc6">txUnlock</a> ( (<a class="el" href="a00063.htm#ga532fa8a55c4f3d4f94ff0fdceae732b2">txLock</a>(), (command)) ) : (command) )</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Вызов функции Win32 GDI с автоматической блокировкой и разблокировкой. </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">command</td><td>Функция GDI (возможно, возвращающая значение) </td></tr>
    <tr><td class="paramname">dc</td><td>Дескриптор контекста рисования (холста) для вызова функции</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>Значение, возвращаемое вызываемой функцией GDI.</dd></dl>
<dl class="section note"><dt>Заметки</dt><dd>Если параметр dc соответствует основному холсту TXLib (совпадает с возвращаемым значением <a class="el" href="a00059.htm#ga4eb8174c83ee96b076204ac87914f726" title="Возвращает дескриптор контекста рисования основного холста ">txDC()</a>), то на время выполнения функции GDI поток, обновляющий окно TXLib, блокируется. <br />
</dd>
<dd>
Если в вызове функции GDI используются запятые, то используйте двойные скобки, чтобы получился один параметр, так как <a class="el" href="a00063.htm#gafdd807831b131ba38d5856b6ee4e8287" title="Вызов функции Win32 GDI с автоматической блокировкой и разблокировкой. ">txGDI()</a> это макрос.</dd></dl>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00059.htm#ga4eb8174c83ee96b076204ac87914f726" title="Возвращает дескриптор контекста рисования основного холста ">txDC()</a>, <a class="el" href="a00063.htm#ga532fa8a55c4f3d4f94ff0fdceae732b2" title="Блокировка холста (контекста рисования). ">txLock()</a>, <a class="el" href="a00063.htm#ga8fe4ec4c66cb69ce337747fe65dd0cc6" title="Разблокировка холста ">txUnlock()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;txGDI (( Rectangle (txDC(), x1, y1, x2, y2) ));  // Не забудьте про две ((ДВЕ)) скобки</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00049_source.htm">Example02/TXLib.h</a> строка <a class="el" href="a00049_source.htm#l03831">3831</a></p>

</div>
</div>
<a class="anchor" id="gafdd807831b131ba38d5856b6ee4e8287"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define txGDI</td>
          <td>(</td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">command, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname">dc&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td>&#160;&#160;&#160;( ((dc) == <a class="el" href="a00059.htm#ga4eb8174c83ee96b076204ac87914f726">txDC</a>())? <a class="el" href="a00063.htm#ga8fe4ec4c66cb69ce337747fe65dd0cc6">txUnlock</a> ( (<a class="el" href="a00063.htm#ga532fa8a55c4f3d4f94ff0fdceae732b2">txLock</a>(), (command)) ) : (command) )</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Вызов функции Win32 GDI с автоматической блокировкой и разблокировкой. </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">command</td><td>Функция GDI (возможно, возвращающая значение) </td></tr>
    <tr><td class="paramname">dc</td><td>Дескриптор контекста рисования (холста) для вызова функции</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>Значение, возвращаемое вызываемой функцией GDI.</dd></dl>
<dl class="section note"><dt>Заметки</dt><dd>Если параметр dc соответствует основному холсту TXLib (совпадает с возвращаемым значением <a class="el" href="a00059.htm#ga4eb8174c83ee96b076204ac87914f726" title="Возвращает дескриптор контекста рисования основного холста ">txDC()</a>), то на время выполнения функции GDI поток, обновляющий окно TXLib, блокируется. <br />
</dd>
<dd>
Если в вызове функции GDI используются запятые, то используйте двойные скобки, чтобы получился один параметр, так как <a class="el" href="a00063.htm#gafdd807831b131ba38d5856b6ee4e8287" title="Вызов функции Win32 GDI с автоматической блокировкой и разблокировкой. ">txGDI()</a> это все же макрос.</dd></dl>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00059.htm#ga4eb8174c83ee96b076204ac87914f726" title="Возвращает дескриптор контекста рисования основного холста ">txDC()</a>, <a class="el" href="a00063.htm#ga532fa8a55c4f3d4f94ff0fdceae732b2" title="Блокировка холста (контекста рисования). ">txLock()</a>, <a class="el" href="a00063.htm#ga8fe4ec4c66cb69ce337747fe65dd0cc6" title="Разблокировка холста ">txUnlock()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;txGDI (( Rectangle (txDC(), x1, y1, x2, y2) ));  // Не забудьте про две ((ДВЕ)) скобки</div>
</div><!-- fragment --> </dd>
</dl>

<p>См. определение в файле <a class="el" href="a00050_source.htm">Example04/TXLib.h</a> строка <a class="el" href="a00050_source.htm#l03832">3832</a></p>

</div>
</div>
<h2 class="groupheader">Функции</h2>
<a class="anchor" id="gaff3d9c60900531f438a19216485bdd41"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int txUpdateWindow </td>
          <td>(</td>
          <td class="paramtype">int&#160;</td>
          <td class="paramname"><em>update</em> = <code>true</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Разрешает или запрещает автоматическое обновление изображения в окне. </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">update</td><td>Режим обновления (true - разрешить, false - запретить).</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>Предыдущее состояние режима обновления. <pre class="fragment">     В отличие от txBegin() и txEnd(), которые поддерживают вложенные вызовы и работают как "скобки для
     замерзания картинки", txUpdateWindow() позволяет явно установить или снять блокировку автоматического
     обновления.

     Более полную информацию о блокировке см. в функциях txBegin(), txEnd() и txSleep().
</pre></dd></dl>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00059.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания. ">txBegin()</a>, <a class="el" href="a00059.htm#ga809dc04afd5348247846ee01ce9a06e6" title="Разблокирует обновление окна, заблокированное функцией txBegin(). ">txEnd()</a>, <a class="el" href="a00059.htm#ga56227ddccbe156355eaca50264bf3334" title="Задерживает выполнение программы на определенное время. ">txSleep()</a>, <a class="el" href="a00059.htm#gaff3d9c60900531f438a19216485bdd41" title="Разрешает или запрещает автоматическое обновление изображения в окне. ">txUpdateWindow()</a>, <a class="el" href="a00059.htm#gaa148d2040d20ed74cf46ab186c35f9ed" title="Запрещает или разрешает рисование мигающего курсора в окне. ">txTextCursor()</a>, <a class="el" href="a00063.htm#ga532fa8a55c4f3d4f94ff0fdceae732b2" title="Блокировка холста (контекста рисования). ">txLock()</a>, <a class="el" href="a00063.htm#ga8fe4ec4c66cb69ce337747fe65dd0cc6" title="Разблокировка холста ">txUnlock()</a>, <a class="el" href="a00063.htm#gafdd807831b131ba38d5856b6ee4e8287" title="Вызов функции Win32 GDI с автоматической блокировкой и разблокировкой. ">txGDI()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;txUpdateWindow (false);</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;...</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;txUpdateWindow();</div>
</div><!-- fragment --><dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">update</td><td>Режим обновления (true - разрешить, false - запретить).</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>Предыдущее состояние режима обновления. <pre class="fragment">     В отличие от txBegin() и txEnd(), которые поддерживают вложенные вызовы и работают как "скобки для
     замерзания картинки", txUpdateWindow() позволяет явно установить или снять блокировку автоматического
     обновления экрана.

     Более полную информацию о блокировке см. в функциях txBegin(), txEnd() и txSleep().
</pre></dd></dl>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00059.htm#gae92e621aaed81f90e4d142356e38762a" title="Блокирует обновление изображения окна, во избежание мигания. ">txBegin()</a>, <a class="el" href="a00059.htm#ga809dc04afd5348247846ee01ce9a06e6" title="Разблокирует обновление окна, заблокированное функцией txBegin(). ">txEnd()</a>, <a class="el" href="a00059.htm#ga56227ddccbe156355eaca50264bf3334" title="Задерживает выполнение программы на определенное время. ">txSleep()</a>, <a class="el" href="a00059.htm#gaff3d9c60900531f438a19216485bdd41" title="Разрешает или запрещает автоматическое обновление изображения в окне. ">txUpdateWindow()</a>, <a class="el" href="a00059.htm#gaa148d2040d20ed74cf46ab186c35f9ed" title="Запрещает или разрешает рисование мигающего курсора в окне. ">txTextCursor()</a>, <a class="el" href="a00063.htm#ga532fa8a55c4f3d4f94ff0fdceae732b2" title="Блокировка холста (контекста рисования). ">txLock()</a>, <a class="el" href="a00063.htm#ga8fe4ec4c66cb69ce337747fe65dd0cc6" title="Разблокировка холста ">txUnlock()</a>, <a class="el" href="a00063.htm#gafdd807831b131ba38d5856b6ee4e8287" title="Вызов функции Win32 GDI с автоматической блокировкой и разблокировкой. ">txGDI()</a></dd></dl>
</dd>
</dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;txUpdateWindow (false);</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;...</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;txUpdateWindow();</div>
</div><!-- fragment --> </dd>
</dl>

</div>
</div>
<a class="anchor" id="gad4545266069ed42c29d01e7aa68d82d6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txSelectObject </td>
          <td>(</td>
          <td class="paramtype">HGDIOBJ&#160;</td>
          <td class="paramname"><em>obj</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">HDC&#160;</td>
          <td class="paramname"><em>dc</em> = <code><a class="el" href="a00059.htm#ga4eb8174c83ee96b076204ac87914f726">txDC</a>(true)</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Устанавливает текущий активный объект GDI. </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">obj</td><td>Дескриптор объекта GDI </td></tr>
    <tr><td class="paramname">dc</td><td>Холст (контекст рисования), в котором устанавливается текущий активный объект GDI</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>Если операция была успешна - true, иначе - false.</dd></dl>
<dl class="section note"><dt>Заметки</dt><dd>Предыдущий выбранный объект того же типа (PEN/BRUSH/BITMAP и т.п.), как и <code>obj</code>, <b>уничтожается</b>.</dd></dl>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00059.htm#ga002fcc89d39312a72777ca8f08b2359e" title="Устанавливает текущий цвет и толщину линий, цвет текста. ">txSetColor()</a>, <a class="el" href="a00059.htm#ga446033e514db3f5b4f0ac9ae511cb1f6" title="Возвращает текущий цвет линий и текста. ">txGetColor()</a>, <a class="el" href="a00059.htm#ga9740c30c000a8163acb3a7b6a8f7edc4" title="Устанавливает текущий цвет заполнения фигур. ">txSetFillColor()</a>, <a class="el" href="a00059.htm#gac195074aa335131697243614f12b049c" title="Возвращает текущий цвет заполнения фигур. ">txGetFillColor()</a>, <a class="el" href="a00059.htm#ga3e94cfad3d9080241f84129d6e5c09b5" title="Названия предопределенных цветов. ">txColors</a>, <a class="el" href="a00059.htm#ga5e96023070a7e836d57ff9f4fac8a341" title="Создает (смешивает) цвет из трех базовых цветов (компонент). ">RGB()</a>, <a class="el" href="a00059.htm#gaf641d0fd6b8816e61d097cfb10de53d9" title="Выбирает текущий шрифт. ">txSelectFont()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;HPEN pen = CreatePen (PS_DASH, 1, RGB (255, 128, 0));</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;txSelectObject (pen);</div>
</div><!-- fragment --> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga93cecf6b117fc403c0488f388b78a6d1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txIDontWantToHaveAPauseAfterMyProgramBeforeTheWindowWillClose_AndIWillNotBeAskingWhereIsMyPicture </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Делает нечто иногда удобное. См. название функции. </p>
<dl class="section return"><dt>Возвращает</dt><dd>Если операция была успешна - true, иначе - false. <pre class="fragment">     У этой функции есть синоним с простым понятным названием, поищите его в файле библиотеки, около
     @a определения этой функции. Или можно &lt;small&gt;&amp;nbsp;&lt;/small&gt;&lt;span class=s&gt; скопировать &lt;/span&gt;&lt;small&gt;&amp;nbsp;&lt;/small&gt; набрать это километровое имя
     и посмотреть, что получится.
</pre></dd></dl>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00059.htm#gafce21ce98474d5559f316b3d47cdbfab" title="Создание окна рисования ">txCreateWindow()</a>, <a class="el" href="a00059.htm#ga56227ddccbe156355eaca50264bf3334" title="Задерживает выполнение программы на определенное время. ">txSleep()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;int main()</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;    {</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;    txCreateWindow (800, 600);</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;    txSetTextAlign (TA_CENTER);</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;    txTextOut (txGetExtentX()/2, txGetExtentY()/2, &quot;Press any key to exit!&quot;);</div>
</div><!-- fragment --> <div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;txIDontWantToHaveAPauseAfterMyProgramBeforeTheWindowWillClose_AndIWillNotBeAskingWhereIsMyPicture();</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;            return 0;</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;            }</div>
</div><!-- fragment --> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga30fb1a6913174dfcea5079391f655be2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">WNDPROC txSetWindowsHook </td>
          <td>(</td>
          <td class="paramtype">WNDPROC&#160;</td>
          <td class="paramname"><em>wndProc</em> = <code>NULL</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Устанавливает альтернативную функцию обработки оконных сообщений Windows (оконную функцию) для окна TXLib. </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">wndProc</td><td>Новая оконная функция окна TXLib. <br />
 Если NULL, то текущая оконная функция удаляется и устанавливается стандартная.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>Адрес предыдущей оконной функции для окна TXLib. <pre class="fragment">     Заданная оконная функция будет вызываться @b до обработки события средствами TXLib.
     Она должна быть функцией со следующим прототипом:
</pre> <div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;LRESULT CALLBACK NewWndProc (HWND window, UINT message, WPARAM wParam, LPARAM lParam);</div>
</div><!-- fragment --></dd></dl>
<dl class="section warning"><dt>Предупреждения</dt><dd>Оконная функция будет вызываться из вспомогательного (второго) потока, создаваемого <a class="el" href="a00059.htm#gafce21ce98474d5559f316b3d47cdbfab">txCreateWindow()</a>. Это <b>не</b> тот же самый поток, в котором выполняется main(). В связи с этим будьте внимательны при работе с глобальными переменными или их аналогами, т.к. может возникнуть "гонка
         потоков" (race condition).</dd>
<dd>
Если оконная функция вернет значение, не равное 0, то стандартная обработка сообщений средствами TXLib <b>не</b> будет произведена. Из-за этого, возможно, окно даже не сможет нормально закрыться. Придется завершать программу с помощью Alt-Ctrl-Del из диспетчера задач, или из более продвинутого диспетчера <a href="http://technet.microsoft.com/en-us/sysinternals/bb896653.aspx">Process Explorer</a>. Если Вы берете на себя обработку оконных сообщений, делайте ее по правилам Win32 (см. MSDN), включая вызов DefWindowProc().</dd></dl>
<dl class="section note"><dt>Заметки</dt><dd>Полностью поменять оконную функцию можно с помощью функций SetWindowLong или SetWindowLongPtr: <div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;WNDPROC OldWndProc = (WNDPROC) SetWindowLongPtr (txWindow(), GWL_WNDPROC, (LONG_PTR) NewWndProc);</div>
</div><!-- fragment --> При этом надо обязательно всегда вызывать старую оконную функцию с помощью CallWindowProc, (см. MSDN), иначе последствия будут такими же плачевными, как описаны выше.</dd></dl>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00059.htm#gafce21ce98474d5559f316b3d47cdbfab" title="Создание окна рисования ">txCreateWindow()</a>, <a class="el" href="a00016.htm" title="Базовый класс для диалоговых окон. ">txDialog</a>, <a class="el" href="a00061.htm#ga364e78410e64fb751d3a0253d08f98e2" title="Ввод строки в отдельном окне. ">txInputBox()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;LRESULT CALLBACK MyWndProc (HWND window, UINT message, WPARAM wParam, LPARAM lParam);</div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;</div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;int main()</div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;    {</div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;    txCreateWindow (GetSystemMetrics (SM_CXSCREEN) / 4, GetSystemMetrics (SM_CYSCREEN) / 4);</div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;</div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;    txSetWindowsHook (MyWndProc);</div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;    txDrawText (0, 0, txGetExtentX(), txGetExtentY(), &quot;MOV txWindow, eax [please]&quot;);</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;    return 0;</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;    }</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;LRESULT CALLBACK MyWndProc (HWND window, UINT message, WPARAM wParam, LPARAM lParam)</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;    {</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;    if (message == WM_MOVE) txMessageBox (&quot;  I like to MOVe it, MOVe it&quot;, &quot;TXLib 2 Real&quot;, MB_ICONINFORMATION);</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;    static int i = 0;</div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;    if (i++ % 10 == 0) printf (&quot;\b&quot; &quot;%c&quot;, &quot;-\\|/&quot; [i/10 % 4]);  // Прропппеллллерррр</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;    return 0;  // Продолжить обработку сообщения средствами TXLib</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;    }</div>
</div><!-- fragment --> </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga532fa8a55c4f3d4f94ff0fdceae732b2"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txLock </td>
          <td>(</td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>wait</em> = <code>true</code></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Блокировка холста (контекста рисования). </p>
<dl class="params"><dt>Аргументы</dt><dd>
  <table class="params">
    <tr><td class="paramname">wait</td><td>Ожидать конца перерисовки окна вспомогательным потоком</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Возвращает</dt><dd>Состояние блокировки <pre class="fragment">     Перед вызовом любых функций Win32 GDI необходимо заблокировать холст функцией txLock() и затем
     разблокировать с помощью txUnlock(). Это связано с тем, что обновление содержимого окна (для тех, кто
     знает Win32: обработка сообщения WM_PAINT) в библиотеке TXLib происходит в отдельном вспомогательном
     потоке. Надолго блокировать его нельзя - при заблокированном потоке окно не обновляется.

     txLock() использует EnterCriticalSection(), и физически приостанавливает поток, обновляющий окно, так
     что надолго блокировать нельзя. Иначе тормозится обработка оконных сообщений, окно перестает
     реагировать на действия пользователя и перерисовываться. Нельзя также вызывать txSleep() или Sleep()
     при заблокированном потоке.

     txLock() / txUnlock() - это низкоуровневый механизм. Он отличается от более простого высокоуровневого
     механизма txBegin() / txEnd() / txUpdateWindow(), который не приостанавливает поток, а просто
     отключает принудительное постоянное обновление окна.
</pre></dd></dl>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00059.htm#ga4eb8174c83ee96b076204ac87914f726" title="Возвращает дескриптор контекста рисования основного холста ">txDC()</a>, <a class="el" href="a00063.htm#ga532fa8a55c4f3d4f94ff0fdceae732b2" title="Блокировка холста (контекста рисования). ">txLock()</a>, <a class="el" href="a00063.htm#ga8fe4ec4c66cb69ce337747fe65dd0cc6" title="Разблокировка холста ">txUnlock()</a>, <a class="el" href="a00063.htm#gafdd807831b131ba38d5856b6ee4e8287" title="Вызов функции Win32 GDI с автоматической блокировкой и разблокировкой. ">txGDI()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd>См. исходный текст функций _txCanvas_OnPAINT() и _txConsole_Draw() в TXLib.h. </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga8fe4ec4c66cb69ce337747fe65dd0cc6"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool txUnlock </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Разблокировка холста </p>
<dl class="section return"><dt>Возвращает</dt><dd>Состояние блокировки (всегда false). <pre class="fragment">     Более подробно см. в описании txLock().
</pre></dd></dl>
<dl class="section see"><dt>См. также</dt><dd><a class="el" href="a00059.htm#ga4eb8174c83ee96b076204ac87914f726" title="Возвращает дескриптор контекста рисования основного холста ">txDC()</a>, <a class="el" href="a00063.htm#ga532fa8a55c4f3d4f94ff0fdceae732b2" title="Блокировка холста (контекста рисования). ">txLock()</a>, <a class="el" href="a00063.htm#gafdd807831b131ba38d5856b6ee4e8287" title="Вызов функции Win32 GDI с автоматической блокировкой и разблокировкой. ">txGDI()</a></dd></dl>
<dl class="usage">
<dt><b>Примеры использования:</b></dt>
<dd>См. исходный текст функций _txCanvas_OnPAINT() и _txConsole_Draw() в TXLib.h. </dd>
</dl>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Создано системой
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.10 </li>
  </ul>
</div>
</body>
</html>
