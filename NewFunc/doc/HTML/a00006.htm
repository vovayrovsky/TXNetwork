<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>TXNetwork: Второй пример: сетевая рисовалка.</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="Doxyfile.css" rel="stylesheet" type="text/css" />
<link href="Doxyfile.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="Logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">TXNetwork
   &#160;<span id="projectnumber">v. 0.6.3a</span>
   </div>
   <div id="projectbrief">&nbsp;ALL? Windows network in a sandbox :)</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Создано системой Doxygen 1.8.10 -->
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a00006.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">Второй пример: сетевая рисовалка. </div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><p>Можно передавать структуры в обе стороны. Как от сервера к клиенту, так и от сервера к клиенту.</p>
<hr/>
<h1><a class="anchor" id="Example2_Client_Code"></a>
Файл: client.cpp - код клиента.</h1>
<div class="fragment"><div class="line"><span class="comment">//{===========================================================================</span></div>
<div class="line"><span class="comment"></span><span class="comment">//}===========================================================================</span></div>
<div class="line"></div>
<div class="line"><span class="preprocessor">#include &quot;proto.h&quot;</span></div>
<div class="line"></div>
<div class="line"><span class="preprocessor">#define ANOTHER_PEER_IP &quot;localhost&quot; //Меняйте адрес тут :)</span></div>
<div class="line"></div>
<div class="line"><span class="keywordtype">void</span> NetPaint (<a class="code" href="a00013.htm">TX_SOCKET</a> paint_peer);</div>
<div class="line"></div>
<div class="line"><span class="keywordtype">void</span> CursorDraw (NetCursor_t cursor, COLORREF color);</div>
<div class="line"><span class="keywordtype">void</span> CursorMove (NetCursor_t* cursor);</div>
<div class="line"></div>
<div class="line"><span class="keywordtype">int</span> main()</div>
<div class="line">{</div>
<div class="line">txCreateWindow (1024, 768);</div>
<div class="line"></div>
<div class="line">printf (<span class="stringliteral">&quot;Searching for server...\n&quot;</span>);</div>
<div class="line"></div>
<div class="line"><a class="code" href="a00013.htm">TX_SOCKET</a> paint_peer = <a class="code" href="a00017.htm#ga28c1c1600ff0df0a1b4443284e14b6d5">txCreateSocket</a> (<a class="code" href="a00017.htm#gga0696d269feb958d9f6fa2d0e1cf7e517a5594ab6ae4c1de966d629c79fd2ffc58">TX_CLIENT</a>, ANOTHER_PEER_IP);</div>
<div class="line"></div>
<div class="line">printf (<span class="stringliteral">&quot;Start draw meow.\n&quot;</span>);</div>
<div class="line"></div>
<div class="line"><span class="keywordflow">if</span> (<a class="code" href="a00017.htm#ga5e61ac3a46192caddcd98b27325ef953">txnAssert</a> (paint_peer) == <a class="code" href="a00018.htm#gaa56d5be53827cc51bd2a02fe580e00c9">TXN_NOT_CREATED</a>)</div>
<div class="line">    {</div>
<div class="line">    printf (<span class="stringliteral">&quot;Can&#39;t find server on this IP address.\n&quot;</span>);</div>
<div class="line">    <span class="keywordflow">return</span> -1;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">NetPaint (paint_peer);</div>
<div class="line"></div>
<div class="line"><span class="keywordflow">return</span> 0;</div>
<div class="line">}</div>
<div class="line"></div>
<div class="line"><span class="keywordtype">void</span> NetPaint (<a class="code" href="a00013.htm">TX_SOCKET</a> paint_peer)</div>
<div class="line">{</div>
<div class="line">NetCursor_t cursor        = {100, 100, -1, -1, CUR_NOP};</div>
<div class="line">NetCursor_t peer_cursor   = {100, 100, -1, -1, CUR_NOP};</div>
<div class="line"></div>
<div class="line"><span class="keywordflow">while</span> (!GetAsyncKeyState (VK_SPACE))</div>
<div class="line">    {</div>
<div class="line">    <span class="keywordflow">if</span> (peer_cursor.action == CUR_EXIT)</div>
<div class="line">        <span class="keywordflow">break</span>;</div>
<div class="line"></div>
<div class="line">    CursorDraw(cursor, TX_LIGHTGREEN);</div>
<div class="line">    CursorDraw(peer_cursor, TX_LIGHTRED);</div>
<div class="line"></div>
<div class="line">    CursorMove (&amp;cursor);</div>
<div class="line"></div>
<div class="line">    <a class="code" href="a00017.htm#gaf700cdda64317854f43186f0cfa003a1">txRecvFrom</a>  (paint_peer, &amp;peer_cursor, <span class="keyword">sizeof</span>(peer_cursor));</div>
<div class="line">    <a class="code" href="a00017.htm#gab1932ecc57580c15659f0cc01b695262">txSendTo</a>    (paint_peer, &amp;cursor     , <span class="keyword">sizeof</span>(cursor));</div>
<div class="line"></div>
<div class="line">    txSleep (10);</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">cursor.action = CUR_EXIT;</div>
<div class="line"><a class="code" href="a00017.htm#gab1932ecc57580c15659f0cc01b695262">txSendTo</a>    (paint_peer, &amp;cursor, <span class="keyword">sizeof</span>(cursor));</div>
<div class="line">}</div>
<div class="line"></div>
<div class="line"><span class="keywordtype">void</span> CursorMove(NetCursor_t* cursor)</div>
<div class="line">{</div>
<div class="line">cursor-&gt;old_x = cursor-&gt;x;</div>
<div class="line">cursor-&gt;old_y = cursor-&gt;y;</div>
<div class="line"></div>
<div class="line">cursor-&gt;x = txMouseX();</div>
<div class="line">cursor-&gt;y = txMouseY();</div>
<div class="line"></div>
<div class="line"><span class="keywordflow">if</span> (txMouseButtons() == 1)</div>
<div class="line">    cursor-&gt;action = CUR_DRAW;</div>
<div class="line"><span class="keywordflow">else</span></div>
<div class="line">    cursor-&gt;action = CUR_NOP;</div>
<div class="line">}</div>
<div class="line"></div>
<div class="line"><span class="keywordtype">void</span> CursorDraw (NetCursor_t cursor, COLORREF color)</div>
<div class="line">{</div>
<div class="line">txSetFillColor (color);</div>
<div class="line">txSetColor     (color, 10);</div>
<div class="line"></div>
<div class="line"><span class="keywordflow">if</span> (cursor.action == 1)</div>
<div class="line">    txLine (cursor.old_x, cursor.old_y, cursor.x, cursor.y);</div>
<div class="line">}</div>
</div><!-- fragment --><hr/>
<h1><a class="anchor" id="Example2_Server_Code"></a>
Файл: server.cpp - код клиента.</h1>
<div class="fragment"><div class="line"><span class="comment">//{===========================================================================</span></div>
<div class="line"><span class="comment"></span><span class="comment">//}===========================================================================</span></div>
<div class="line"></div>
<div class="line"><span class="preprocessor">#include &quot;proto.h&quot;</span></div>
<div class="line"></div>
<div class="line"><span class="keywordtype">void</span> NetPaint (<a class="code" href="a00013.htm">TX_SOCKET</a> paint_peer);</div>
<div class="line"></div>
<div class="line"><span class="keywordtype">void</span> CursorDraw (NetCursor_t cursor, COLORREF color);</div>
<div class="line"><span class="keywordtype">void</span> CursorMove (NetCursor_t* cursor);</div>
<div class="line"></div>
<div class="line"><span class="keywordtype">int</span> main()</div>
<div class="line">{</div>
<div class="line">txCreateWindow (1024, 768);</div>
<div class="line"></div>
<div class="line">printf (<span class="stringliteral">&quot;Searching for client...\n&quot;</span>);</div>
<div class="line"></div>
<div class="line"><a class="code" href="a00013.htm">TX_SOCKET</a> paint_peer = <a class="code" href="a00017.htm#ga28c1c1600ff0df0a1b4443284e14b6d5">txCreateSocket</a> (<a class="code" href="a00017.htm#gga0696d269feb958d9f6fa2d0e1cf7e517a348f2bd7cd4f969b024f32d9cb4c417c">TX_SERVER</a>, <span class="stringliteral">&quot;&quot;</span>);</div>
<div class="line"></div>
<div class="line">printf (<span class="stringliteral">&quot;Start draw meow.\n&quot;</span>);</div>
<div class="line"></div>
<div class="line"><span class="keywordflow">if</span> (<a class="code" href="a00017.htm#ga5e61ac3a46192caddcd98b27325ef953">txnAssert</a> (paint_peer) == <a class="code" href="a00018.htm#gaa56d5be53827cc51bd2a02fe580e00c9">TXN_NOT_CREATED</a>)</div>
<div class="line">    {</div>
<div class="line">    printf (<span class="stringliteral">&quot;Can&#39;t create socket. Maybe, port are busy.\n&quot;</span>);</div>
<div class="line">    <span class="keywordflow">return</span> -1;</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">NetPaint (paint_peer);</div>
<div class="line"></div>
<div class="line"><span class="keywordflow">return</span> 0;</div>
<div class="line">}</div>
<div class="line"></div>
<div class="line"><span class="keywordtype">void</span> NetPaint (<a class="code" href="a00013.htm">TX_SOCKET</a> paint_peer)</div>
<div class="line">{</div>
<div class="line">NetCursor_t cursor        = {100, 100, -1, -1, CUR_NOP};</div>
<div class="line">NetCursor_t peer_cursor   = {100, 100, -1, -1, CUR_NOP};</div>
<div class="line"></div>
<div class="line"><span class="keywordflow">while</span> (!GetAsyncKeyState (VK_ESCAPE))</div>
<div class="line">    {</div>
<div class="line">    <span class="keywordflow">if</span> (peer_cursor.action == CUR_EXIT)</div>
<div class="line">        <span class="keywordflow">break</span>;</div>
<div class="line"></div>
<div class="line">    CursorDraw(cursor, TX_LIGHTGREEN);</div>
<div class="line">    CursorDraw(peer_cursor, TX_LIGHTRED);</div>
<div class="line"></div>
<div class="line">    CursorMove (&amp;cursor);</div>
<div class="line"></div>
<div class="line">    <a class="code" href="a00017.htm#gab1932ecc57580c15659f0cc01b695262">txSendTo</a>    (paint_peer, &amp;cursor     , <span class="keyword">sizeof</span>(cursor));</div>
<div class="line">    <a class="code" href="a00017.htm#gaf700cdda64317854f43186f0cfa003a1">txRecvFrom</a>  (paint_peer, &amp;peer_cursor, <span class="keyword">sizeof</span>(peer_cursor));</div>
<div class="line"></div>
<div class="line">    txSleep (10);</div>
<div class="line">    }</div>
<div class="line"></div>
<div class="line">cursor.action = CUR_EXIT;</div>
<div class="line"><a class="code" href="a00017.htm#gab1932ecc57580c15659f0cc01b695262">txSendTo</a> (paint_peer, &amp;cursor, <span class="keyword">sizeof</span>(cursor));</div>
<div class="line">}</div>
<div class="line"></div>
<div class="line"><span class="keywordtype">void</span> CursorMove(NetCursor_t* cursor)</div>
<div class="line">{</div>
<div class="line">cursor-&gt;old_x = cursor-&gt;x;</div>
<div class="line">cursor-&gt;old_y = cursor-&gt;y;</div>
<div class="line"></div>
<div class="line">cursor-&gt;x = txMouseX();</div>
<div class="line">cursor-&gt;y = txMouseY();</div>
<div class="line"></div>
<div class="line"><span class="keywordflow">if</span> (txMouseButtons() == 1)</div>
<div class="line">    cursor-&gt;action = CUR_DRAW;</div>
<div class="line"><span class="keywordflow">else</span></div>
<div class="line">    cursor-&gt;action = CUR_NOP;</div>
<div class="line">}</div>
<div class="line"></div>
<div class="line"><span class="keywordtype">void</span> CursorDraw (NetCursor_t cursor, COLORREF color)</div>
<div class="line">{</div>
<div class="line">txSetFillColor (color);</div>
<div class="line">txSetColor     (color, 10);</div>
<div class="line"></div>
<div class="line"><span class="keywordflow">if</span> (cursor.action == CUR_DRAW)</div>
<div class="line">    txLine (cursor.old_x, cursor.old_y, cursor.x, cursor.y);</div>
<div class="line">}</div>
</div><!-- fragment --><hr/>
<h1><a class="anchor" id="Example2_Proto_Code"></a>
Файл: proto.h - общие структуры и данные сервера и клиента.</h1>
<div class="fragment"><div class="line"><span class="comment">//{===========================================================================</span></div>
<div class="line"><span class="comment"></span><span class="comment">//}===========================================================================</span></div>
<div class="line"><span class="comment">// proto.h</span></div>
<div class="line"></div>
<div class="line"><span class="comment">// 1. server -&gt; client: NetCursor_t</span></div>
<div class="line"><span class="comment">// 2. server &lt;- client: NetCursor_t</span></div>
<div class="line"></div>
<div class="line"><span class="preprocessor">#include &quot;<a class="code" href="a00015.htm">TXNetwork.h</a>&quot;</span></div>
<div class="line"><span class="preprocessor">#include &quot;TXLib.h&quot;</span></div>
<div class="line"></div>
<div class="line"><span class="keyword">enum</span> CursorActions</div>
<div class="line">    {</div>
<div class="line">    CUR_NOP = 0,</div>
<div class="line">    CUR_DRAW = 1,</div>
<div class="line">    CUR_EXIT = -1</div>
<div class="line">    };</div>
<div class="line"></div>
<div class="line"><span class="keyword">struct </span>NetCursor_t</div>
<div class="line">    {</div>
<div class="line">    <span class="keywordtype">int</span>     x,     y;</div>
<div class="line">    <span class="keywordtype">int</span> old_x, old_y;</div>
<div class="line">    CursorActions action;</div>
<div class="line">    };</div>
</div><!-- fragment --> </div></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Создано системой
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.10 </li>
  </ul>
</div>
</body>
</html>
