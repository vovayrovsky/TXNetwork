<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>TXNetwork: Очень простой пример. Простая пересылка вводимой строки.</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtreedata.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
  $(window).load(resizeHeight);
</script>
<link href="Doxyfile.css" rel="stylesheet" type="text/css" />
<link href="Doxyfile.css" rel="stylesheet" type="text/css"/>
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="Logo_small.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">TXNetwork
   &#160;<span id="projectnumber">v. 0.6.3a</span>
   </div>
   <div id="projectbrief">&nbsp;ALL? Windows network in a sandbox :)</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Создано системой Doxygen 1.8.10 -->
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('a00002.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">Очень простой пример. Простая пересылка вводимой строки. </div>  </div>
</div><!--header-->
<div class="contents">
<div class="textblock"><hr/>
<h1><a class="anchor" id="Example1_01"></a>
Простейшая программа</h1>
<p>Первое, что вы должны сделать при использовании библиотеки TXNetwork это указать компилятору, что нужно присоединить файл Ws2_32 (который используется Winsock'ом). Делается это просто: в настройках линкера укажите файл Ws2_32 (без расширения). Настройки линкера находятся в (Code::Blocks)"Settings\Compiler...". Далее выбираете вкладку "Linker Settings", и смотрите в левое окно: Если есть что-то похожее на "Ws2_32", то все хорошо. Иначе нажмите кнопку "Add", и введите это название. Нажмите "ОК". Все, вы готовы использовать TXNetwork. Также можно указать опцию компилятора -lWs2_32</p>
<p><b>Подключение и инициализация</b><br />
 В коде библиотека подключается как обычно. При использовании с TXLib'ом подключайте TXNetwork до него. Например:</p>
<div class="fragment"><div class="line"><span class="preprocessor">#include &quot;<a class="code" href="a00015.htm">TXNetwork.h</a>&quot;</span></div>
<div class="line"><span class="preprocessor">#include &quot;TXLib.h&quot;</span></div>
</div><!-- fragment --><p>Разберем пример пересылки <small>&#160;</small><span class="s"> кота </span><small>&#160;</small> строки.</p>
<p>Первый файл - файл протокола общения. В нем описываются общие части клиента и сервера, а также сам порядок общения.</p>
<div class="fragment"><div class="line"><span class="comment">// 1. server -&gt; client: Message (char[Message_size])</span></div>
<div class="line"><span class="comment">// 2. server &lt;- client: Message (char[Message_size])</span></div>
<div class="line"></div>
<div class="line"><span class="preprocessor">#include &quot;<a class="code" href="a00015.htm">TXNetwork.h</a>&quot;</span></div>
<div class="line"><span class="preprocessor">#include &quot;TXlib.h&quot;</span></div>
<div class="line"></div>
<div class="line"><span class="keyword">const</span> <span class="keywordtype">size_t</span> Message_size = 256;</div>
</div><!-- fragment --><p>Второй файл - пример клиента. В начале идет подключение файла протокола и определение IP адреса.</p>
<div class="fragment"><div class="line"><span class="preprocessor">#include &quot;proto.h&quot;</span></div>
<div class="line"><span class="preprocessor">#define SERVER_IP &quot;localhost&quot; // IP адрес писать здесь. Например: &quot;192.168.0.1&quot;</span></div>
</div><!-- fragment --><p>Далее объявляется main, открывается окно и печатается приветственное сообщение.</p>
<div class="fragment"><div class="line"><span class="keywordtype">int</span> main()</div>
<div class="line">{</div>
<div class="line">txCreateWindow (1024, 768);</div>
<div class="line"></div>
<div class="line">printf (<span class="stringliteral">&quot;Searching for server...\n&quot;</span>);</div>
</div><!-- fragment --><p>Тут начинается использование <small>&#160;</small><span class="s"> черной магии </span><small>&#160;</small> txNetwork'a. Объявляется и создается сокет.</p>
<div class="fragment"><div class="line"><a class="code" href="a00013.htm">TX_SOCKET</a> client = <a class="code" href="a00017.htm#ga28c1c1600ff0df0a1b4443284e14b6d5">txCreateSocket</a> (<a class="code" href="a00017.htm#gga0696d269feb958d9f6fa2d0e1cf7e517a5594ab6ae4c1de966d629c79fd2ffc58">TX_CLIENT</a>, SERVER_IP);</div>
</div><!-- fragment --><p>Далее создается буфер обмена.</p>
<div class="fragment"><div class="line"><span class="keywordtype">char</span> str[Message_size] = <span class="stringliteral">&quot;&quot;</span>;</div>
</div><!-- fragment --><p>Теперь принимаем строку от клиента и записываем ее в свежесозданный буфер.</p>
<div class="fragment"><div class="line"><a class="code" href="a00017.htm#gaf700cdda64317854f43186f0cfa003a1">txRecvFrom</a> (client, str, Message_size);</div>
</div><!-- fragment --><p>Выводим полученную строку на экран и вводим ту строку, которую мы хотим отправить серверу.</p>
<div class="fragment"><div class="line">printf (<span class="stringliteral">&quot;in: %s\nout: &quot;</span>, str);</div>
<div class="line">scanf (<span class="stringliteral">&quot;%s&quot;</span>, str);</div>
</div><!-- fragment --><p>Отправляем строку серверу и завершаемся.</p>
<div class="fragment"><div class="line"><a class="code" href="a00017.htm#gab1932ecc57580c15659f0cc01b695262">txSendTo</a> (client, str, Message_size);</div>
<div class="line"></div>
<div class="line"><span class="keywordflow">return</span> 0;</div>
<div class="line">}</div>
</div><!-- fragment --><p>В коде сервера все аналогично, за исключением порядка пересылки строк. Далее представлен весь код примеров.</p>
<hr/>
<h1><a class="anchor" id="Example0_Client_Code"></a>
Файл: client.cpp - код клиента.</h1>
<div class="fragment"><div class="line"><span class="comment">// client.cpp</span></div>
<div class="line"></div>
<div class="line"><span class="preprocessor">#include &quot;proto.h&quot;</span></div>
<div class="line"></div>
<div class="line"><span class="preprocessor">#define SERVER_IP &quot;localhost&quot; //IP адрес писать здесь.</span></div>
<div class="line"></div>
<div class="line"><span class="keywordtype">int</span> main()</div>
<div class="line">{</div>
<div class="line">txCreateWindow (1024, 768);</div>
<div class="line"></div>
<div class="line">printf (<span class="stringliteral">&quot;Searching for server...\n&quot;</span>);</div>
<div class="line"><a class="code" href="a00013.htm">TX_SOCKET</a> client = <a class="code" href="a00017.htm#ga28c1c1600ff0df0a1b4443284e14b6d5">txCreateSocket</a> (<a class="code" href="a00017.htm#gga0696d269feb958d9f6fa2d0e1cf7e517a5594ab6ae4c1de966d629c79fd2ffc58">TX_CLIENT</a>, SERVER_IP);</div>
<div class="line"></div>
<div class="line"><span class="keywordtype">char</span> str[Message_size] = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"></div>
<div class="line"><a class="code" href="a00017.htm#gaf700cdda64317854f43186f0cfa003a1">txRecvFrom</a> (client, str, Message_size);</div>
<div class="line">printf (<span class="stringliteral">&quot;in: %s\nout: &quot;</span>, str);</div>
<div class="line"></div>
<div class="line">scanf (<span class="stringliteral">&quot;%s&quot;</span>, str);</div>
<div class="line"><a class="code" href="a00017.htm#gab1932ecc57580c15659f0cc01b695262">txSendTo</a> (client, str, Message_size);</div>
<div class="line"></div>
<div class="line"><span class="keywordflow">return</span> 0;</div>
<div class="line">}</div>
</div><!-- fragment --><hr/>
<h1><a class="anchor" id="Example0_Server_Code"></a>
Файл: server.cpp - код клиента.</h1>
<div class="fragment"><div class="line"><span class="comment">// server.cpp</span></div>
<div class="line"></div>
<div class="line"><span class="preprocessor">#include &quot;proto.h&quot;</span></div>
<div class="line"></div>
<div class="line"><span class="keywordtype">int</span> main()</div>
<div class="line">{</div>
<div class="line">txCreateWindow (1024, 768);</div>
<div class="line"></div>
<div class="line">printf (<span class="stringliteral">&quot;Searching for client...\n&quot;</span>);</div>
<div class="line"><a class="code" href="a00013.htm">TX_SOCKET</a> client = <a class="code" href="a00017.htm#ga28c1c1600ff0df0a1b4443284e14b6d5">txCreateSocket</a> (<a class="code" href="a00017.htm#gga0696d269feb958d9f6fa2d0e1cf7e517a348f2bd7cd4f969b024f32d9cb4c417c">TX_SERVER</a>, <span class="stringliteral">&quot;&quot;</span>);</div>
<div class="line"></div>
<div class="line"><span class="keywordtype">char</span> str[Message_size] = <span class="stringliteral">&quot;&quot;</span>;</div>
<div class="line"></div>
<div class="line">printf (<span class="stringliteral">&quot;out: &quot;</span>);</div>
<div class="line">scanf (<span class="stringliteral">&quot;%s&quot;</span>, str);</div>
<div class="line"><a class="code" href="a00017.htm#gab1932ecc57580c15659f0cc01b695262">txSendTo</a> (client, str, Message_size);</div>
<div class="line"></div>
<div class="line"><a class="code" href="a00017.htm#gaf700cdda64317854f43186f0cfa003a1">txRecvFrom</a> (client, str, Message_size);</div>
<div class="line">printf (<span class="stringliteral">&quot;in: %s\n&quot;</span>, str);</div>
<div class="line"></div>
<div class="line"><span class="keywordflow">return</span> 0;</div>
<div class="line">}</div>
</div><!-- fragment --><hr/>
<h1><a class="anchor" id="Example0_Proto_Code"></a>
Файл: proto.h - общие структуры и данные сервера и клиента.</h1>
<div class="fragment"><div class="line"><span class="comment">// proto.h</span></div>
<div class="line"></div>
<div class="line"><span class="comment">// 1. server -&gt; client: Message (char[Message_size])</span></div>
<div class="line"><span class="comment">// 2. server &lt;- client: Message (char[Message_size])</span></div>
<div class="line"></div>
<div class="line"><span class="preprocessor">#include &quot;<a class="code" href="a00015.htm">TXNetwork.h</a>&quot;</span></div>
<div class="line"><span class="preprocessor">#include &quot;TXLib.h&quot;</span></div>
<div class="line"></div>
<div class="line"><span class="keyword">const</span> <span class="keywordtype">size_t</span> Message_size = 256;</div>
</div><!-- fragment --> </div></div><!-- contents -->
</div><!-- doc-content -->
<!-- start footer part -->
<div id="nav-path" class="navpath"><!-- id is needed for treeview function! -->
  <ul>
    <li class="footer">Создано системой
    <a href="http://www.doxygen.org/index.html">
    <img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.8.10 </li>
  </ul>
</div>
</body>
</html>
